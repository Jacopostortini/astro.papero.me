{"remainingRequest":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/thread-loader/dist/cjs.js!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/babel-loader/lib/index.js!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/eslint-loader/index.js??ref--13-0!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/LobbyScene.js","dependencies":[{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/LobbyScene.js","mtime":1618640656721},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/cache-loader/dist/cjs.js","mtime":1618298483685},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/thread-loader/dist/cjs.js","mtime":1618298485037},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/babel-loader/lib/index.js","mtime":1618298483657},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/eslint-loader/index.js","mtime":1618298483941}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/LobbyScene.js"],"names":["Phaser","websocketEvents","defaultSettings","arcadeNormalizers","sceneKeys","detectTouchScreen","loadImages","setInputHandlers","velocityFromAngle","LobbyScene","socket","key","lobby","physics","default","players","currentPlayer","settings","touchScreen","ships","availableBullets","width","sys","game","canvas","height","onresize","parent","document","getElementById","Math","min","offsetWidth","offsetHeight","window","innerWidth","scale","resize","world","setBounds","addEventListener","events","on","removeEventListener","emit","LOBBY_MODIFIED","onLobbyModified","add","image","setOrigin","setReloadInterval","setOnDestroy","time","delta","Array","isArray","length","forEach","player","ship","localId","body","velocity","x","y","angle","getAngle","bulletsLoaded","children","iterate","bullet","index","topLeft","getTopLeft","bottomLeft","getBottomLeft","centerLeft","cos","rotation","sin","rotationKey","isDown","rotating","angularVelocity","setVelocity","atan","PI","color","posX","Between","posY","sprite","setCollideWorldBounds","setBounce","group","collideWorldBounds","quantity","visible","active","id","i","currentlyPlayingIds","push","previousPlayingIds","newShips","oldShips","includes","setTexture","findPlayerById","createNewShip","idsToRemove","filter","destroy","data","position","bulletVelocity","getFirstAlive","setActive","setVisible","createBullet","handler","firstDead","getFirstDead","clearInterval","reloadInterval","setInterval","reloadingVelocity","Scene"],"mappings":"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","sourcesContent":["import Phaser from \"phaser\";\nimport websocketEvents from \"../constants/websocketEvents\";\nimport {defaultSettings, arcadeNormalizers, sceneKeys} from \"../constants/gameSettings\";\nimport {detectTouchScreen} from \"../constants/constants\";\nimport {loadImages, setInputHandlers, velocityFromAngle} from \"./scene\";\n\nexport default class LobbyScene extends Phaser.Scene {\n\n    constructor(socket) {\n        super({\n            key: sceneKeys.lobby,\n            physics: {\n                default: \"arcade\"\n            }\n        });\n        this.socket = socket;\n        this.lobby = {\n            players: [],\n            currentPlayer: null,\n            settings: defaultSettings\n        }\n\n        this.touchScreen = detectTouchScreen();\n\n        this.ships = {};\n        this.availableBullets = 3;\n    }\n\n    preload(){\n\n        //load images\n        this.width = this.sys.game.canvas.width;\n        this.height = this.sys.game.canvas.height;\n\n        loadImages(this, sceneKeys.lobby);\n\n        const onresize = () => {\n            const parent = document.getElementById(\"players-wrapper\");\n            const height = Math.min(parent.offsetWidth, parent.offsetHeight);\n            const width = window.innerWidth>750 ? height : window.innerWidth*0.8\n            this.game.scale.resize(width, height);\n            this.physics.world.setBounds(0, 0, width, height);\n        };\n        window.addEventListener(\"resize\", onresize);\n        this.events.on(\"destroy\", ()=>{\n            window.removeEventListener(\"resize\", onresize);\n        });\n\n    }\n\n    create(){\n        //Event lobby-modified\n        this.socket.emit(websocketEvents.LOBBY_MODIFIED);\n        this.socket.on(websocketEvents.LOBBY_MODIFIED, game => this.onLobbyModified(game));\n\n        setInputHandlers(this, sceneKeys.lobby);\n\n        if(this.touchScreen) {\n            this.add.image(0, this.height/2, \"rotate-button\").setOrigin(0, 0.5);\n            this.add.image(this.width, this.height/2, \"shoot-button\").setOrigin(1, 0.5);\n        }\n\n        this.setReloadInterval();\n\n        this.setOnDestroy();\n    }\n\n    update(time, delta){\n        if(Array.isArray(this.lobby.players) && this.lobby.players.length>0) {\n            this.lobby.players.forEach(player => {\n                const ship = this.ships[player.localId];\n                const {x, y} = ship.body.velocity;\n                ship.angle = this.getAngle(x, y);\n\n                ship.bulletsLoaded.children.iterate((bullet, index) => {\n                    const topLeft = ship.getTopLeft();\n                    const bottomLeft = ship.getBottomLeft();\n                    const centerLeft = {\n                        x: (topLeft.x + bottomLeft.x) /2,\n                        y: (topLeft.y + bottomLeft.y) /2\n                    }\n                    switch (index){\n                        case 0:\n                            bullet.x = bottomLeft.x - (ship.width/4)*Math.cos(ship.rotation);\n                            bullet.y = bottomLeft.y - (ship.height/4)*Math.sin(ship.rotation);\n                            break;\n                        case 1:\n                            bullet.x = topLeft.x - (ship.width/4)*Math.cos(ship.rotation);\n                            bullet.y = topLeft.y - (ship.height/4)*Math.sin(ship.rotation);\n                            break;\n                        case 2:\n                            bullet.x = centerLeft.x - (ship.width/4)*Math.cos(ship.rotation);\n                            bullet.y = centerLeft.y - (ship.height/4)*Math.sin(ship.rotation);\n                            break;\n                    }\n                });\n            });\n        }\n        if(this.lobby.currentPlayer!==null && (this.rotationKey.isDown || this.rotating)){\n            this.ships[this.lobby.currentPlayer].angle += this.lobby.settings.angularVelocity* arcadeNormalizers.angularVelocity * delta;\n            const {x, y} = this.physics.velocityFromAngle(this.ships[this.lobby.currentPlayer].angle, this.lobby.settings.velocity* arcadeNormalizers.velocity);\n            this.ships[this.lobby.currentPlayer].setVelocity(x, y);\n        }\n    }\n\n    getAngle(x, y){\n        let angle;\n        if(x!==0) {\n            angle = Math.atan(y / x) * 180 / Math.PI;\n            angle = x < 0 ? angle + 180 : angle;\n        } else if(y>=0) angle = 90;\n        else if(y<0) angle = -90;\n        return angle;\n    }\n\n    createNewShip(color){\n        const posX = Phaser.Math.Between(0, this.width);\n        const posY = Phaser.Math.Between(0, this.height);\n        const ship = this.physics.add.sprite(posX, posY, \"ship\"+color);\n        const angle = Phaser.Math.Between(45, 135);\n        const {x, y} = this.physics.velocityFromAngle(angle, this.lobby.settings.velocity*arcadeNormalizers.velocity)\n        ship.setVelocity(x, y);\n        ship.angle = angle;\n        ship.setCollideWorldBounds(true);\n        ship.setBounce(1, 1);\n        ship.bulletsLoaded = this.physics.add.group({\n            collideWorldBounds: false,\n            key: \"bullet-loaded\",\n            quantity: 3,\n            visible: true,\n            active: true\n        });\n        return ship;\n    }\n\n    findPlayerById(id){\n        for(let i = 0; i < this.lobby.players.length; i++){\n            if(this.lobby.players[i].localId === id) return this.lobby.players[i];\n        }\n        return null;\n    }\n\n\n    onLobbyModified(game){\n        const currentlyPlayingIds = [];\n        game.players.forEach(player => {currentlyPlayingIds.push(player.localId)});\n\n        const previousPlayingIds = [];\n        this.lobby.players.forEach(player => {previousPlayingIds.push(player.localId)});\n\n        this.lobby = {...game};\n\n        const newShips = {};\n        const oldShips = {...this.ships};\n        currentlyPlayingIds.forEach(id => {\n            if(previousPlayingIds.includes(id)){\n                newShips[id] = this.ships[id];\n                const {x, y} = this.physics.velocityFromAngle(newShips[id].angle, this.lobby.settings.velocity * arcadeNormalizers.velocity);\n                newShips[id].setVelocity(x, y);\n                newShips[id].setTexture(\"ship\"+this.findPlayerById(id).color);\n            } else {\n                newShips[id] = this.createNewShip(this.findPlayerById(id).color);\n            }\n        });\n        const idsToRemove = previousPlayingIds.filter(x => !currentlyPlayingIds.includes(x));\n        idsToRemove.forEach(id => {\n            oldShips.bulletsLoaded.children.iterate(bullet => {bullet.destroy()});\n            oldShips[id].destroy()\n        });\n\n        this.ships = newShips;\n    }\n\n    createBullet(data){\n        const bullet = this.physics.add.image(\n            data.position.x,\n            data.position.y,\n            \"bullet\"\n        );\n        bullet.angle = data.angle;\n        const {x, y} = velocityFromAngle(bullet.angle, this.lobby.settings.bulletVelocity*arcadeNormalizers.bulletVelocity);\n        bullet.setVelocity(x, y);\n        this.ships[this.lobby.currentPlayer].bulletsLoaded.getFirstAlive().setActive(false).setVisible(false);\n        this.availableBullets--;\n    }\n\n    shoot(){\n        if(this.availableBullets>0){\n            const ship = this.ships[this.lobby.currentPlayer];\n            const angle = ship.angle;\n            const data = {\n                position: {\n                    x: ship.x + ship.width*Math.cos(angle * Math.PI / 180),\n                    y: ship.y + ship.height*Math.sin(angle * Math.PI / 180)\n                },\n                angle: angle\n            };\n            this.createBullet(data);\n        }\n    }\n\n    setReloadInterval(){\n        const handler = () => {\n            if(this.lobby.currentPlayer !== null) {\n                this.availableBullets = this.availableBullets >= 3 ? this.availableBullets : this.availableBullets + 1;\n                const firstDead = this.ships[this.lobby.currentPlayer].bulletsLoaded.getFirstDead();\n                if (firstDead) {\n                    firstDead.setActive(true).setVisible(true)\n                }\n            }\n            clearInterval(this.reloadInterval)\n            this.reloadInterval = setInterval(handler, 1/(this.lobby.settings.reloadingVelocity*arcadeNormalizers.reloadingVelocity));\n        }\n        this.reloadInterval = setInterval(handler, 1/(this.lobby.settings.reloadingVelocity*arcadeNormalizers.reloadingVelocity));\n    }\n\n    setOnDestroy(){\n        this.events.on(\"destroy\", ()=>{\n            clearInterval(this.reloadInterval);\n        });\n    }\n}"]}]}
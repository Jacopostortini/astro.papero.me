{"remainingRequest":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/thread-loader/dist/cjs.js!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/babel-loader/lib/index.js!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/eslint-loader/index.js??ref--13-0!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/LobbyScene.js","dependencies":[{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/LobbyScene.js","mtime":1618640912845},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/cache-loader/dist/cjs.js","mtime":1618298483685},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/thread-loader/dist/cjs.js","mtime":1618298485037},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/babel-loader/lib/index.js","mtime":1618298483657},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/eslint-loader/index.js","mtime":1618298483941}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/LobbyScene.js"],"names":["Phaser","websocketEvents","defaultSettings","arcadeNormalizers","sceneKeys","detectTouchScreen","loadImages","setInputHandlers","velocityFromAngle","LobbyScene","socket","key","lobby","physics","default","arcade","debug","gravity","x","y","players","currentPlayer","settings","touchScreen","ships","availableBullets","width","sys","game","canvas","height","onresize","parent","document","getElementById","Math","min","offsetWidth","offsetHeight","window","innerWidth","scale","resize","world","setBounds","addEventListener","events","on","removeEventListener","emit","LOBBY_MODIFIED","onLobbyModified","add","image","setOrigin","setReloadInterval","setOnDestroy","time","delta","Array","isArray","length","forEach","player","ship","localId","body","velocity","angle","getAngle","bulletsLoaded","children","iterate","bullet","index","topLeft","getTopLeft","bottomLeft","getBottomLeft","centerLeft","cos","rotation","sin","rotationKey","isDown","rotating","angularVelocity","setVelocity","atan","PI","color","posX","Between","posY","sprite","setCollideWorldBounds","setBounce","group","collideWorldBounds","quantity","visible","active","id","i","currentlyPlayingIds","push","previousPlayingIds","newShips","oldShips","includes","setTexture","findPlayerById","createNewShip","idsToRemove","filter","destroy","data","position","bulletVelocity","getFirstAlive","setActive","setVisible","createBullet","handler","firstDead","getFirstDead","clearInterval","reloadInterval","setInterval","reloadingVelocity","Scene"],"mappings":"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","sourcesContent":["import Phaser from \"phaser\";\nimport websocketEvents from \"../constants/websocketEvents\";\nimport {defaultSettings, arcadeNormalizers, sceneKeys} from \"../constants/gameSettings\";\nimport {detectTouchScreen} from \"../constants/constants\";\nimport {loadImages, setInputHandlers, velocityFromAngle} from \"./scene\";\n\nexport default class LobbyScene extends Phaser.Scene {\n\n    constructor(socket) {\n        super({\n            key: sceneKeys.lobby,\n            physics: {\n                default: \"arcade\",\n                arcade: {\n                    debug: false,\n                    gravity: {x: 0, y: 0}\n                }\n            }\n        });\n        this.socket = socket;\n        this.lobby = {\n            players: [],\n            currentPlayer: null,\n            settings: defaultSettings\n        }\n\n        this.touchScreen = detectTouchScreen();\n\n        this.ships = {};\n        this.availableBullets = 3;\n    }\n\n    preload(){\n\n        //load images\n        this.width = this.sys.game.canvas.width;\n        this.height = this.sys.game.canvas.height;\n\n        loadImages(this, sceneKeys.lobby);\n\n        const onresize = () => {\n            const parent = document.getElementById(\"players-wrapper\");\n            const height = Math.min(parent.offsetWidth, parent.offsetHeight);\n            const width = window.innerWidth>750 ? height : window.innerWidth*0.8\n            this.game.scale.resize(width, height);\n            this.physics.world.setBounds(0, 0, width, height);\n        };\n        window.addEventListener(\"resize\", onresize);\n        this.events.on(\"destroy\", ()=>{\n            window.removeEventListener(\"resize\", onresize);\n        });\n\n    }\n\n    create(){\n        //Event lobby-modified\n        this.socket.emit(websocketEvents.LOBBY_MODIFIED);\n        this.socket.on(websocketEvents.LOBBY_MODIFIED, game => this.onLobbyModified(game));\n\n        setInputHandlers(this, sceneKeys.lobby);\n\n        if(this.touchScreen) {\n            this.add.image(0, this.height/2, \"rotate-button\").setOrigin(0, 0.5);\n            this.add.image(this.width, this.height/2, \"shoot-button\").setOrigin(1, 0.5);\n        }\n\n        this.setReloadInterval();\n\n        this.setOnDestroy();\n    }\n\n    update(time, delta){\n        if(Array.isArray(this.lobby.players) && this.lobby.players.length>0) {\n            this.lobby.players.forEach(player => {\n                const ship = this.ships[player.localId];\n                const {x, y} = ship.body.velocity;\n                ship.angle = this.getAngle(x, y);\n\n                ship.bulletsLoaded.children.iterate((bullet, index) => {\n                    const topLeft = ship.getTopLeft();\n                    const bottomLeft = ship.getBottomLeft();\n                    const centerLeft = {\n                        x: (topLeft.x + bottomLeft.x) /2,\n                        y: (topLeft.y + bottomLeft.y) /2\n                    }\n                    switch (index){\n                        case 0:\n                            bullet.x = bottomLeft.x - (ship.width/4)*Math.cos(ship.rotation);\n                            bullet.y = bottomLeft.y - (ship.height/4)*Math.sin(ship.rotation);\n                            break;\n                        case 1:\n                            bullet.x = topLeft.x - (ship.width/4)*Math.cos(ship.rotation);\n                            bullet.y = topLeft.y - (ship.height/4)*Math.sin(ship.rotation);\n                            break;\n                        case 2:\n                            bullet.x = centerLeft.x - (ship.width/4)*Math.cos(ship.rotation);\n                            bullet.y = centerLeft.y - (ship.height/4)*Math.sin(ship.rotation);\n                            break;\n                    }\n                });\n            });\n        }\n        if(this.lobby.currentPlayer!==null && (this.rotationKey.isDown || this.rotating)){\n            this.ships[this.lobby.currentPlayer].angle += this.lobby.settings.angularVelocity* arcadeNormalizers.angularVelocity * delta;\n            const {x, y} = this.physics.velocityFromAngle(this.ships[this.lobby.currentPlayer].angle, this.lobby.settings.velocity* arcadeNormalizers.velocity);\n            this.ships[this.lobby.currentPlayer].setVelocity(x, y);\n        }\n    }\n\n    getAngle(x, y){\n        let angle;\n        if(x!==0) {\n            angle = Math.atan(y / x) * 180 / Math.PI;\n            angle = x < 0 ? angle + 180 : angle;\n        } else if(y>=0) angle = 90;\n        else if(y<0) angle = -90;\n        return angle;\n    }\n\n    createNewShip(color){\n        const posX = Phaser.Math.Between(0, this.width);\n        const posY = Phaser.Math.Between(0, this.height);\n        const ship = this.physics.add.sprite(posX, posY, \"ship\"+color);\n        const angle = Phaser.Math.Between(45, 135);\n        const {x, y} = this.physics.velocityFromAngle(angle, this.lobby.settings.velocity*arcadeNormalizers.velocity)\n        ship.setVelocity(x, y);\n        ship.angle = angle;\n        ship.setCollideWorldBounds(true);\n        ship.setBounce(1, 1);\n        ship.bulletsLoaded = this.physics.add.group({\n            collideWorldBounds: false,\n            key: \"bullet-loaded\",\n            quantity: 3,\n            visible: true,\n            active: true\n        });\n        return ship;\n    }\n\n    findPlayerById(id){\n        for(let i = 0; i < this.lobby.players.length; i++){\n            if(this.lobby.players[i].localId === id) return this.lobby.players[i];\n        }\n        return null;\n    }\n\n\n    onLobbyModified(game){\n        const currentlyPlayingIds = [];\n        game.players.forEach(player => {currentlyPlayingIds.push(player.localId)});\n\n        const previousPlayingIds = [];\n        this.lobby.players.forEach(player => {previousPlayingIds.push(player.localId)});\n\n        this.lobby = {...game};\n\n        const newShips = {};\n        const oldShips = {...this.ships};\n        currentlyPlayingIds.forEach(id => {\n            if(previousPlayingIds.includes(id)){\n                newShips[id] = this.ships[id];\n                const {x, y} = this.physics.velocityFromAngle(newShips[id].angle, this.lobby.settings.velocity * arcadeNormalizers.velocity);\n                newShips[id].setVelocity(x, y);\n                newShips[id].setTexture(\"ship\"+this.findPlayerById(id).color);\n            } else {\n                newShips[id] = this.createNewShip(this.findPlayerById(id).color);\n            }\n        });\n        const idsToRemove = previousPlayingIds.filter(x => !currentlyPlayingIds.includes(x));\n        idsToRemove.forEach(id => {\n            oldShips.bulletsLoaded.children.iterate(bullet => {bullet.destroy()});\n            oldShips[id].destroy()\n        });\n\n        this.ships = newShips;\n    }\n\n    createBullet(data){\n        const bullet = this.physics.add.image(\n            data.position.x,\n            data.position.y,\n            \"bullet\"\n        );\n        bullet.angle = data.angle;\n        const {x, y} = velocityFromAngle(bullet.angle, this.lobby.settings.bulletVelocity*arcadeNormalizers.bulletVelocity);\n        bullet.setVelocity(x, y);\n        this.ships[this.lobby.currentPlayer].bulletsLoaded.getFirstAlive().setActive(false).setVisible(false);\n        this.availableBullets--;\n    }\n\n    shoot(){\n        if(this.availableBullets>0){\n            const ship = this.ships[this.lobby.currentPlayer];\n            const angle = ship.angle;\n            const data = {\n                position: {\n                    x: ship.x + ship.width*Math.cos(angle * Math.PI / 180),\n                    y: ship.y + ship.height*Math.sin(angle * Math.PI / 180)\n                },\n                angle: angle\n            };\n            this.createBullet(data);\n        }\n    }\n\n    setReloadInterval(){\n        const handler = () => {\n            if(this.lobby.currentPlayer !== null) {\n                this.availableBullets = this.availableBullets >= 3 ? this.availableBullets : this.availableBullets + 1;\n                const firstDead = this.ships[this.lobby.currentPlayer].bulletsLoaded.getFirstDead();\n                if (firstDead) {\n                    firstDead.setActive(true).setVisible(true)\n                }\n            }\n            clearInterval(this.reloadInterval)\n            this.reloadInterval = setInterval(handler, 1/(this.lobby.settings.reloadingVelocity*arcadeNormalizers.reloadingVelocity));\n        }\n        this.reloadInterval = setInterval(handler, 1/(this.lobby.settings.reloadingVelocity*arcadeNormalizers.reloadingVelocity));\n    }\n\n    setOnDestroy(){\n        this.events.on(\"destroy\", ()=>{\n            clearInterval(this.reloadInterval);\n        });\n    }\n}"]}]}
{"remainingRequest":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/thread-loader/dist/cjs.js!/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/babel-loader/lib/index.js!/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/eslint-loader/index.js??ref--13-0!/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/src/scenes/LobbyScene.js","dependencies":[{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/src/scenes/LobbyScene.js","mtime":1616348479568},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/cache-loader/dist/cjs.js","mtime":1610909371557},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/thread-loader/dist/cjs.js","mtime":1610909371551},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/babel-loader/lib/index.js","mtime":1610909371562},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/eslint-loader/index.js","mtime":1610909415268}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvbWVkaWEvamFjb3BvL1ZvbHVtZURhdGkvRG9jdW1lbnRpL3BhcGVyby50ay9hc3Ryby5wYXBlcm8ubWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvbWVkaWEvamFjb3BvL1ZvbHVtZURhdGkvRG9jdW1lbnRpL3BhcGVyby50ay9hc3Ryby5wYXBlcm8ubWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICIvbWVkaWEvamFjb3BvL1ZvbHVtZURhdGkvRG9jdW1lbnRpL3BhcGVyby50ay9hc3Ryby5wYXBlcm8ubWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICIvbWVkaWEvamFjb3BvL1ZvbHVtZURhdGkvRG9jdW1lbnRpL3BhcGVyby50ay9hc3Ryby5wYXBlcm8ubWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZVN1cGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzLmpzIjsKaW1wb3J0ICogYXMgUGhhc2VyIGZyb20gInBoYXNlciI7CmltcG9ydCB7IGNvbG9ycywgc2NlbmVLZXlzIH0gZnJvbSAiLi4vY29uc3RhbnRzL2NvbnN0YW50cyI7CmltcG9ydCBtaXR0IGZyb20gIm1pdHQiOwppbXBvcnQgd2Vic29ja2V0RXZlbnRzIGZyb20gIi4uL2NvbnN0YW50cy93ZWJzb2NrZXRFdmVudHMiOwp3aW5kb3cubWl0dCA9IHdpbmRvdy5taXR0IHx8IG1pdHQoKTsKCnZhciBMb2JieVNjZW5lID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfUGhhc2VyJFNjZW5lKSB7CiAgX2luaGVyaXRzKExvYmJ5U2NlbmUsIF9QaGFzZXIkU2NlbmUpOwoKICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKExvYmJ5U2NlbmUpOwoKICBmdW5jdGlvbiBMb2JieVNjZW5lKCkgewogICAgdmFyIF90aGlzOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBMb2JieVNjZW5lKTsKCiAgICBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIHsKICAgICAga2V5OiBzY2VuZUtleXMubG9iYnkKICAgIH0pOwogICAgX3RoaXMubG9iYnkgPSB7CiAgICAgIHBsYXllcnM6IFtdLAogICAgICBjdXJyZW50UGxheWVyOiBudWxsLAogICAgICBzZXR0aW5nczogewogICAgICAgIHRvdGFsVHVybnM6IDUsCiAgICAgICAgdmVsb2NpdHk6IDIsCiAgICAgICAgYW5ndWxhclZlbG9jaXR5OiAyLAogICAgICAgIHJlbG9hZGluZ1ZlbG9jaXR5OiAyCiAgICAgIH0KICAgIH07CiAgICBfdGhpcy5zaGlwcyA9IHt9OwogICAgcmV0dXJuIF90aGlzOwogIH0KCiAgX2NyZWF0ZUNsYXNzKExvYmJ5U2NlbmUsIFt7CiAgICBrZXk6ICJnZXRBbmdsZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0QW5nbGUoeCwgeSkgewogICAgICB2YXIgYW5nbGU7CgogICAgICBpZiAoeCAhPT0gMCkgewogICAgICAgIGFuZ2xlID0gTWF0aC5hdGFuKHkgLyB4KTsKICAgICAgICBhbmdsZSA9IHggPCAwID8gYW5nbGUgKyBNYXRoLlBJIDogYW5nbGU7CiAgICAgIH0gZWxzZSBpZiAoeSA+PSAwKSBhbmdsZSA9IE1hdGguUEkgLyAyO2Vsc2UgaWYgKHkgPCAwKSBhbmdsZSA9IC1NYXRoLlBJIC8gMjsKCiAgICAgIHJldHVybiBhbmdsZTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJjcmVhdGVOZXdTaGlwIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjcmVhdGVOZXdTaGlwKGNvbG9yKSB7CiAgICAgIHZhciB4ID0gMTA7IC8vUGhhc2VyLk1hdGguQmV0d2VlbigwLCB0aGlzLndpZHRoKTsKCiAgICAgIHZhciB5ID0gMTA7IC8vUGhhc2VyLk1hdGguQmV0d2VlbigwLCB0aGlzLmhlaWdodCk7CgogICAgICB2YXIgc2hpcCA9IHRoaXMucGh5c2ljcy5hZGQuaW1hZ2UoeCwgeSwgInNoaXAiICsgY29sb3IpOyAvL2xldCBhbmdsZSA9IDEvL1BoYXNlci5NYXRoLkJldHdlZW4oTWF0aC5QSS80LCBNYXRoLlBJKjMvNCk7CiAgICAgIC8vc2hpcC5zZXRWZWxvY2l0eSh0aGlzLmxvYmJ5LnNldHRpbmdzLnZlbG9jaXR5Kk1hdGguY29zKGFuZ2xlKSwgdGhpcy5sb2JieS5zZXR0aW5ncy52ZWxvY2l0eSpNYXRoLnNpbihhbmdsZSkpOwogICAgICAvL3NoaXAucm90YXRpb24gPSBhbmdsZTsKCiAgICAgIHNoaXAuc2V0Q29sbGlkZVdvcmxkQm91bmRzKHRydWUpOwogICAgICBzaGlwLnNldEJvdW5jZSgxLCAxKTsKICAgICAgY29uc29sZS5sb2coIm5ld2x5IGNyZWF0ZWQgc2hpcCIsIHNoaXApOwogICAgICByZXR1cm4gc2hpcDsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJmaW5kUGxheWVyQnlJZCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZmluZFBsYXllckJ5SWQoaWQpIHsKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxvYmJ5LnBsYXllcnMubGVuZ3RoOyBpKyspIHsKICAgICAgICBpZiAodGhpcy5sb2JieS5wbGF5ZXJzW2ldLmxvY2FsSWQgPT09IGlkKSByZXR1cm4gdGhpcy5sb2JieS5wbGF5ZXJzW2ldOwogICAgICB9CgogICAgICByZXR1cm4gbnVsbDsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJwcmVsb2FkIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBwcmVsb2FkKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIC8vbG9hZCBpbWFnZXMKICAgICAgdGhpcy53aWR0aCA9IHRoaXMuc3lzLmdhbWUuY2FudmFzLndpZHRoOwogICAgICB0aGlzLmhlaWdodCA9IHRoaXMuc3lzLmdhbWUuY2FudmFzLmhlaWdodDsKICAgICAgY29sb3JzLmZvckVhY2goZnVuY3Rpb24gKHZhbHVlLCBpbmRleCkgewogICAgICAgIF90aGlzMi5sb2FkLmltYWdlKCJzaGlwIiArIGluZGV4LCByZXF1aXJlKCJAL2Fzc2V0cy9zaGlwIiArIGluZGV4ICsgIi5wbmciKSk7CiAgICAgIH0pOwogICAgICB0aGlzLmxvYWQuaW1hZ2UoJ3BhcnRpY2xlJywgJ2h0dHBzOi8vbGFicy5waGFzZXIuaW8vYXNzZXRzL3BhcnRpY2xlcy9yZWQucG5nJyk7CiAgICB9CiAgfSwgewogICAga2V5OiAiY3JlYXRlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgd2luZG93Lm1pdHQub24od2Vic29ja2V0RXZlbnRzLkxPQkJZX01PRElGSUVELCBmdW5jdGlvbiAoZ2FtZSkgewogICAgICAgIHZhciBjdXJyZW50bHlQbGF5aW5nSWRzID0gW107CiAgICAgICAgZ2FtZS5wbGF5ZXJzLmZvckVhY2goZnVuY3Rpb24gKHBsYXllcikgewogICAgICAgICAgY3VycmVudGx5UGxheWluZ0lkcy5wdXNoKHBsYXllci5sb2NhbElkKTsKICAgICAgICB9KTsKICAgICAgICB2YXIgcHJldmlvdXNQbGF5aW5nSWRzID0gW107CgogICAgICAgIF90aGlzMy5sb2JieS5wbGF5ZXJzLmZvckVhY2goZnVuY3Rpb24gKHBsYXllcikgewogICAgICAgICAgcHJldmlvdXNQbGF5aW5nSWRzLnB1c2gocGxheWVyLmxvY2FsSWQpOwogICAgICAgIH0pOwoKICAgICAgICBfdGhpczMubG9iYnkgPSBnYW1lOwogICAgICAgIHZhciBuZXdTaGlwcyA9IHt9OwogICAgICAgIGN1cnJlbnRseVBsYXlpbmdJZHMuZm9yRWFjaChmdW5jdGlvbiAoaWQpIHsKICAgICAgICAgIGlmIChwcmV2aW91c1BsYXlpbmdJZHMuaW5jbHVkZXMoaWQpKSB7CiAgICAgICAgICAgIG5ld1NoaXBzW2lkXSA9IF90aGlzMy5zaGlwc1tpZF07CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBuZXdTaGlwc1tpZF0gPSBfdGhpczMuY3JlYXRlTmV3U2hpcChfdGhpczMuZmluZFBsYXllckJ5SWQoaWQpLmNvbG9yKTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgICBfdGhpczMuc2hpcHMgPSBuZXdTaGlwczsKICAgICAgICBfdGhpczMubG9iYnkuc2V0dGluZ3MudmVsb2NpdHkgKj0gMTAwOwogICAgICAgIF90aGlzMy5sb2JieS5zZXR0aW5ncy5hbmd1bGFyVmVsb2NpdHkgKj0gMTAwOwogICAgICAgIF90aGlzMy5sb2JieS5zZXR0aW5ncy5yZWxvYWRpbmdWZWxvY2l0eSAqPSAxMDA7CiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogInVwZGF0ZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlKCkgewogICAgICAvKmlmKEFycmF5LmlzQXJyYXkodGhpcy5sb2JieS5wbGF5ZXJzKSAmJiB0aGlzLmxvYmJ5LnBsYXllcnMubGVuZ3RoPjApIHsKICAgICAgICAgIHRoaXMubG9iYnkucGxheWVycy5mb3JFYWNoKHBsYXllciA9PiB7CiAgICAgICAgICAgICAgbGV0IHt4LCB5fSA9IHRoaXMuc2hpcHNbcGxheWVyLmxvY2FsSWRdLmJvZHkudmVsb2NpdHk7CiAgICAgICAgICAgICAgdGhpcy5zaGlwc1twbGF5ZXIubG9jYWxJZF0ucm90YXRpb24gPSB0aGlzLmdldEFuZ2xlKHgsIHkpOwogICAgICAgICAgICAgIHRoaXMuc2hpcHNbcGxheWVyLmxvY2FsSWRdLnNldFZlbG9jaXR5KAogICAgICAgICAgICAgICAgICB0aGlzLmxvYmJ5LnZlbG9jaXR5ICogTWF0aC5jb3ModGhpcy5zaGlwc1twbGF5ZXIubG9jYWxJZF0ucm90YXRpb24pLAogICAgICAgICAgICAgICAgICB0aGlzLmxvYmJ5LnZlbG9jaXR5ICogTWF0aC5zaW4odGhpcy5zaGlwc1twbGF5ZXIubG9jYWxJZF0ucm90YXRpb24pCiAgICAgICAgICAgICAgKTsKICAgICAgICAgIH0pOwogICAgICB9Ki8KICAgIH0KICB9XSk7CgogIHJldHVybiBMb2JieVNjZW5lOwp9KFBoYXNlci5TY2VuZSk7CgpleHBvcnQgeyBMb2JieVNjZW5lIGFzIGRlZmF1bHQgfTs="},{"version":3,"sources":["/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/src/scenes/LobbyScene.js"],"names":["Phaser","colors","sceneKeys","mitt","websocketEvents","window","LobbyScene","key","lobby","players","currentPlayer","settings","totalTurns","velocity","angularVelocity","reloadingVelocity","ships","x","y","angle","Math","atan","PI","color","ship","physics","add","image","setCollideWorldBounds","setBounce","console","log","id","i","length","localId","width","sys","game","canvas","height","forEach","value","index","load","require","on","LOBBY_MODIFIED","currentlyPlayingIds","player","push","previousPlayingIds","newShips","includes","createNewShip","findPlayerById","Scene"],"mappings":"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","sourcesContent":["import * as Phaser from \"phaser\";\nimport {colors, sceneKeys} from \"../constants/constants\";\nimport mitt from \"mitt\";\nimport websocketEvents from \"../constants/websocketEvents\";\n\nwindow.mitt = window.mitt || mitt();\nexport default class LobbyScene extends Phaser.Scene {\n\n    constructor() {\n        super({key: sceneKeys.lobby});\n        this.lobby = {\n            players: [],\n            currentPlayer: null,\n            settings: {\n                totalTurns: 5,\n                velocity: 2,\n                angularVelocity: 2,\n                reloadingVelocity: 2\n            }\n        }\n        this.ships = {};\n    }\n\n    getAngle(x, y){\n        let angle;\n        if(x!==0) {\n            angle = Math.atan(y / x);\n            angle = x < 0 ? angle + Math.PI : angle;\n        } else if(y>=0) angle = Math.PI / 2;\n        else if(y<0) angle = -Math.PI / 2;\n        return angle;\n    }\n\n    createNewShip(color){\n        let x = 10//Phaser.Math.Between(0, this.width);\n        let y = 10//Phaser.Math.Between(0, this.height);\n        let ship = this.physics.add.image(x, y, \"ship\"+color);\n        //let angle = 1//Phaser.Math.Between(Math.PI/4, Math.PI*3/4);\n        //ship.setVelocity(this.lobby.settings.velocity*Math.cos(angle), this.lobby.settings.velocity*Math.sin(angle));\n        //ship.rotation = angle;\n        ship.setCollideWorldBounds(true);\n        ship.setBounce(1, 1);\n        console.log(\"newly created ship\", ship);\n        return ship;\n    }\n\n    findPlayerById(id){\n        for(let i = 0; i < this.lobby.players.length; i++){\n            if(this.lobby.players[i].localId === id) return this.lobby.players[i];\n        }\n        return null;\n    }\n\n    preload(){\n\n        //load images\n        this.width = this.sys.game.canvas.width;\n        this.height = this.sys.game.canvas.height;\n        colors.forEach((value, index) => {\n            this.load.image(\"ship\"+index, require(\"@/assets/ship\"+index+\".png\"))\n        });\n        this.load.image('particle', 'https://labs.phaser.io/assets/particles/red.png');\n\n    }\n\n    create(){\n        window.mitt.on(websocketEvents.LOBBY_MODIFIED, game => {\n            let currentlyPlayingIds = [];\n            game.players.forEach(player => {currentlyPlayingIds.push(player.localId)});\n\n            let previousPlayingIds = [];\n            this.lobby.players.forEach(player => {previousPlayingIds.push(player.localId)});\n\n            this.lobby = game;\n\n            let newShips = {};\n            currentlyPlayingIds.forEach(id => {\n                if(previousPlayingIds.includes(id)){\n                    newShips[id] = this.ships[id];\n                } else {\n                    newShips[id] = this.createNewShip(this.findPlayerById(id).color);\n                }\n            });\n\n            this.ships = newShips;\n            this.lobby.settings.velocity *= 100;\n            this.lobby.settings.angularVelocity *= 100;\n            this.lobby.settings.reloadingVelocity *= 100;\n        });\n    }\n\n    update(){\n        /*if(Array.isArray(this.lobby.players) && this.lobby.players.length>0) {\n            this.lobby.players.forEach(player => {\n                let {x, y} = this.ships[player.localId].body.velocity;\n                this.ships[player.localId].rotation = this.getAngle(x, y);\n                this.ships[player.localId].setVelocity(\n                    this.lobby.velocity * Math.cos(this.ships[player.localId].rotation),\n                    this.lobby.velocity * Math.sin(this.ships[player.localId].rotation)\n                );\n            });\n        }*/\n    }\n}"]}]}
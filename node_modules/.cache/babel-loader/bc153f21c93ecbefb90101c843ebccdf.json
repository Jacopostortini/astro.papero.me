{"remainingRequest":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/thread-loader/dist/cjs.js!/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/babel-loader/lib/index.js!/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/eslint-loader/index.js??ref--13-0!/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/src/scenes/LobbyScene.js","dependencies":[{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/src/scenes/LobbyScene.js","mtime":1616347822785},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/cache-loader/dist/cjs.js","mtime":1610909371557},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/thread-loader/dist/cjs.js","mtime":1610909371551},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/babel-loader/lib/index.js","mtime":1610909371562},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/eslint-loader/index.js","mtime":1610909415268}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvbWVkaWEvamFjb3BvL1ZvbHVtZURhdGkvRG9jdW1lbnRpL3BhcGVyby50ay9hc3Ryby5wYXBlcm8ubWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvbWVkaWEvamFjb3BvL1ZvbHVtZURhdGkvRG9jdW1lbnRpL3BhcGVyby50ay9hc3Ryby5wYXBlcm8ubWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICIvbWVkaWEvamFjb3BvL1ZvbHVtZURhdGkvRG9jdW1lbnRpL3BhcGVyby50ay9hc3Ryby5wYXBlcm8ubWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICIvbWVkaWEvamFjb3BvL1ZvbHVtZURhdGkvRG9jdW1lbnRpL3BhcGVyby50ay9hc3Ryby5wYXBlcm8ubWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZVN1cGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzLmpzIjsKaW1wb3J0ICogYXMgUGhhc2VyIGZyb20gInBoYXNlciI7CmltcG9ydCB7IGNvbG9ycywgc2NlbmVLZXlzIH0gZnJvbSAiLi4vY29uc3RhbnRzL2NvbnN0YW50cyI7CmltcG9ydCBtaXR0IGZyb20gIm1pdHQiOwppbXBvcnQgd2Vic29ja2V0RXZlbnRzIGZyb20gIi4uL2NvbnN0YW50cy93ZWJzb2NrZXRFdmVudHMiOwp3aW5kb3cubWl0dCA9IHdpbmRvdy5taXR0IHx8IG1pdHQoKTsKCnZhciBMb2JieVNjZW5lID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfUGhhc2VyJFNjZW5lKSB7CiAgX2luaGVyaXRzKExvYmJ5U2NlbmUsIF9QaGFzZXIkU2NlbmUpOwoKICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKExvYmJ5U2NlbmUpOwoKICBmdW5jdGlvbiBMb2JieVNjZW5lKCkgewogICAgdmFyIF90aGlzOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBMb2JieVNjZW5lKTsKCiAgICBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIHsKICAgICAga2V5OiBzY2VuZUtleXMubG9iYnkKICAgIH0pOwogICAgX3RoaXMubG9iYnkgPSB7CiAgICAgIHBsYXllcnM6IFtdLAogICAgICBjdXJyZW50UGxheWVyOiBudWxsLAogICAgICBzZXR0aW5nczogewogICAgICAgIHRvdGFsVHVybnM6IDUsCiAgICAgICAgdmVsb2NpdHk6IDIsCiAgICAgICAgYW5ndWxhclZlbG9jaXR5OiAyLAogICAgICAgIHJlbG9hZGluZ1ZlbG9jaXR5OiAyCiAgICAgIH0KICAgIH07CiAgICBfdGhpcy5zaGlwcyA9IHt9OwogICAgcmV0dXJuIF90aGlzOwogIH0KCiAgX2NyZWF0ZUNsYXNzKExvYmJ5U2NlbmUsIFt7CiAgICBrZXk6ICJnZXRBbmdsZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0QW5nbGUoeCwgeSkgewogICAgICB2YXIgYW5nbGU7CgogICAgICBpZiAoeCAhPT0gMCkgewogICAgICAgIGFuZ2xlID0gTWF0aC5hdGFuKHkgLyB4KTsKICAgICAgICBhbmdsZSA9IHggPCAwID8gYW5nbGUgKyBNYXRoLlBJIDogYW5nbGU7CiAgICAgIH0gZWxzZSBpZiAoeSA+PSAwKSBhbmdsZSA9IE1hdGguUEkgLyAyO2Vsc2UgaWYgKHkgPCAwKSBhbmdsZSA9IC1NYXRoLlBJIC8gMjsKCiAgICAgIHJldHVybiBhbmdsZTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJjcmVhdGVOZXdTaGlwIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjcmVhdGVOZXdTaGlwKGNvbG9yKSB7CiAgICAgIHZhciB4ID0gMTA7IC8vUGhhc2VyLk1hdGguQmV0d2VlbigwLCB0aGlzLndpZHRoKTsKCiAgICAgIHZhciB5ID0gMTA7IC8vUGhhc2VyLk1hdGguQmV0d2VlbigwLCB0aGlzLmhlaWdodCk7CgogICAgICB2YXIgc2hpcCA9IHRoaXMucGh5c2ljcy5hZGQuaW1hZ2UoeCwgeSwgInNoaXAiICsgY29sb3IpOwogICAgICB2YXIgYW5nbGUgPSAxOyAvL1BoYXNlci5NYXRoLkJldHdlZW4oTWF0aC5QSS80LCBNYXRoLlBJKjMvNCk7CgogICAgICBzaGlwLnNldFZlbG9jaXR5KHRoaXMubG9iYnkuc2V0dGluZ3MudmVsb2NpdHkgKiBNYXRoLmNvcyhhbmdsZSksIHRoaXMubG9iYnkuc2V0dGluZ3MudmVsb2NpdHkgKiBNYXRoLnNpbihhbmdsZSkpOwogICAgICBzaGlwLnJvdGF0aW9uID0gYW5nbGU7CiAgICAgIHNoaXAuc2V0Q29sbGlkZVdvcmxkQm91bmRzKHRydWUpOwogICAgICBzaGlwLnNldEJvdW5jZSgxLCAxKTsKICAgICAgcmV0dXJuIHNoaXA7CiAgICB9CiAgfSwgewogICAga2V5OiAiZmluZFBsYXllckJ5SWQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGZpbmRQbGF5ZXJCeUlkKGlkKSB7CiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sb2JieS5wbGF5ZXJzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgaWYgKHRoaXMubG9iYnkucGxheWVyc1tpXS5sb2NhbElkID09PSBpZCkgcmV0dXJuIHRoaXMubG9iYnkucGxheWVyc1tpXTsKICAgICAgfQoKICAgICAgcmV0dXJuIG51bGw7CiAgICB9CiAgfSwgewogICAga2V5OiAicHJlbG9hZCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcHJlbG9hZCgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICAvL2xvYWQgaW1hZ2VzCiAgICAgIHRoaXMud2lkdGggPSB0aGlzLnN5cy5nYW1lLmNhbnZhcy53aWR0aDsKICAgICAgdGhpcy5oZWlnaHQgPSB0aGlzLnN5cy5nYW1lLmNhbnZhcy5oZWlnaHQ7CiAgICAgIGNvbG9ycy5mb3JFYWNoKGZ1bmN0aW9uICh2YWx1ZSwgaW5kZXgpIHsKICAgICAgICBfdGhpczIubG9hZC5pbWFnZSgic2hpcCIgKyBpbmRleCwgcmVxdWlyZSgiQC9hc3NldHMvc2hpcCIgKyBpbmRleCArICIucG5nIikpOwogICAgICB9KTsKICAgICAgdGhpcy5sb2FkLmltYWdlKCdwYXJ0aWNsZScsICdodHRwczovL2xhYnMucGhhc2VyLmlvL2Fzc2V0cy9wYXJ0aWNsZXMvcmVkLnBuZycpOwogICAgfQogIH0sIHsKICAgIGtleTogImNyZWF0ZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY3JlYXRlKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHdpbmRvdy5taXR0Lm9uKHdlYnNvY2tldEV2ZW50cy5MT0JCWV9NT0RJRklFRCwgZnVuY3Rpb24gKGdhbWUpIHsKICAgICAgICBjb25zb2xlLmxvZygibG9iYnkgbW9kaWZpZWQgaW4gcGhhc2VyIiwgZ2FtZSk7CiAgICAgICAgdmFyIGN1cnJlbnRseVBsYXlpbmdJZHMgPSBbXTsKICAgICAgICBnYW1lLnBsYXllcnMuZm9yRWFjaChmdW5jdGlvbiAocGxheWVyKSB7CiAgICAgICAgICBjdXJyZW50bHlQbGF5aW5nSWRzLnB1c2gocGxheWVyLmxvY2FsSWQpOwogICAgICAgIH0pOwogICAgICAgIHZhciBwcmV2aW91c1BsYXlpbmdJZHMgPSBbXTsKCiAgICAgICAgX3RoaXMzLmxvYmJ5LnBsYXllcnMuZm9yRWFjaChmdW5jdGlvbiAocGxheWVyKSB7CiAgICAgICAgICBwcmV2aW91c1BsYXlpbmdJZHMucHVzaChwbGF5ZXIubG9jYWxJZCk7CiAgICAgICAgfSk7CgogICAgICAgIF90aGlzMy5sb2JieSA9IGdhbWU7CiAgICAgICAgdmFyIG5ld1NoaXBzID0ge307CiAgICAgICAgY3VycmVudGx5UGxheWluZ0lkcy5mb3JFYWNoKGZ1bmN0aW9uIChpZCkgewogICAgICAgICAgaWYgKHByZXZpb3VzUGxheWluZ0lkcy5pbmNsdWRlcyhpZCkpIHsKICAgICAgICAgICAgbmV3U2hpcHNbaWRdID0gX3RoaXMzLnNoaXBzW2lkXTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIG5ld1NoaXBzW2lkXSA9IF90aGlzMy5jcmVhdGVOZXdTaGlwKF90aGlzMy5maW5kUGxheWVyQnlJZChpZCkuY29sb3IpOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICAgIF90aGlzMy5zaGlwcyA9IG5ld1NoaXBzOwogICAgICAgIGNvbnNvbGUubG9nKF90aGlzMy5zaGlwcywgX3RoaXMzLmxvYmJ5KTsKICAgICAgfSk7CiAgICB9CiAgfSwgewogICAga2V5OiAidXBkYXRlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiB1cGRhdGUoKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgICAgaWYgKEFycmF5LmlzQXJyYXkodGhpcy5sb2JieS5wbGF5ZXJzKSkgewogICAgICAgIHRoaXMubG9iYnkucGxheWVycy5mb3JFYWNoKGZ1bmN0aW9uIChwbGF5ZXIpIHsKICAgICAgICAgIHZhciBfdGhpczQkc2hpcHMkcGxheWVyJGwgPSBfdGhpczQuc2hpcHNbcGxheWVyLmxvY2FsSWRdLmJvZHkudmVsb2NpdHksCiAgICAgICAgICAgICAgeCA9IF90aGlzNCRzaGlwcyRwbGF5ZXIkbC54LAogICAgICAgICAgICAgIHkgPSBfdGhpczQkc2hpcHMkcGxheWVyJGwueTsKICAgICAgICAgIF90aGlzNC5zaGlwc1twbGF5ZXIubG9jYWxJZF0ucm90YXRpb24gPSBfdGhpczQuZ2V0QW5nbGUoeCwgeSk7CgogICAgICAgICAgX3RoaXM0LnNoaXBzW3BsYXllci5sb2NhbElkXS5zZXRWZWxvY2l0eShfdGhpczQubG9iYnkudmVsb2NpdHkgKiBNYXRoLmNvcyhfdGhpczQuc2hpcHNbcGxheWVyLmxvY2FsSWRdLnJvdGF0aW9uKSwgX3RoaXM0LmxvYmJ5LnZlbG9jaXR5ICogTWF0aC5zaW4oX3RoaXM0LnNoaXBzW3BsYXllci5sb2NhbElkXS5yb3RhdGlvbikpOwogICAgICAgIH0pOwogICAgICB9CiAgICB9CiAgfV0pOwoKICByZXR1cm4gTG9iYnlTY2VuZTsKfShQaGFzZXIuU2NlbmUpOwoKZXhwb3J0IHsgTG9iYnlTY2VuZSBhcyBkZWZhdWx0IH07"},{"version":3,"sources":["/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/src/scenes/LobbyScene.js"],"names":["Phaser","colors","sceneKeys","mitt","websocketEvents","window","LobbyScene","key","lobby","players","currentPlayer","settings","totalTurns","velocity","angularVelocity","reloadingVelocity","ships","x","y","angle","Math","atan","PI","color","ship","physics","add","image","setVelocity","cos","sin","rotation","setCollideWorldBounds","setBounce","id","i","length","localId","width","sys","game","canvas","height","forEach","value","index","load","require","on","LOBBY_MODIFIED","console","log","currentlyPlayingIds","player","push","previousPlayingIds","newShips","includes","createNewShip","findPlayerById","Array","isArray","body","getAngle","Scene"],"mappings":"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","sourcesContent":["import * as Phaser from \"phaser\";\nimport {colors, sceneKeys} from \"../constants/constants\";\nimport mitt from \"mitt\";\nimport websocketEvents from \"../constants/websocketEvents\";\n\nwindow.mitt = window.mitt || mitt();\nexport default class LobbyScene extends Phaser.Scene {\n\n    constructor() {\n        super({key: sceneKeys.lobby});\n        this.lobby = {\n            players: [],\n            currentPlayer: null,\n            settings: {\n                totalTurns: 5,\n                velocity: 2,\n                angularVelocity: 2,\n                reloadingVelocity: 2\n            }\n        }\n        this.ships = {};\n    }\n\n    getAngle(x, y){\n        let angle;\n        if(x!==0) {\n            angle = Math.atan(y / x);\n            angle = x < 0 ? angle + Math.PI : angle;\n        } else if(y>=0) angle = Math.PI / 2;\n        else if(y<0) angle = -Math.PI / 2;\n        return angle;\n    }\n\n    createNewShip(color){\n        let x = 10//Phaser.Math.Between(0, this.width);\n        let y = 10//Phaser.Math.Between(0, this.height);\n        let ship = this.physics.add.image(x, y, \"ship\"+color);\n        let angle = 1//Phaser.Math.Between(Math.PI/4, Math.PI*3/4);\n        ship.setVelocity(this.lobby.settings.velocity*Math.cos(angle), this.lobby.settings.velocity*Math.sin(angle));\n        ship.rotation = angle;\n        ship.setCollideWorldBounds(true);\n        ship.setBounce(1, 1);\n        return ship;\n    }\n\n    findPlayerById(id){\n        for(let i = 0; i < this.lobby.players.length; i++){\n            if(this.lobby.players[i].localId === id) return this.lobby.players[i];\n        }\n        return null;\n    }\n\n    preload(){\n\n        //load images\n        this.width = this.sys.game.canvas.width;\n        this.height = this.sys.game.canvas.height;\n        colors.forEach((value, index) => {\n            this.load.image(\"ship\"+index, require(\"@/assets/ship\"+index+\".png\"))\n        });\n        this.load.image('particle', 'https://labs.phaser.io/assets/particles/red.png');\n\n    }\n\n    create(){\n        window.mitt.on(websocketEvents.LOBBY_MODIFIED, game => {\n            console.log(\"lobby modified in phaser\", game);\n            let currentlyPlayingIds = [];\n            game.players.forEach(player => {currentlyPlayingIds.push(player.localId)});\n\n            let previousPlayingIds = [];\n            this.lobby.players.forEach(player => {previousPlayingIds.push(player.localId)});\n\n            this.lobby = game;\n\n            let newShips = {};\n            currentlyPlayingIds.forEach(id => {\n                if(previousPlayingIds.includes(id)){\n                    newShips[id] = this.ships[id];\n                } else {\n                    newShips[id] = this.createNewShip(this.findPlayerById(id).color);\n                }\n            });\n\n            this.ships = newShips;\n\n            console.log(this.ships, this.lobby)\n        });\n    }\n\n    update(){\n        if(Array.isArray(this.lobby.players)) {\n            this.lobby.players.forEach(player => {\n                let {x, y} = this.ships[player.localId].body.velocity;\n                this.ships[player.localId].rotation = this.getAngle(x, y);\n                this.ships[player.localId].setVelocity(\n                    this.lobby.velocity * Math.cos(this.ships[player.localId].rotation),\n                    this.lobby.velocity * Math.sin(this.ships[player.localId].rotation)\n                );\n            });\n        }\n    }\n}"]}]}
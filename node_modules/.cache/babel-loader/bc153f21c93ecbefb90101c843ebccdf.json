{"remainingRequest":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/thread-loader/dist/cjs.js!/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/babel-loader/lib/index.js!/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/eslint-loader/index.js??ref--13-0!/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/src/scenes/LobbyScene.js","dependencies":[{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/src/scenes/LobbyScene.js","mtime":1616347078969},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/cache-loader/dist/cjs.js","mtime":1610909371557},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/thread-loader/dist/cjs.js","mtime":1610909371551},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/babel-loader/lib/index.js","mtime":1610909371562},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/eslint-loader/index.js","mtime":1610909415268}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvbWVkaWEvamFjb3BvL1ZvbHVtZURhdGkvRG9jdW1lbnRpL3BhcGVyby50ay9hc3Ryby5wYXBlcm8ubWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvbWVkaWEvamFjb3BvL1ZvbHVtZURhdGkvRG9jdW1lbnRpL3BhcGVyby50ay9hc3Ryby5wYXBlcm8ubWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICIvbWVkaWEvamFjb3BvL1ZvbHVtZURhdGkvRG9jdW1lbnRpL3BhcGVyby50ay9hc3Ryby5wYXBlcm8ubWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICIvbWVkaWEvamFjb3BvL1ZvbHVtZURhdGkvRG9jdW1lbnRpL3BhcGVyby50ay9hc3Ryby5wYXBlcm8ubWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZVN1cGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzLmpzIjsKaW1wb3J0ICogYXMgUGhhc2VyIGZyb20gInBoYXNlciI7CmltcG9ydCB7IGNvbG9ycywgc2NlbmVLZXlzIH0gZnJvbSAiLi4vY29uc3RhbnRzL2NvbnN0YW50cyI7CmltcG9ydCBtaXR0IGZyb20gIm1pdHQiOwppbXBvcnQgd2Vic29ja2V0RXZlbnRzIGZyb20gIi4uL2NvbnN0YW50cy93ZWJzb2NrZXRFdmVudHMiOwp3aW5kb3cubWl0dCA9IHdpbmRvdy5taXR0IHx8IG1pdHQoKTsKCnZhciBMb2JieVNjZW5lID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfUGhhc2VyJFNjZW5lKSB7CiAgX2luaGVyaXRzKExvYmJ5U2NlbmUsIF9QaGFzZXIkU2NlbmUpOwoKICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKExvYmJ5U2NlbmUpOwoKICBmdW5jdGlvbiBMb2JieVNjZW5lKCkgewogICAgdmFyIF90aGlzOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBMb2JieVNjZW5lKTsKCiAgICBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIHsKICAgICAga2V5OiBzY2VuZUtleXMubG9iYnkKICAgIH0pOwogICAgX3RoaXMubG9iYnkgPSB7CiAgICAgIHBsYXllcnM6IFtdLAogICAgICBjdXJyZW50UGxheWVyOiBudWxsLAogICAgICBzZXR0aW5nczogewogICAgICAgIHRvdGFsVHVybnM6IDUsCiAgICAgICAgdmVsb2NpdHk6IDIsCiAgICAgICAgYW5ndWxhclZlbG9jaXR5OiAyLAogICAgICAgIHJlbG9hZGluZ1ZlbG9jaXR5OiAyCiAgICAgIH0KICAgIH07CiAgICBfdGhpcy5zaGlwcyA9IHt9OwogICAgcmV0dXJuIF90aGlzOwogIH0KCiAgX2NyZWF0ZUNsYXNzKExvYmJ5U2NlbmUsIFt7CiAgICBrZXk6ICJnZXRBbmdsZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0QW5nbGUoeCwgeSkgewogICAgICB2YXIgYW5nbGU7CgogICAgICBpZiAoeCAhPT0gMCkgewogICAgICAgIGFuZ2xlID0gTWF0aC5hdGFuKHkgLyB4KTsKICAgICAgICBhbmdsZSA9IHggPCAwID8gYW5nbGUgKyBNYXRoLlBJIDogYW5nbGU7CiAgICAgIH0gZWxzZSBpZiAoeSA+PSAwKSBhbmdsZSA9IE1hdGguUEkgLyAyO2Vsc2UgaWYgKHkgPCAwKSBhbmdsZSA9IC1NYXRoLlBJIC8gMjsKCiAgICAgIHJldHVybiBhbmdsZTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJjcmVhdGVOZXdTaGlwIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjcmVhdGVOZXdTaGlwKGNvbG9yKSB7CiAgICAgIHZhciB4ID0gUGhhc2VyLk1hdGguQmV0d2VlbigwLCB0aGlzLndpZHRoKTsKICAgICAgdmFyIHkgPSBQaGFzZXIuTWF0aC5CZXR3ZWVuKDAsIHRoaXMuaGVpZ2h0KTsKICAgICAgdmFyIHNoaXAgPSB0aGlzLnBoeXNpY3MuYWRkLmltYWdlKHgsIHksICJzaGlwIiArIGNvbG9yKTsKICAgICAgdmFyIGFuZ2xlID0gUGhhc2VyLk1hdGguQmV0d2VlbihNYXRoLlBJIC8gNCwgTWF0aC5QSSAqIDMgLyA0KTsKICAgICAgc2hpcC5zZXRWZWxvY2l0eSh0aGlzLnNoaXBWZWxvY2l0eSAqIE1hdGguY29zKGFuZ2xlKSwgdGhpcy5zaGlwVmVsb2NpdHkgKiBNYXRoLnNpbihhbmdsZSkpOwogICAgICBzaGlwLnJvdGF0aW9uID0gYW5nbGU7CiAgICAgIHNoaXAuc2V0Q29sbGlkZVdvcmxkQm91bmRzKHRydWUpOwogICAgICBzaGlwLnNldEJvdW5jZSgxLCAxKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJmaW5kUGxheWVyQnlJZCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZmluZFBsYXllckJ5SWQoaWQpIHsKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxvYmJ5LnBsYXllcnMubGVuZ3RoOyBpKyspIHsKICAgICAgICBpZiAodGhpcy5sb2JieS5wbGF5ZXJzW2ldLmxvY2FsSWQgPT09IGlkKSByZXR1cm4gdGhpcy5sb2JieS5wbGF5ZXJzW2ldOwogICAgICB9CgogICAgICByZXR1cm4gbnVsbDsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJwcmVsb2FkIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBwcmVsb2FkKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIC8vbG9hZCBpbWFnZXMKICAgICAgdGhpcy53aWR0aCA9IHRoaXMuc3lzLmdhbWUuY2FudmFzLndpZHRoOwogICAgICB0aGlzLmhlaWdodCA9IHRoaXMuc3lzLmdhbWUuY2FudmFzLmhlaWdodDsKICAgICAgY29sb3JzLmZvckVhY2goZnVuY3Rpb24gKHZhbHVlLCBpbmRleCkgewogICAgICAgIF90aGlzMi5sb2FkLmltYWdlKCJzaGlwIiArIGluZGV4LCByZXF1aXJlKCJAL2Fzc2V0cy9zaGlwIiArIGluZGV4ICsgIi5wbmciKSk7CiAgICAgIH0pOwogICAgICB0aGlzLmxvYWQuaW1hZ2UoJ3BhcnRpY2xlJywgJ2h0dHBzOi8vbGFicy5waGFzZXIuaW8vYXNzZXRzL3BhcnRpY2xlcy9yZWQucG5nJyk7CiAgICB9CiAgfSwgewogICAga2V5OiAiY3JlYXRlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgd2luZG93Lm1pdHQub24od2Vic29ja2V0RXZlbnRzLkxPQkJZX01PRElGSUVELCBmdW5jdGlvbiAoZ2FtZSkgewogICAgICAgIGNvbnNvbGUubG9nKCJsb2JieSBtb2RpZmllZCBpbiBwaGFzZXIiLCBnYW1lKTsKICAgICAgICB2YXIgY3VycmVudGx5UGxheWluZ0lkcyA9IFtdOwogICAgICAgIGdhbWUucGxheWVycy5mb3JFYWNoKGZ1bmN0aW9uIChwbGF5ZXIpIHsKICAgICAgICAgIGN1cnJlbnRseVBsYXlpbmdJZHMucHVzaChwbGF5ZXIubG9jYWxJZCk7CiAgICAgICAgfSk7CiAgICAgICAgdmFyIHByZXZpb3VzUGxheWluZ0lkcyA9IFtdOwoKICAgICAgICBfdGhpczMubG9iYnkucGxheWVycy5mb3JFYWNoKGZ1bmN0aW9uIChwbGF5ZXIpIHsKICAgICAgICAgIHByZXZpb3VzUGxheWluZ0lkcy5wdXNoKHBsYXllci5sb2NhbElkKTsKICAgICAgICB9KTsKCiAgICAgICAgX3RoaXMzLmxvYmJ5ID0gZ2FtZTsKICAgICAgICB2YXIgbmV3U2hpcHMgPSB7fTsKICAgICAgICBjdXJyZW50bHlQbGF5aW5nSWRzLmZvckVhY2goZnVuY3Rpb24gKGlkKSB7CiAgICAgICAgICBpZiAocHJldmlvdXNQbGF5aW5nSWRzLmluY2x1ZGVzKGlkKSkgewogICAgICAgICAgICBuZXdTaGlwc1tpZF0gPSBfdGhpczMuc2hpcHNbaWRdOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgbmV3U2hpcHNbaWRdID0gX3RoaXMzLmNyZWF0ZU5ld1NoaXAoX3RoaXMzLmZpbmRQbGF5ZXJCeUlkKGlkKS5jb2xvcik7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgICAgX3RoaXMzLnNoaXBzID0gbmV3U2hpcHM7CiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogInVwZGF0ZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlKCkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIGlmIChBcnJheS5pc0FycmF5KHRoaXMubG9iYnkucGxheWVycykpIHsKICAgICAgICB0aGlzLmxvYmJ5LnBsYXllcnMuZm9yRWFjaChmdW5jdGlvbiAocGxheWVyKSB7CiAgICAgICAgICB2YXIgc2hpcCA9IF90aGlzNC5zaGlwc1twbGF5ZXIubG9jYWxJZF07CiAgICAgICAgICB2YXIgX3NoaXAkYm9keSR2ZWxvY2l0eSA9IHNoaXAuYm9keS52ZWxvY2l0eSwKICAgICAgICAgICAgICB4ID0gX3NoaXAkYm9keSR2ZWxvY2l0eS54LAogICAgICAgICAgICAgIHkgPSBfc2hpcCRib2R5JHZlbG9jaXR5Lnk7CiAgICAgICAgICBzaGlwLnJvdGF0aW9uID0gX3RoaXM0LmdldEFuZ2xlKHgsIHkpOwogICAgICAgICAgc2hpcC5zZXRWZWxvY2l0eShfdGhpczQubG9iYnkudmVsb2NpdHkgKiBNYXRoLmNvcyhzaGlwLnJvdGF0aW9uKSwgX3RoaXM0LmxvYmJ5LnZlbG9jaXR5ICogTWF0aC5zaW4oc2hpcC5yb3RhdGlvbikpOwogICAgICAgIH0pOwogICAgICB9CiAgICB9CiAgfV0pOwoKICByZXR1cm4gTG9iYnlTY2VuZTsKfShQaGFzZXIuU2NlbmUpOwoKZXhwb3J0IHsgTG9iYnlTY2VuZSBhcyBkZWZhdWx0IH07"},{"version":3,"sources":["/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/src/scenes/LobbyScene.js"],"names":["Phaser","colors","sceneKeys","mitt","websocketEvents","window","LobbyScene","key","lobby","players","currentPlayer","settings","totalTurns","velocity","angularVelocity","reloadingVelocity","ships","x","y","angle","Math","atan","PI","color","Between","width","height","ship","physics","add","image","setVelocity","shipVelocity","cos","sin","rotation","setCollideWorldBounds","setBounce","id","i","length","localId","sys","game","canvas","forEach","value","index","load","require","on","LOBBY_MODIFIED","console","log","currentlyPlayingIds","player","push","previousPlayingIds","newShips","includes","createNewShip","findPlayerById","Array","isArray","body","getAngle","Scene"],"mappings":"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","sourcesContent":["import * as Phaser from \"phaser\";\nimport {colors, sceneKeys} from \"../constants/constants\";\nimport mitt from \"mitt\";\nimport websocketEvents from \"../constants/websocketEvents\";\n\nwindow.mitt = window.mitt || mitt();\nexport default class LobbyScene extends Phaser.Scene {\n\n    constructor() {\n        super({key: sceneKeys.lobby});\n        this.lobby = {\n            players: [],\n            currentPlayer: null,\n            settings: {\n                totalTurns: 5,\n                velocity: 2,\n                angularVelocity: 2,\n                reloadingVelocity: 2\n            }\n        }\n        this.ships = {};\n    }\n\n    getAngle(x, y){\n        let angle;\n        if(x!==0) {\n            angle = Math.atan(y / x);\n            angle = x < 0 ? angle + Math.PI : angle;\n        } else if(y>=0) angle = Math.PI / 2;\n        else if(y<0) angle = -Math.PI / 2;\n        return angle;\n    }\n\n    createNewShip(color){\n        let x = Phaser.Math.Between(0, this.width);\n        let y = Phaser.Math.Between(0, this.height);\n        let ship = this.physics.add.image(x, y, \"ship\"+color);\n        let angle = Phaser.Math.Between(Math.PI/4, Math.PI*3/4);\n        ship.setVelocity(this.shipVelocity*Math.cos(angle), this.shipVelocity*Math.sin(angle));\n        ship.rotation = angle;\n        ship.setCollideWorldBounds(true);\n        ship.setBounce(1, 1);\n    }\n\n    findPlayerById(id){\n        for(let i = 0; i < this.lobby.players.length; i++){\n            if(this.lobby.players[i].localId === id) return this.lobby.players[i];\n        }\n        return null;\n    }\n\n    preload(){\n\n        //load images\n        this.width = this.sys.game.canvas.width;\n        this.height = this.sys.game.canvas.height;\n        colors.forEach((value, index) => {\n            this.load.image(\"ship\"+index, require(\"@/assets/ship\"+index+\".png\"))\n        });\n        this.load.image('particle', 'https://labs.phaser.io/assets/particles/red.png');\n\n    }\n\n    create(){\n        window.mitt.on(websocketEvents.LOBBY_MODIFIED, game => {\n            console.log(\"lobby modified in phaser\", game);\n            let currentlyPlayingIds = [];\n            game.players.forEach(player => {currentlyPlayingIds.push(player.localId)});\n\n            let previousPlayingIds = [];\n            this.lobby.players.forEach(player => {previousPlayingIds.push(player.localId)});\n\n            this.lobby = game;\n\n            let newShips = {};\n            currentlyPlayingIds.forEach(id => {\n                if(previousPlayingIds.includes(id)){\n                    newShips[id] = this.ships[id];\n                } else {\n                    newShips[id] = this.createNewShip(this.findPlayerById(id).color);\n                }\n            });\n\n            this.ships = newShips;\n        });\n    }\n\n    update(){\n        if(Array.isArray(this.lobby.players)) {\n            this.lobby.players.forEach(player => {\n                let ship = this.ships[player.localId]\n                let {x, y} = ship.body.velocity;\n                ship.rotation = this.getAngle(x, y);\n                ship.setVelocity(\n                    this.lobby.velocity * Math.cos(ship.rotation),\n                    this.lobby.velocity * Math.sin(ship.rotation));\n            });\n        }\n    }\n}"]}]}
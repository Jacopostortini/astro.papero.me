{"remainingRequest":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/babel-loader/lib/index.js!/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/eslint-loader/index.js??ref--13-0!/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/src/MainScene.js","dependencies":[{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/src/MainScene.js","mtime":1616153787956},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/cache-loader/dist/cjs.js","mtime":1610909371557},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/babel-loader/lib/index.js","mtime":1610909371562},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/eslint-loader/index.js","mtime":1610909415268}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvbWVkaWEvamFjb3BvL1ZvbHVtZURhdGkvRG9jdW1lbnRpL3BhcGVyby50ay9hc3Ryby5wYXBlcm8ubWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvbWVkaWEvamFjb3BvL1ZvbHVtZURhdGkvRG9jdW1lbnRpL3BhcGVyby50ay9hc3Ryby5wYXBlcm8ubWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICIvbWVkaWEvamFjb3BvL1ZvbHVtZURhdGkvRG9jdW1lbnRpL3BhcGVyby50ay9hc3Ryby5wYXBlcm8ubWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICIvbWVkaWEvamFjb3BvL1ZvbHVtZURhdGkvRG9jdW1lbnRpL3BhcGVyby50ay9hc3Ryby5wYXBlcm8ubWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZVN1cGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAqIGFzIFBoYXNlciBmcm9tICJwaGFzZXIiOwppbXBvcnQgaW8gZnJvbSAic29ja2V0LmlvLWNsaWVudCI7Cgp2YXIgTWFpblNjZW5lID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfUGhhc2VyJFNjZW5lKSB7CiAgX2luaGVyaXRzKE1haW5TY2VuZSwgX1BoYXNlciRTY2VuZSk7CgogIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoTWFpblNjZW5lKTsKCiAgZnVuY3Rpb24gTWFpblNjZW5lKCkgewogICAgdmFyIF90aGlzOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBNYWluU2NlbmUpOwoKICAgIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgewogICAgICBrZXk6ICJNYWluIgogICAgfSk7CiAgICBfdGhpcy5hbmd1bGFyVmVsb2NpdHkgPSBNYXRoLlBJICogMjsKICAgIF90aGlzLnZlbG9jaXR5ID0gMjAwOwogICAgX3RoaXMucGxheWVycyA9IFtdOwogICAgX3RoaXMucGxheWVySUQgPSBudWxsOwogICAgX3RoaXMuc29ja2V0ID0gaW8oImh0dHBzOi8vcGFwZXJvLm1lIiwgewogICAgICBwYXRoOiAiL3NlcnZlci9hc3Ryby9zb2NrZXQuaW8iLAogICAgICBhdXRvQ29ubmVjdDogdHJ1ZQogICAgfSk7CgogICAgX3RoaXMuc29ja2V0Lm9uKCJjb25uZWN0IiwgZnVuY3Rpb24gKCkgewogICAgICBjb25zb2xlLmxvZygiY29ubmVjdGVkIik7CiAgICB9KTsKCiAgICByZXR1cm4gX3RoaXM7CiAgfQoKICBfY3JlYXRlQ2xhc3MoTWFpblNjZW5lLCBbewogICAga2V5OiAicHJlbG9hZCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcHJlbG9hZCgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0aGlzLmxvYWQuaW1hZ2UoInNoaXAiLCAiaHR0cHM6Ly9sYWJzLnBoYXNlci5pby9hc3NldHMvc3ByaXRlcy9hc3Rlcm9pZHNfc2hpcC5wbmciKTsKICAgICAgdGhpcy5zb2NrZXQub24oImdldC1nYW1lIiwgZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICBjb25zb2xlLmxvZygiZ2V0LWdhbWUiLCBkYXRhKTsKCiAgICAgICAgZm9yICh2YXIgaWQgPSAwOyBpZCA8IGRhdGE7IGlkKyspIHsKICAgICAgICAgIHZhciBzaGlwID0gX3RoaXMyLnBoeXNpY3MuYWRkLmltYWdlKDAsIDAsICJzaGlwIik7CgogICAgICAgICAgc2hpcC5zZXRDb2xsaWRlV29ybGRCb3VuZHModHJ1ZSk7CgogICAgICAgICAgX3RoaXMyLnBsYXllcnMucHVzaCh7CiAgICAgICAgICAgIGlkOiBpZCwKICAgICAgICAgICAgc2hpcDogc2hpcAogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgdGhpcy5zb2NrZXQub24oIm5ldy1wbGF5ZXIiLCBmdW5jdGlvbiAoaWQpIHsKICAgICAgICBjb25zb2xlLmxvZygibmV3LXBsYXllciIpOwoKICAgICAgICB2YXIgc2hpcCA9IF90aGlzMi5waHlzaWNzLmFkZC5pbWFnZSg0MDAsIDMwMCwgInNoaXAiKTsKCiAgICAgICAgc2hpcC5zZXRDb2xsaWRlV29ybGRCb3VuZHModHJ1ZSk7CgogICAgICAgIF90aGlzMi5wbGF5ZXJzLnB1c2goewogICAgICAgICAgaWQ6IGlkLAogICAgICAgICAgc2hpcDogc2hpcAogICAgICAgIH0pOwoKICAgICAgICBjb25zb2xlLmxvZygiVGhlIHBsYXllcnM6ICIsIF90aGlzMi5wbGF5ZXJzKTsKICAgICAgICBjb25zb2xlLmxvZygiWW91ciBpZCBpcyIsIF90aGlzMi5wbGF5ZXJJRCk7CiAgICAgIH0pOwogICAgICB0aGlzLnNvY2tldC5vbigieW91ci1pZCIsIGZ1bmN0aW9uIChpZCkgewogICAgICAgIGNvbnNvbGUubG9nKCJ5b3VyLWlkIik7CiAgICAgICAgX3RoaXMyLnBsYXllcklEID0gaWQ7CgogICAgICAgIHZhciBzaGlwID0gX3RoaXMyLnBoeXNpY3MuYWRkLmltYWdlKDQwMCwgMzAwLCAic2hpcCIpOwoKICAgICAgICBzaGlwLnNldENvbGxpZGVXb3JsZEJvdW5kcyh0cnVlKTsKCiAgICAgICAgX3RoaXMyLnBsYXllcnMucHVzaCh7CiAgICAgICAgICBpZDogaWQsCiAgICAgICAgICBzaGlwOiBzaGlwCiAgICAgICAgfSk7CgogICAgICAgIGNvbnNvbGUubG9nKCJUaGUgcGxheWVyczogIiwgX3RoaXMyLnBsYXllcnMpOwogICAgICAgIGNvbnNvbGUubG9nKCJZb3VyIGlkIGlzIiwgX3RoaXMyLnBsYXllcklEKTsKICAgICAgfSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiY3JlYXRlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgdGhpcy5zb2NrZXQuZW1pdCgiZ2V0LWdhbWUiKTsKICAgICAgdGhpcy5zb2NrZXQuZW1pdCgibmV3LXBsYXllciIpOwogICAgICB0aGlzLmtleUEgPSB0aGlzLmlucHV0LmtleWJvYXJkLmFkZEtleShQaGFzZXIuSW5wdXQuS2V5Ym9hcmQuS2V5Q29kZXMuQSk7CiAgICAgIHRoaXMuc29ja2V0Lm9uKCJtb3ZlIiwgZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICBjb25zb2xlLmxvZygiYSBwbGF5ZXIgbW92ZWQiLCBkYXRhKTsKCiAgICAgICAgX3RoaXMzLnBsYXllcnMuZm9yRWFjaChmdW5jdGlvbiAocGxheWVyKSB7CiAgICAgICAgICBpZiAocGxheWVyLmlkID09PSBkYXRhLmlkKSB7CiAgICAgICAgICAgIHBsYXllci5zaGlwLnJvdGF0aW9uID0gZGF0YS5yb3RhdGlvbjsKICAgICAgICAgICAgcGxheWVyLnNoaXAueCA9IGRhdGEucG9zaXRpb24ueDsKICAgICAgICAgICAgcGxheWVyLnNoaXAueSA9IGRhdGEucG9zaXRpb24ueTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9CiAgfSwgewogICAga2V5OiAidXBkYXRlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiB1cGRhdGUodGltZSwgZGVsdGEpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICB0aGlzLnBsYXllcnMuZm9yRWFjaChmdW5jdGlvbiAocGxheWVyKSB7CiAgICAgICAgaWYgKHBsYXllci5pZCA9PT0gX3RoaXM0LnBsYXllcklEKSB7CiAgICAgICAgICBpZiAoX3RoaXM0LmtleUEuaXNEb3duKSB7CiAgICAgICAgICAgIHBsYXllci5zaGlwLnJvdGF0aW9uICs9IF90aGlzNC5hbmd1bGFyVmVsb2NpdHkgKiBkZWx0YSAvIDEwMDA7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCJ5b3UgYXJlIGFib3V0IHRvIGVtaXQgYSBtb3ZlIik7CgogICAgICAgICAgICBfdGhpczQuc29ja2V0LmVtaXQoIm1vdmUiLCB7CiAgICAgICAgICAgICAgcGxheWVyOiBfdGhpczQucGxheWVySUQsCiAgICAgICAgICAgICAgcm90YXRpb246IHBsYXllci5zaGlwLnJvdGF0aW9uLAogICAgICAgICAgICAgIHBvc2l0aW9uOiB7CiAgICAgICAgICAgICAgICB4OiBwbGF5ZXIuc2hpcC54LAogICAgICAgICAgICAgICAgeTogcGxheWVyLnNoaXAueQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBwbGF5ZXIuc2hpcC5zZXRWZWxvY2l0eShfdGhpczQudmVsb2NpdHkgKiBNYXRoLmNvcyhwbGF5ZXIuc2hpcC5yb3RhdGlvbiksIF90aGlzNC52ZWxvY2l0eSAqIE1hdGguc2luKHBsYXllci5zaGlwLnJvdGF0aW9uKSk7CiAgICAgIH0pOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIE1haW5TY2VuZTsKfShQaGFzZXIuU2NlbmUpOwoKZXhwb3J0IHsgTWFpblNjZW5lIGFzIGRlZmF1bHQgfTs="},{"version":3,"sources":["/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/src/MainScene.js"],"names":["Phaser","io","MainScene","key","angularVelocity","Math","PI","velocity","players","playerID","socket","path","autoConnect","on","console","log","load","image","data","id","ship","physics","add","setCollideWorldBounds","push","emit","keyA","input","keyboard","addKey","Input","Keyboard","KeyCodes","A","forEach","player","rotation","x","position","y","time","delta","isDown","setVelocity","cos","sin","Scene"],"mappings":"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","sourcesContent":["import * as Phaser from \"phaser\";\nimport io from \"socket.io-client\";\n\nexport default class MainScene extends Phaser.Scene {\n\n    constructor() {\n        super({key: \"Main\"});\n        this.angularVelocity = Math.PI*2;\n        this.velocity = 200;\n        this.players = [];\n        this.playerID = null;\n        this.socket = io(\"https://papero.me\", {\n            path: \"/server/astro/socket.io\",\n            autoConnect: true\n        });\n        this.socket.on(\"connect\", ()=>{\n            console.log(\"connected\")\n        });\n    }\n\n    preload(){\n        this.load.image(\"ship\", \"https://labs.phaser.io/assets/sprites/asteroids_ship.png\");\n        this.socket.on(\"get-game\", (data)=>{\n            console.log(\"get-game\",data);\n            for(let id= 0; id < data; id++){\n                let ship = this.physics.add.image(0, 0, \"ship\");\n                ship.setCollideWorldBounds(true);\n                this.players.push({\n                    id,\n                    ship,\n                });\n            }\n        })\n        this.socket.on(\"new-player\", (id)=> {\n            console.log(\"new-player\")\n            let ship = this.physics.add.image(400, 300, \"ship\");\n            ship.setCollideWorldBounds(true);\n            this.players.push({\n                id,\n                ship,\n            });\n            console.log(\"The players: \", this.players);\n            console.log(\"Your id is\", this.playerID)\n        });\n        this.socket.on(\"your-id\", (id)=>{\n            console.log(\"your-id\");\n            this.playerID = id;\n            let ship = this.physics.add.image(400, 300, \"ship\");\n            ship.setCollideWorldBounds(true);\n            this.players.push({\n                id,\n                ship,\n            });\n            console.log(\"The players: \", this.players);\n            console.log(\"Your id is\", this.playerID)\n        })\n    }\n\n    create(){\n        this.socket.emit(\"get-game\");\n        this.socket.emit(\"new-player\");\n        this.keyA = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.A);\n        this.socket.on(\"move\", (data)=>{\n            console.log(\"a player moved\", data);\n           this.players.forEach(player => {\n               if(player.id === data.id){\n                   player.ship.rotation = data.rotation;\n                   player.ship.x = data.position.x;\n                   player.ship.y = data.position.y;\n               }\n           });\n        });\n    }\n\n    update(time, delta){\n        this.players.forEach(player => {\n            if(player.id === this.playerID){\n                if(this.keyA.isDown){\n                    player.ship.rotation += this.angularVelocity*delta/1000;\n                    console.log(\"you are about to emit a move\");\n                    this.socket.emit(\"move\", {\n                        player: this.playerID,\n                        rotation: player.ship.rotation,\n                        position: {\n                            x: player.ship.x,\n                            y: player.ship.y\n                        }\n                    });\n                }\n            }\n            player.ship.setVelocity(this.velocity*Math.cos(player.ship.rotation), this.velocity*Math.sin(player.ship.rotation));\n        });\n    }\n}"]}]}
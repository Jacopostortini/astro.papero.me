{"remainingRequest":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/thread-loader/dist/cjs.js!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/babel-loader/lib/index.js!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/eslint-loader/index.js??ref--13-0!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/maps.js","dependencies":[{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/maps.js","mtime":1618480726109},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/cache-loader/dist/cjs.js","mtime":1618298483685},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/thread-loader/dist/cjs.js","mtime":1618298485037},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/babel-loader/lib/index.js","mtime":1618298483657},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/eslint-loader/index.js","mtime":1618298483941}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL21lZGlhL2phY29wby9Wb2x1bWVEYXRpL0RvY3VtZW50aS9wYXBlcm8udGsvY29zbW9zLnBhcGVyby5tZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCBfdG9Db25zdW1hYmxlQXJyYXkgZnJvbSAiL21lZGlhL2phY29wby9Wb2x1bWVEYXRpL0RvY3VtZW50aS9wYXBlcm8udGsvY29zbW9zLnBhcGVyby5tZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKaW1wb3J0IHsgZ2V0Q2VudGVyZWRDcm9zcywgZ2V0Q2VudGVyZWRTcXVhcmUsIGdldE1vdmluZ1NsYWxvbSwgZ2V0U3RhcnRpbmdQcmlzb25zLCBnZXRNb3ZpbmdWZXJ0aWNhbCwgZ2V0TWl4ZWRPcml6b250YWxMaW5lIH0gZnJvbSAiLi4vY29uc3RhbnRzL21hcENvbnN0YW50cyI7CmltcG9ydCB7IGdldEJvZHlGcm9tQ29sbGlzaW9uIH0gZnJvbSAiLi9zY2VuZSI7CnZhciBtYXBzID0gW1tdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkoZ2V0U3RhcnRpbmdQcmlzb25zKCkpLCBfdG9Db25zdW1hYmxlQXJyYXkoZ2V0Q2VudGVyZWRTcXVhcmUoNSkpKSwgX3RvQ29uc3VtYWJsZUFycmF5KGdldE1vdmluZ1NsYWxvbSg0KSksIFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkoZ2V0Q2VudGVyZWRDcm9zcyg1MDAsIDEwMCkpLCBfdG9Db25zdW1hYmxlQXJyYXkoZ2V0Q2VudGVyZWRTcXVhcmUoMykpKSwgW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShnZXRNb3ZpbmdWZXJ0aWNhbCgzKSksIF90b0NvbnN1bWFibGVBcnJheShnZXRNaXhlZE9yaXpvbnRhbExpbmUoKSkpXTsKZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIChjdHgpIHsKICB2YXIgbWFwID0gbWFwc1tjdHgubWFwXTsKICBtYXAuZm9yRWFjaChmdW5jdGlvbiAob2JqKSB7CiAgICB2YXIgbyA9IGN0eC5tYXR0ZXIuYWRkLmltYWdlKG9iai5wb3NpdGlvbi54LCBvYmoucG9zaXRpb24ueSwgb2JqLnRleHR1cmUsIG51bGwsIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgY3R4LmRlZmF1bHRJbWFnZU9wdGlvbnMpLCB7fSwgewogICAgICByZXN0aXR1dGlvbjogMQogICAgfSkpOwogICAgaWYgKG9iai5raWxsYWJsZSkgby5zZXRDb2xsaXNpb25DYXRlZ29yeShjdHgua2lsbGFibGVNYXBPYmplY3RDYXRlZ29yeSk7ZWxzZSBvLnNldENvbGxpc2lvbkNhdGVnb3J5KGN0eC5ub3RLaWxsYWJsZU1hcE9iamVjdENhdGVnb3J5KTsKICAgIGlmIChvYmoudmVsb2NpdHkpIG8uc2V0VmVsb2NpdHkob2JqLnZlbG9jaXR5LngsIG9iai52ZWxvY2l0eS55KTsKICAgIGlmIChvYmouYm91bmNlKSBvLnNldEJvdW5jZShvYmouYm91bmNlKTsKICAgIGN0eC5tYXR0ZXIuYm9keS5zZXRJbmVydGlhKG8uYm9keSwgSW5maW5pdHkpOwogICAgY3R4Lm1hdHRlci5ib2R5LnNldE1hc3Moby5ib2R5LCBJbmZpbml0eSk7CiAgICBvLnNldE9uQ29sbGlkZShmdW5jdGlvbiAoY29sbGlzaW9uKSB7CiAgICAgIHZhciBib2R5ID0gZ2V0Qm9keUZyb21Db2xsaXNpb24oby5ib2R5LmlkLCBjb2xsaXNpb24pOwogICAgICBib2R5LmdhbWVPYmplY3QuZGVzdHJveSgpOwogICAgfSk7CiAgfSk7Cn0pOw=="},{"version":3,"sources":["/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/maps.js"],"names":["getCenteredCross","getCenteredSquare","getMovingSlalom","getStartingPrisons","getMovingVertical","getMixedOrizontalLine","getBodyFromCollision","maps","ctx","map","forEach","obj","o","matter","add","image","position","x","y","texture","defaultImageOptions","restitution","killable","setCollisionCategory","killableMapObjectCategory","notKillableMapObjectCategory","velocity","setVelocity","bounce","setBounce","body","setInertia","Infinity","setMass","setOnCollide","collision","id","gameObject","destroy"],"mappings":";;;;;AAAA,SAAQA,gBAAR,EAA0BC,iBAA1B,EAA6CC,eAA7C,EAA8DC,kBAA9D,EAAkFC,iBAAlF,EAAqGC,qBAArG,QAAiI,2BAAjI;AACA,SAAQC,oBAAR,QAAmC,SAAnC;AAEA,IAAMC,IAAI,GAAG,8BACLJ,kBAAkB,EADb,sBACoBF,iBAAiB,CAAC,CAAD,CADrC,uBAELC,eAAe,CAAC,CAAD,CAFV,gCAGLF,gBAAgB,CAAC,GAAD,EAAM,GAAN,CAHX,sBAG0BC,iBAAiB,CAAC,CAAD,CAH3C,iCAILG,iBAAiB,CAAC,CAAD,CAJZ,sBAIoBC,qBAAqB,EAJzC,GAAb;AAOA,gBAAe,UAACG,GAAD,EAAS;AACpB,MAAMC,GAAG,GAAGF,IAAI,CAACC,GAAG,CAACC,GAAL,CAAhB;AACAA,EAAAA,GAAG,CAACC,OAAJ,CAAY,UAAAC,GAAG,EAAI;AACf,QAAMC,CAAC,GAAGJ,GAAG,CAACK,MAAJ,CAAWC,GAAX,CAAeC,KAAf,CAAqBJ,GAAG,CAACK,QAAJ,CAAaC,CAAlC,EAAqCN,GAAG,CAACK,QAAJ,CAAaE,CAAlD,EAAqDP,GAAG,CAACQ,OAAzD,EAAkE,IAAlE,kCAA4EX,GAAG,CAACY,mBAAhF;AAAqGC,MAAAA,WAAW,EAAE;AAAlH,OAAV;AACA,QAAGV,GAAG,CAACW,QAAP,EAAiBV,CAAC,CAACW,oBAAF,CAAuBf,GAAG,CAACgB,yBAA3B,EAAjB,KACKZ,CAAC,CAACW,oBAAF,CAAuBf,GAAG,CAACiB,4BAA3B;AACL,QAAGd,GAAG,CAACe,QAAP,EAAiBd,CAAC,CAACe,WAAF,CAAchB,GAAG,CAACe,QAAJ,CAAaT,CAA3B,EAA8BN,GAAG,CAACe,QAAJ,CAAaR,CAA3C;AACjB,QAAGP,GAAG,CAACiB,MAAP,EAAehB,CAAC,CAACiB,SAAF,CAAYlB,GAAG,CAACiB,MAAhB;AACfpB,IAAAA,GAAG,CAACK,MAAJ,CAAWiB,IAAX,CAAgBC,UAAhB,CAA2BnB,CAAC,CAACkB,IAA7B,EAAmCE,QAAnC;AACAxB,IAAAA,GAAG,CAACK,MAAJ,CAAWiB,IAAX,CAAgBG,OAAhB,CAAwBrB,CAAC,CAACkB,IAA1B,EAAgCE,QAAhC;AACApB,IAAAA,CAAC,CAACsB,YAAF,CAAe,UAAAC,SAAS,EAAI;AACxB,UAAML,IAAI,GAAGxB,oBAAoB,CAACM,CAAC,CAACkB,IAAF,CAAOM,EAAR,EAAYD,SAAZ,CAAjC;AACAL,MAAAA,IAAI,CAACO,UAAL,CAAgBC,OAAhB;AACH,KAHD;AAIH,GAZD;AAaH,CAfD","sourcesContent":["import {getCenteredCross, getCenteredSquare, getMovingSlalom, getStartingPrisons, getMovingVertical, getMixedOrizontalLine} from \"../constants/mapConstants\";\nimport {getBodyFromCollision} from \"./scene\";\n\nconst maps = [\n    [...getStartingPrisons(), ...getCenteredSquare(5)],\n    [...getMovingSlalom(4)],\n    [...getCenteredCross(500, 100), ...getCenteredSquare(3)],\n    [...getMovingVertical(3), ...getMixedOrizontalLine()]\n];\n\nexport default (ctx) => {\n    const map = maps[ctx.map];\n    map.forEach(obj => {\n        const o = ctx.matter.add.image(obj.position.x, obj.position.y, obj.texture, null, {...ctx.defaultImageOptions, restitution: 1});\n        if(obj.killable) o.setCollisionCategory(ctx.killableMapObjectCategory);\n        else o.setCollisionCategory(ctx.notKillableMapObjectCategory);\n        if(obj.velocity) o.setVelocity(obj.velocity.x, obj.velocity.y);\n        if(obj.bounce) o.setBounce(obj.bounce);\n        ctx.matter.body.setInertia(o.body, Infinity);\n        ctx.matter.body.setMass(o.body, Infinity);\n        o.setOnCollide(collision => {\n            const body = getBodyFromCollision(o.body.id, collision);\n            body.gameObject.destroy();\n        });\n    });\n};"]}]}
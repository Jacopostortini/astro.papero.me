{"remainingRequest":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/thread-loader/dist/cjs.js!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/babel-loader/lib/index.js!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/eslint-loader/index.js??ref--13-0!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/maps.js","dependencies":[{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/maps.js","mtime":1618504179867},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/cache-loader/dist/cjs.js","mtime":1618298483685},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/thread-loader/dist/cjs.js","mtime":1618298485037},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/babel-loader/lib/index.js","mtime":1618298483657},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/eslint-loader/index.js","mtime":1618298483941}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL21lZGlhL2phY29wby9Wb2x1bWVEYXRpL0RvY3VtZW50aS9wYXBlcm8udGsvY29zbW9zLnBhcGVyby5tZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCBfdG9Db25zdW1hYmxlQXJyYXkgZnJvbSAiL21lZGlhL2phY29wby9Wb2x1bWVEYXRpL0RvY3VtZW50aS9wYXBlcm8udGsvY29zbW9zLnBhcGVyby5tZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKaW1wb3J0IHsgZ2V0Q2VudGVyZWRDcm9zcywgZ2V0Q2VudGVyZWRTcXVhcmUsIGdldE1vdmluZ1NsYWxvbSwgZ2V0U3RhcnRpbmdQcmlzb25zLCBnZXRNb3ZpbmdWZXJ0aWNhbCwgZ2V0TWl4ZWRPcml6b250YWxMaW5lIH0gZnJvbSAiLi4vY29uc3RhbnRzL21hcENvbnN0YW50cyI7CmltcG9ydCB7IGdldEJvZHlGcm9tQ29sbGlzaW9uIH0gZnJvbSAiLi9zY2VuZSI7CnZhciBtYXBzID0gW1tdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkoZ2V0U3RhcnRpbmdQcmlzb25zKCkpLCBfdG9Db25zdW1hYmxlQXJyYXkoZ2V0Q2VudGVyZWRTcXVhcmUoNSkpKSwgX3RvQ29uc3VtYWJsZUFycmF5KGdldE1vdmluZ1NsYWxvbSg0KSksIFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkoZ2V0Q2VudGVyZWRDcm9zcyg1MDAsIDEwMCkpLCBfdG9Db25zdW1hYmxlQXJyYXkoZ2V0Q2VudGVyZWRTcXVhcmUoMykpKSwgW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShnZXRNb3ZpbmdWZXJ0aWNhbCgzKSksIF90b0NvbnN1bWFibGVBcnJheShnZXRNaXhlZE9yaXpvbnRhbExpbmUoKSkpXTsKZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIChjdHgpIHsKICB2YXIgbWFwID0gbWFwc1tjdHgubWFwXTsKICBtYXAuZm9yRWFjaChmdW5jdGlvbiAob2JqKSB7CiAgICB2YXIgbyA9IGN0eC5tYXR0ZXIuYWRkLmltYWdlKG9iai5wb3NpdGlvbi54LCBvYmoucG9zaXRpb24ueSwgb2JqLnRleHR1cmUsIG51bGwsIF9vYmplY3RTcHJlYWQoe30sIGN0eC5kZWZhdWx0SW1hZ2VPcHRpb25zKSk7CiAgICBvLnNldENvbGxpc2lvbkNhdGVnb3J5KGN0eC5tYXBPYmplY3RDYXRlZ29yeSk7CiAgICBpZiAob2JqLnZlbG9jaXR5KSBvLnNldFZlbG9jaXR5KG9iai52ZWxvY2l0eS54LCBvYmoudmVsb2NpdHkueSk7CiAgICBpZiAob2JqLmJvdW5jZSkgby5zZXRCb3VuY2Uob2JqLmJvdW5jZSk7CiAgICBvLnNldENvbGxpZGVzV2l0aChbMSwgY3R4LnNoaXBzQ2F0ZWdvcnksIGN0eC5idWxsZXRzQ2F0ZWdvcnldKTsKICAgIG8uc2V0U3RhdGljKHRydWUpOwogICAgY3R4Lm1hdHRlci5ib2R5LnNldEluZXJ0aWEoby5ib2R5LCBJbmZpbml0eSk7IC8vY3R4Lm1hdHRlci5ib2R5LnNldE1hc3Moby5ib2R5LCBJbmZpbml0eSk7CgogICAgby5zZXRPbkNvbGxpZGUoZnVuY3Rpb24gKGNvbGxpc2lvbikgewogICAgICB2YXIgYm9keSA9IGdldEJvZHlGcm9tQ29sbGlzaW9uKG8uYm9keS5pZCwgY29sbGlzaW9uKTsKCiAgICAgIGlmIChib2R5LmdhbWVPYmplY3QpIHsKICAgICAgICBpZiAob2JqLmtpbGxhYmxlICYmIGJvZHkuY29sbGlzaW9uRmlsdGVyLmNhdGVnb3J5ID09PSBjdHguYnVsbGV0c0NhdGVnb3J5KSB7CiAgICAgICAgICBjb25zb2xlLmxvZygiZGVzdHJveWluZzoiLCBvLCAiYWZ0ZXIgY29sbGlzaW9uOiIsIGNvbGxpc2lvbik7CiAgICAgICAgICBvLmRlc3Ryb3koKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0pOwogIH0pOwp9KTs="},{"version":3,"sources":["/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/maps.js"],"names":["getCenteredCross","getCenteredSquare","getMovingSlalom","getStartingPrisons","getMovingVertical","getMixedOrizontalLine","getBodyFromCollision","maps","ctx","map","forEach","obj","o","matter","add","image","position","x","y","texture","defaultImageOptions","setCollisionCategory","mapObjectCategory","velocity","setVelocity","bounce","setBounce","setCollidesWith","shipsCategory","bulletsCategory","setStatic","body","setInertia","Infinity","setOnCollide","collision","id","gameObject","killable","collisionFilter","category","console","log","destroy"],"mappings":";;;;;AAAA,SAAQA,gBAAR,EAA0BC,iBAA1B,EAA6CC,eAA7C,EAA8DC,kBAA9D,EAAkFC,iBAAlF,EAAqGC,qBAArG,QAAiI,2BAAjI;AACA,SAAQC,oBAAR,QAAmC,SAAnC;AAEA,IAAMC,IAAI,GAAG,8BACLJ,kBAAkB,EADb,sBACoBF,iBAAiB,CAAC,CAAD,CADrC,uBAELC,eAAe,CAAC,CAAD,CAFV,gCAGLF,gBAAgB,CAAC,GAAD,EAAM,GAAN,CAHX,sBAG0BC,iBAAiB,CAAC,CAAD,CAH3C,iCAILG,iBAAiB,CAAC,CAAD,CAJZ,sBAIoBC,qBAAqB,EAJzC,GAAb;AAOA,gBAAe,UAACG,GAAD,EAAS;AACpB,MAAMC,GAAG,GAAGF,IAAI,CAACC,GAAG,CAACC,GAAL,CAAhB;AACAA,EAAAA,GAAG,CAACC,OAAJ,CAAY,UAAAC,GAAG,EAAI;AACf,QAAMC,CAAC,GAAGJ,GAAG,CAACK,MAAJ,CAAWC,GAAX,CAAeC,KAAf,CAAqBJ,GAAG,CAACK,QAAJ,CAAaC,CAAlC,EAAqCN,GAAG,CAACK,QAAJ,CAAaE,CAAlD,EAAqDP,GAAG,CAACQ,OAAzD,EAAkE,IAAlE,oBAA4EX,GAAG,CAACY,mBAAhF,EAAV;AACAR,IAAAA,CAAC,CAACS,oBAAF,CAAuBb,GAAG,CAACc,iBAA3B;AACA,QAAGX,GAAG,CAACY,QAAP,EAAiBX,CAAC,CAACY,WAAF,CAAcb,GAAG,CAACY,QAAJ,CAAaN,CAA3B,EAA8BN,GAAG,CAACY,QAAJ,CAAaL,CAA3C;AACjB,QAAGP,GAAG,CAACc,MAAP,EAAeb,CAAC,CAACc,SAAF,CAAYf,GAAG,CAACc,MAAhB;AACfb,IAAAA,CAAC,CAACe,eAAF,CAAkB,CAAC,CAAD,EAAInB,GAAG,CAACoB,aAAR,EAAuBpB,GAAG,CAACqB,eAA3B,CAAlB;AACAjB,IAAAA,CAAC,CAACkB,SAAF,CAAY,IAAZ;AACAtB,IAAAA,GAAG,CAACK,MAAJ,CAAWkB,IAAX,CAAgBC,UAAhB,CAA2BpB,CAAC,CAACmB,IAA7B,EAAmCE,QAAnC,EAPe,CAQf;;AACArB,IAAAA,CAAC,CAACsB,YAAF,CAAe,UAAAC,SAAS,EAAI;AACxB,UAAMJ,IAAI,GAAGzB,oBAAoB,CAACM,CAAC,CAACmB,IAAF,CAAOK,EAAR,EAAYD,SAAZ,CAAjC;;AACA,UAAGJ,IAAI,CAACM,UAAR,EAAoB;AAChB,YAAG1B,GAAG,CAAC2B,QAAJ,IAAgBP,IAAI,CAACQ,eAAL,CAAqBC,QAArB,KAAkChC,GAAG,CAACqB,eAAzD,EAAyE;AACrEY,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B9B,CAA3B,EAA8B,kBAA9B,EAAkDuB,SAAlD;AACAvB,UAAAA,CAAC,CAAC+B,OAAF;AACH;AACJ;AACJ,KARD;AASH,GAlBD;AAmBH,CArBD","sourcesContent":["import {getCenteredCross, getCenteredSquare, getMovingSlalom, getStartingPrisons, getMovingVertical, getMixedOrizontalLine} from \"../constants/mapConstants\";\nimport {getBodyFromCollision} from \"./scene\";\n\nconst maps = [\n    [...getStartingPrisons(), ...getCenteredSquare(5)],\n    [...getMovingSlalom(4)],\n    [...getCenteredCross(500, 100), ...getCenteredSquare(3)],\n    [...getMovingVertical(3), ...getMixedOrizontalLine()]\n];\n\nexport default (ctx) => {\n    const map = maps[ctx.map];\n    map.forEach(obj => {\n        const o = ctx.matter.add.image(obj.position.x, obj.position.y, obj.texture, null, {...ctx.defaultImageOptions});\n        o.setCollisionCategory(ctx.mapObjectCategory);\n        if(obj.velocity) o.setVelocity(obj.velocity.x, obj.velocity.y);\n        if(obj.bounce) o.setBounce(obj.bounce);\n        o.setCollidesWith([1, ctx.shipsCategory, ctx.bulletsCategory]);\n        o.setStatic(true);\n        ctx.matter.body.setInertia(o.body, Infinity);\n        //ctx.matter.body.setMass(o.body, Infinity);\n        o.setOnCollide(collision => {\n            const body = getBodyFromCollision(o.body.id, collision);\n            if(body.gameObject) {\n                if(obj.killable && body.collisionFilter.category === ctx.bulletsCategory){\n                    console.log(\"destroying:\", o, \"after collision:\", collision);\n                    o.destroy();\n                }\n            }\n        });\n    });\n};"]}]}
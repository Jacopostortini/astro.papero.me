{"remainingRequest":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/thread-loader/dist/cjs.js!/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/babel-loader/lib/index.js!/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/eslint-loader/index.js??ref--13-0!/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/src/MainScene.js","dependencies":[{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/src/MainScene.js","mtime":1616143979703},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/cache-loader/dist/cjs.js","mtime":1610909371557},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/thread-loader/dist/cjs.js","mtime":1610909371551},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/babel-loader/lib/index.js","mtime":1610909371562},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/eslint-loader/index.js","mtime":1610909415268}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvbWVkaWEvamFjb3BvL1ZvbHVtZURhdGkvRG9jdW1lbnRpL3BhcGVyby50ay9hc3Ryby5wYXBlcm8ubWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvbWVkaWEvamFjb3BvL1ZvbHVtZURhdGkvRG9jdW1lbnRpL3BhcGVyby50ay9hc3Ryby5wYXBlcm8ubWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICIvbWVkaWEvamFjb3BvL1ZvbHVtZURhdGkvRG9jdW1lbnRpL3BhcGVyby50ay9hc3Ryby5wYXBlcm8ubWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICIvbWVkaWEvamFjb3BvL1ZvbHVtZURhdGkvRG9jdW1lbnRpL3BhcGVyby50ay9hc3Ryby5wYXBlcm8ubWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZVN1cGVyIjsKaW1wb3J0ICogYXMgUGhhc2VyIGZyb20gInBoYXNlciI7CmltcG9ydCBpbyBmcm9tICJzb2NrZXQuaW8tY2xpZW50IjsKCnZhciBNYWluU2NlbmUgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9QaGFzZXIkU2NlbmUpIHsKICBfaW5oZXJpdHMoTWFpblNjZW5lLCBfUGhhc2VyJFNjZW5lKTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihNYWluU2NlbmUpOwoKICBmdW5jdGlvbiBNYWluU2NlbmUoKSB7CiAgICB2YXIgX3RoaXM7CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE1haW5TY2VuZSk7CgogICAgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCB7CiAgICAgIGtleTogIk1haW4iCiAgICB9KTsKICAgIF90aGlzLmFuZ3VsYXJWZWxvY2l0eSA9IE1hdGguUEkgKiAzOwogICAgX3RoaXMudmVsb2NpdHkgPSAyMDA7CiAgICBfdGhpcy5zb2NrZXQgPSBpbygiaHR0cHM6Ly9wYXBlcm8ubWUiLCB7CiAgICAgIHBhdGg6ICIvc2VydmVyL2FzdHJvL3NvY2tldC5pbyIsCiAgICAgIGF1dG9Db25uZWN0OiB0cnVlCiAgICB9KTsKCiAgICBfdGhpcy5zb2NrZXQub24oImNvbm5lY3QiLCBmdW5jdGlvbiAoKSB7CiAgICAgIGNvbnNvbGUubG9nKCJjb25uZWN0ZWQiKTsKICAgIH0pOwoKICAgIHJldHVybiBfdGhpczsKICB9CgogIF9jcmVhdGVDbGFzcyhNYWluU2NlbmUsIFt7CiAgICBrZXk6ICJwcmVsb2FkIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBwcmVsb2FkKCkgewogICAgICB0aGlzLmxvYWQuaW1hZ2UoInNoaXAiLCAiLi9hc3Rlcm9pZHNfc2hpcC5wbmciKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJjcmVhdGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNyZWF0ZSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0aGlzLnNoaXAgPSB0aGlzLnBoeXNpY3MuYWRkLmltYWdlKDQwMCwgMzAwLCAic2hpcCIpOwogICAgICB0aGlzLnNoaXAuc2V0Q29sbGlkZVdvcmxkQm91bmRzKHRydWUpOwogICAgICB0aGlzLmtleUEgPSB0aGlzLmlucHV0LmtleWJvYXJkLmFkZEtleShQaGFzZXIuSW5wdXQuS2V5Ym9hcmQuS2V5Q29kZXMuQSk7CiAgICAgIHRoaXMuc29ja2V0Lm9uKCJtb3ZlIiwgZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICBfdGhpczIuc2hpcC5yb3RhdGlvbiA9IGRhdGEucm90YXRpb247CiAgICAgICAgX3RoaXMyLnNoaXAueCA9IGRhdGEucG9zaXRpb24ueDsKICAgICAgICBfdGhpczIuc2hpcC55ID0gZGF0YS5wb3NpdGlvbi55OwogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJ1cGRhdGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHVwZGF0ZSh0aW1lLCBkZWx0YSkgewogICAgICBpZiAodGhpcy5rZXlBLmlzRG93bikgewogICAgICAgIHRoaXMuc2hpcC5yb3RhdGlvbiArPSB0aGlzLmFuZ3VsYXJWZWxvY2l0eSAqIGRlbHRhIC8gMTAwMDsKICAgICAgICB0aGlzLnNvY2tldC5lbWl0KCJtb3ZlIiwgewogICAgICAgICAgcm90YXRpb246IHRoaXMuc2hpcC5yb3RhdGlvbiwKICAgICAgICAgIHBvc2l0aW9uOiB7CiAgICAgICAgICAgIHg6IHRoaXMuc2hpcC54LAogICAgICAgICAgICB5OiB0aGlzLnNoaXAueQogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9CgogICAgICB0aGlzLnNoaXAuc2V0VmVsb2NpdHkodGhpcy52ZWxvY2l0eSAqIE1hdGguY29zKHRoaXMuc2hpcC5yb3RhdGlvbiksIHRoaXMudmVsb2NpdHkgKiBNYXRoLnNpbih0aGlzLnNoaXAucm90YXRpb24pKTsKICAgIH0KICB9XSk7CgogIHJldHVybiBNYWluU2NlbmU7Cn0oUGhhc2VyLlNjZW5lKTsKCmV4cG9ydCB7IE1haW5TY2VuZSBhcyBkZWZhdWx0IH07"},{"version":3,"sources":["/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/src/MainScene.js"],"names":["Phaser","io","MainScene","key","angularVelocity","Math","PI","velocity","socket","path","autoConnect","on","console","log","load","image","ship","physics","add","setCollideWorldBounds","keyA","input","keyboard","addKey","Input","Keyboard","KeyCodes","A","data","rotation","x","position","y","time","delta","isDown","emit","setVelocity","cos","sin","Scene"],"mappings":";;;;AAAA,OAAO,KAAKA,MAAZ,MAAwB,QAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;;IAEqBC,S;;;;;AAEjB,uBAAc;AAAA;;AAAA;;AACV,8BAAM;AAACC,MAAAA,GAAG,EAAE;AAAN,KAAN;AACA,UAAKC,eAAL,GAAuBC,IAAI,CAACC,EAAL,GAAQ,CAA/B;AACA,UAAKC,QAAL,GAAgB,GAAhB;AACA,UAAKC,MAAL,GAAcP,EAAE,CAAC,mBAAD,EAAsB;AAClCQ,MAAAA,IAAI,EAAE,yBAD4B;AAElCC,MAAAA,WAAW,EAAE;AAFqB,KAAtB,CAAhB;;AAIA,UAAKF,MAAL,CAAYG,EAAZ,CAAe,SAAf,EAA0B,YAAI;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH,KAFD;;AARU;AAWb;;;;WAED,mBAAS;AACL,WAAKC,IAAL,CAAUC,KAAV,CAAgB,MAAhB,EAAwB,sBAAxB;AACH;;;WAED,kBAAQ;AAAA;;AACJ,WAAKC,IAAL,GAAY,KAAKC,OAAL,CAAaC,GAAb,CAAiBH,KAAjB,CAAuB,GAAvB,EAA4B,GAA5B,EAAiC,MAAjC,CAAZ;AACA,WAAKC,IAAL,CAAUG,qBAAV,CAAgC,IAAhC;AACA,WAAKC,IAAL,GAAY,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,MAApB,CAA2BvB,MAAM,CAACwB,KAAP,CAAaC,QAAb,CAAsBC,QAAtB,CAA+BC,CAA1D,CAAZ;AACA,WAAKnB,MAAL,CAAYG,EAAZ,CAAe,MAAf,EAAuB,UAACiB,IAAD,EAAQ;AAC5B,QAAA,MAAI,CAACZ,IAAL,CAAUa,QAAV,GAAqBD,IAAI,CAACC,QAA1B;AACA,QAAA,MAAI,CAACb,IAAL,CAAUc,CAAV,GAAcF,IAAI,CAACG,QAAL,CAAcD,CAA5B;AACC,QAAA,MAAI,CAACd,IAAL,CAAUgB,CAAV,GAAcJ,IAAI,CAACG,QAAL,CAAcC,CAA5B;AACH,OAJD;AAKH;;;WAED,gBAAOC,IAAP,EAAaC,KAAb,EAAmB;AACf,UAAG,KAAKd,IAAL,CAAUe,MAAb,EAAqB;AACjB,aAAKnB,IAAL,CAAUa,QAAV,IAAsB,KAAKzB,eAAL,GAAqB8B,KAArB,GAA2B,IAAjD;AACA,aAAK1B,MAAL,CAAY4B,IAAZ,CAAiB,MAAjB,EAAyB;AACrBP,UAAAA,QAAQ,EAAE,KAAKb,IAAL,CAAUa,QADC;AAErBE,UAAAA,QAAQ,EAAE;AACND,YAAAA,CAAC,EAAE,KAAKd,IAAL,CAAUc,CADP;AAENE,YAAAA,CAAC,EAAE,KAAKhB,IAAL,CAAUgB;AAFP;AAFW,SAAzB;AAOH;;AACD,WAAKhB,IAAL,CAAUqB,WAAV,CAAsB,KAAK9B,QAAL,GAAcF,IAAI,CAACiC,GAAL,CAAS,KAAKtB,IAAL,CAAUa,QAAnB,CAApC,EAAkE,KAAKtB,QAAL,GAAcF,IAAI,CAACkC,GAAL,CAAS,KAAKvB,IAAL,CAAUa,QAAnB,CAAhF;AACH;;;;EA1CkC7B,MAAM,CAACwC,K;;SAAzBtC,S","sourcesContent":["import * as Phaser from \"phaser\";\nimport io from \"socket.io-client\";\n\nexport default class MainScene extends Phaser.Scene {\n\n    constructor() {\n        super({key: \"Main\"});\n        this.angularVelocity = Math.PI*3;\n        this.velocity = 200;\n        this.socket = io(\"https://papero.me\", {\n            path: \"/server/astro/socket.io\",\n            autoConnect: true\n        });\n        this.socket.on(\"connect\", ()=>{\n            console.log(\"connected\");\n        });\n    }\n\n    preload(){\n        this.load.image(\"ship\", \"./asteroids_ship.png\");\n    }\n\n    create(){\n        this.ship = this.physics.add.image(400, 300, \"ship\");\n        this.ship.setCollideWorldBounds(true);\n        this.keyA = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.A);\n        this.socket.on(\"move\", (data)=>{\n           this.ship.rotation = data.rotation;\n           this.ship.x = data.position.x;\n            this.ship.y = data.position.y;\n        });\n    }\n\n    update(time, delta){\n        if(this.keyA.isDown) {\n            this.ship.rotation += this.angularVelocity*delta/1000;\n            this.socket.emit(\"move\", {\n                rotation: this.ship.rotation,\n                position: {\n                    x: this.ship.x,\n                    y: this.ship.y\n                }\n            });\n        }\n        this.ship.setVelocity(this.velocity*Math.cos(this.ship.rotation), this.velocity*Math.sin(this.ship.rotation));\n    }\n}"]}]}
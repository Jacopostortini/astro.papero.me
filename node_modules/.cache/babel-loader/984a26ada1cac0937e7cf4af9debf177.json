{"remainingRequest":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/babel-loader/lib/index.js!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/eslint-loader/index.js??ref--13-0!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/LobbyScene.js","dependencies":[{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/LobbyScene.js","mtime":1616941203251},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/cache-loader/dist/cjs.js","mtime":1616495189815},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/babel-loader/lib/index.js","mtime":1616495189787},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/eslint-loader/index.js","mtime":1616495190059}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/LobbyScene.js"],"names":["Phaser","websocketEvents","defaultSettings","normalizers","sceneKeys","LobbyScene","socket","key","lobby","players","currentPlayer","settings","ships","availableBullets","interval","handler","clearInterval","setInterval","reloadingVelocity","x","y","angle","Math","atan","PI","color","bounce","Between","width","height","ship","physics","add","image","setVelocity","velocity","cos","sin","rotation","setCollideWorldBounds","setBounce","id","i","length","localId","sys","game","canvas","textures","addBase64","require","onresize","parent","document","getElementById","dim","min","offsetWidth","offsetHeight","scale","resize","world","setBounds","window","addEventListener","events","on","removeEventListener","LOBBY_MODIFIED","currentlyPlayingIds","forEach","player","push","previousPlayingIds","newShips","includes","setTexture","findPlayerById","createNewShip","keySpace","input","keyboard","addKey","Input","Keyboard","KeyCodes","SPACE","bullet","bulletVelocity","time","delta","Array","isArray","body","getAngle","isDown","angularVelocity","Scene"],"mappings":"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","sourcesContent":["import Phaser from \"phaser\";\nimport websocketEvents from \"../constants/websocketEvents\";\nimport {defaultSettings, normalizers, sceneKeys} from \"../constants/gameSettings\";\n\nexport default class LobbyScene extends Phaser.Scene {\n\n    constructor(socket) {\n        super({key: sceneKeys.lobby});\n        this.socket = socket;\n        this.lobby = {\n            players: [],\n            currentPlayer: null,\n            settings: defaultSettings\n        }\n\n        this.ships = {};\n        this.availableBullets = 3;\n        let interval;\n        let handler = () => {\n            this.availableBullets = this.availableBullets>=3 ? this.availableBullets : this.availableBullets+1;\n            clearInterval(interval)\n            interval = setInterval(handler, 2000/this.lobby.settings.reloadingVelocity);\n        }\n        interval = setInterval(handler, 2000/this.lobby.settings.reloadingVelocity);\n    }\n\n    getAngle(x, y){\n        let angle;\n        if(x!==0) {\n            angle = Math.atan(y / x);\n            angle = x < 0 ? angle + Math.PI : angle;\n        } else if(y>=0) angle = Math.PI / 2;\n        else if(y<0) angle = -Math.PI / 2;\n        return angle;\n    }\n\n    createNewShip(color, bounce){\n        let x = Phaser.Math.Between(0, this.width);\n        let y = Phaser.Math.Between(0, this.height);\n        let ship = this.physics.add.image(x, y, \"ship\"+color);\n        let angle = Phaser.Math.Between(Math.PI/4, Math.PI*3/4);\n        ship.setVelocity(\n            this.lobby.settings.velocity*normalizers.velocity*Math.cos(angle),\n            this.lobby.settings.velocity*normalizers.velocity*Math.sin(angle)\n        );\n        ship.rotation = angle;\n        ship.setCollideWorldBounds(true);\n        if(bounce) ship.setBounce(1, 1);\n        return ship;\n    }\n\n    findPlayerById(id){\n        for(let i = 0; i < this.lobby.players.length; i++){\n            if(this.lobby.players[i].localId === id) return this.lobby.players[i];\n        }\n        return null;\n    }\n\n    preload(){\n\n        //load images\n        this.width = this.sys.game.canvas.width;\n        this.height = this.sys.game.canvas.height;\n\n        this.textures.addBase64(\"ship0\", require(\"@/assets/ships/ship0.png\"));\n        this.textures.addBase64(\"ship1\", require(\"@/assets/ships/ship1.png\"));\n        this.textures.addBase64(\"ship2\", require(\"@/assets/ships/ship2.png\"));\n        this.textures.addBase64(\"ship3\", require(\"@/assets/ships/ship3.png\"));\n\n        this.textures.addBase64(\"bullet\", require(\"@/assets/bullet.png\"));\n\n        let onresize = () => {\n            let parent = document.getElementById(\"players-wrapper\");\n            let dim = Math.min(parent.offsetWidth, parent.offsetHeight);\n            this.game.scale.resize(dim, dim);\n            this.physics.world.setBounds(0, 0, dim, dim);\n        };\n        window.addEventListener(\"resize\", onresize);\n        this.events.on(\"destroy\", ()=>{\n            window.removeEventListener(\"resize\", onresize);\n        });\n\n    }\n\n    create(){\n        //Event lobby-modified\n        this.socket.on(websocketEvents.LOBBY_MODIFIED, game => {\n            let currentlyPlayingIds = [];\n            game.players.forEach(player => {currentlyPlayingIds.push(player.localId)});\n\n            let previousPlayingIds = [];\n            this.lobby.players.forEach(player => {previousPlayingIds.push(player.localId)});\n\n            this.lobby = {...game};\n\n            let newShips = {};\n            currentlyPlayingIds.forEach(id => {\n                if(previousPlayingIds.includes(id)){\n                    newShips[id] = this.ships[id];\n                    newShips[id].setVelocity(\n                        this.lobby.settings.velocity* normalizers.velocity * Math.cos(newShips[id].rotation),\n                        this.lobby.settings.velocity* normalizers.velocity * Math.sin(newShips[id].rotation)\n                    );\n                    newShips[id].setTexture(\"ship\"+this.findPlayerById(id).color);\n                } else {\n                    newShips[id] = this.createNewShip(this.findPlayerById(id).color, id!==game.currentPlayer);\n                }\n            });\n\n            this.ships = newShips;\n        });\n\n        //Setting up rotation and shooting\n        this.keySpace = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE);\n        this.input.keyboard.on(\"keyup-ENTER\", ()=>{\n            if(this.availableBullets>0){\n                let bullet = this.physics.add.image(\n                    this.ships[this.lobby.currentPlayer].x,\n                    this.ships[this.lobby.currentPlayer].y,\n                    \"bullet\"\n                );\n                bullet.rotation = this.ships[this.lobby.currentPlayer].rotation;\n                bullet.setVelocity(\n                    this.lobby.settings.bulletVelocity*normalizers.bulletVelocity*Math.cos(bullet.rotation),\n                    this.lobby.settings.bulletVelocity*normalizers.bulletVelocity*Math.sin(bullet.rotation)\n                );\n                this.availableBullets--;\n            }\n        });\n    }\n\n    update(time, delta){\n        if(Array.isArray(this.lobby.players) && this.lobby.players.length>0) {\n            this.lobby.players.forEach(player => {\n                if(player.localId !== this.lobby.currentPlayer) {\n                    let {x, y} = this.ships[player.localId].body.velocity;\n                    this.ships[player.localId].rotation = this.getAngle(x, y);\n                }\n            });\n        }\n        if(this.lobby.currentPlayer!==null && this.keySpace.isDown){\n            this.ships[this.lobby.currentPlayer].rotation += this.lobby.settings.angularVelocity* normalizers.angularVelocity *delta;\n            this.ships[this.lobby.currentPlayer].setVelocity(\n                this.lobby.settings.velocity* normalizers.velocity * Math.cos(this.ships[this.lobby.currentPlayer].rotation),\n                this.lobby.settings.velocity* normalizers.velocity * Math.sin(this.ships[this.lobby.currentPlayer].rotation)\n            );\n        }\n    }\n}"]}]}
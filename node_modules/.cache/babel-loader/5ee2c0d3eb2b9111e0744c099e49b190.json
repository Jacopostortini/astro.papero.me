{"remainingRequest":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/thread-loader/dist/cjs.js!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/babel-loader/lib/index.js!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/eslint-loader/index.js??ref--13-0!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/GameScene.js","dependencies":[{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/GameScene.js","mtime":1617380593282},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/cache-loader/dist/cjs.js","mtime":1616495189815},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/thread-loader/dist/cjs.js","mtime":1616495190967},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/babel-loader/lib/index.js","mtime":1616495189787},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/eslint-loader/index.js","mtime":1616495190059}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/GameScene.js"],"names":["Phaser","websocketEvents","gameDimensions","normalizers","sceneKeys","detectTouchScreen","GameScene","socket","game","key","settings","currentPlayer","maxVelocityLittle","velocity","accelerationLittle","respawnTime","frictionAir","players","forEach","player","localId","availableBullets","state","lastTimestamp","updateFps","touchScreen","reloadInterval","setInterval","Math","min","data","emit","RELOAD","reload","reloadingVelocity","load","image","createGroups","createShips","on","UPDATE_SHIP","updateShip","SHOOT","createBullet","CHANGE_STATE","updateState","rotationKey","input","keyboard","addKey","Input","Keyboard","KeyCodes","SPACE","accelerateLittleKey","ENTER","shoot","physics","world","bullet","gameObject","destroy","addPointer","pointer","x","width","rotating","accelerating","updateShipInterval","Number","parseInt","ship","angle","parseFloat","toFixed","y","time","now","delta","isDown","rotate","moveLittle","velocityFromAngle","velocityMagnitude","setVelocity","max","Object","values","autonomyTime","setAngularVelocity","ships","add","group","bullets","index","create","height","color","setAngle","setCollideWorldBounds","overlap","onBulletCollision","collider","currentShip","killedBy","bulletVelocity","deltaTime","Date","timestamp","position","shotBy","body","onWorldBounds","deltaTheta","angularVelocity","previousMag","cos","PI","sin","killAndHide","remove","clearInterval","setTexture","setTimeout","Scene"],"mappings":"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","sourcesContent":["import * as Phaser from \"phaser\";\nimport websocketEvents from \"../constants/websocketEvents\";\nimport {gameDimensions, normalizers, sceneKeys} from \"../constants/gameSettings\";\nimport {detectTouchScreen} from \"../constants/constants\";\n\n\nexport default class GameScene extends Phaser.Scene {\n\n    constructor(socket, game) {\n        super({key: sceneKeys.game});\n\n        this.socket = socket;\n        this.settings = game.settings;\n        this.currentPlayer = game.currentPlayer;\n        this.settings.maxVelocityLittle = game.settings.velocity+0.5;\n        this.settings.accelerationLittle = 0.5;\n        this.settings.respawnTime = 5000;\n        this.settings.frictionAir = 0.1;\n        this.players = {};\n        game.players.forEach(player => {\n            this.players[player.localId] = player;\n            this.players[player.localId].availableBullets = 3;\n            this.players[player.localId].state = 2;\n            this.players[player.localId].lastTimestamp = 0;\n        });\n\n        this.updateFps = 15;\n        this.touchScreen = detectTouchScreen();\n\n        this.reloadInterval = setInterval(() => {\n            const availableBullets = Math.min(3, this.players[this.currentPlayer].availableBullets + 1);\n            const data = {\n                localId: this.currentPlayer,\n                availableBullets\n            };\n            this.socket.emit(websocketEvents.RELOAD, data);\n            this.reload(data);\n        }, 1/(this.settings.reloadingVelocity * normalizers.reloadingVelocity));\n    }\n\n    preload(){\n\n        this.load.image(\"ship0\", \"./ships/ship0.png\");\n        this.load.image(\"ship1\", \"./ships/ship1.png\");\n        this.load.image(\"ship2\", \"./ships/ship2.png\");\n        this.load.image(\"ship3\", \"./ships/ship3.png\");\n        this.load.image(\"little0\", \"./little.png\");\n        this.load.image(\"little1\", \"./little.png\");\n        this.load.image(\"little2\", \"./little.png\");\n        this.load.image(\"little3\", \"./little.png\");\n        this.load.image(\"bullet\", \"./bullet.png\");\n\n    }\n\n    create(){\n        this.createGroups();\n        this.createShips();\n\n        this.socket.on(websocketEvents.UPDATE_SHIP, data => this.updateShip(data));\n        this.socket.on(websocketEvents.SHOOT, data => this.createBullet(data));\n        this.socket.on(websocketEvents.CHANGE_STATE, data => this.updateState(data));\n        this.socket.on(websocketEvents.RELOAD, data => this.reload(data));\n\n        this.rotationKey = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE);\n        this.accelerateLittleKey = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.ENTER);\n        this.input.keyboard.on(\"keyup-ENTER\", ()=>{\n            if(this.players[this.currentPlayer].state>=2) this.shoot();\n        });\n        this.physics.world.on(\"worldbounds\", (bullet)=>{bullet.gameObject.destroy()});\n\n        if(this.touchScreen){\n            this.input.addPointer(1);\n            this.input.on(\"pointerup\", (pointer) => {\n                if(pointer.x<this.width/2){\n                    this.rotating = false;\n                } else {\n                    this.accelerating = false;\n                }\n            });\n            this.input.on(\"pointerdown\", (pointer) => {\n                if(pointer.x<this.width/2){\n                    this.rotating = true;\n                } else {\n                    if(this.players[this.currentPlayer].state >= 2){\n                        if(this.availableBullets>0) this.shoot();\n                    } else {\n                        this.accelerating = true;\n                    }\n                }\n            });\n        }\n\n\n        this.updateShipInterval = setInterval(()=>{\n            this.socket.emit(websocketEvents.UPDATE_SHIP, [\n                this.currentPlayer,\n                Number.parseInt(this.players[this.currentPlayer].ship.angle),\n                [\n                    Number.parseFloat(this.players[this.currentPlayer].ship.x.toFixed(2)),\n                    Number.parseFloat(this.players[this.currentPlayer].ship.y.toFixed(2))\n                ],\n                this.time.now\n            ]);\n        }, 1000/this.updateFps);\n    }\n\n    update(time, delta){\n        if(this.rotationKey.isDown || this.rotating) this.rotate(delta);\n        if(this.accelerateLittleKey.isDown || this.accelerating) this.moveLittle(delta);\n        const {x, y} = this.physics.velocityFromAngle(\n            this.players[this.currentPlayer].ship.angle,\n            this.players[this.currentPlayer].ship.velocityMagnitude\n        );\n        this.players[this.currentPlayer].ship.setVelocity(x, y);\n        if (this.players[this.currentPlayer].state === 1) {\n            this.players[this.currentPlayer].ship.velocityMagnitude = Math.max(\n                0, this.players[this.currentPlayer].ship.velocityMagnitude - this.settings.frictionAir * delta\n            );\n        }\n        Object.values(this.players).forEach(player => {\n           if(player.localId!==this.currentPlayer){\n               player.ship.autonomyTime -= delta;\n               if(player.ship.autonomyTime<0) {\n                   player.ship.setVelocity(0);\n                   player.ship.setAngularVelocity(0);\n               }\n           }\n        });\n        //if(this.ships.countActive() <= 1) console.log(\"game over\") //TODO: SETUP END OF THE TURN\n    }\n\n\n\n\n    //=============================================================================\n    //Creating things\n    createGroups(){\n        this.ships = this.physics.add.group();\n        this.bullets = this.physics.add.group();\n    }\n\n    createShips(){\n        let index = 0;\n        Object.values(this.players).forEach(player => {\n            player.ship = this.ships.create(\n                (index<2 ? 0.05 : 0.95) * gameDimensions.width,\n                ( index%2 === 0 ? 0.05 : 0.95 ) * gameDimensions.height,\n                \"ship\"+player.color\n            )\n\n            player.ship.localId = player.localId;\n            player.ship.setAngle(-45  * ( index < 2 ? 1 : 3) * ( ( index % 2 ) * 2 - 1 ));\n            player.ship.velocityMagnitude = this.settings.velocity*normalizers.velocity;\n            player.ship.autonomyTime = 0;\n\n            if(player.localId===this.currentPlayer){\n                player.ship.setCollideWorldBounds(true);\n                this.physics.add.overlap(player.ship, this.bullets, (ship, bullet) => {\n                    this.onBulletCollision(ship, bullet);\n                });\n                this.physics.add.collider(player.ship, this.ships, (currentShip, ship)=>{\n                    if(this.players[this.currentPlayer].state === 1 && this.players[ship.localId].state >= 2){\n                        this.killedBy = ship.localId;\n                        const data = {\n                            localId: this.currentPlayer,\n                            state: 0\n                        };\n                        this.socket.emit(websocketEvents.CHANGE_STATE, data);\n                        this.updateState(data);\n                    }\n                });\n            }\n\n            index++;\n        });\n\n        this.physics.add.collider(this.ships, this.ships);\n    }\n\n    createBullet(data){\n        const {x, y} = this.physics.velocityFromAngle(data.angle, this.settings.bulletVelocity*normalizers.bulletVelocity);\n        const deltaTime = Date.now()-data.timestamp;\n        const bullet = this.bullets.create(data.position.x+deltaTime*x/1000, data.position.y+deltaTime*y/1000, \"bullet\");\n        bullet.angle = data.angle;\n        bullet.setVelocity(x, y);\n        bullet.shotBy = data.localId;\n        bullet.setCollideWorldBounds(true);\n        bullet.body.onWorldBounds = true;\n        this.players[data.localId].availableBullets--;\n    }\n\n\n\n\n\n\n    //=============================================================================\n    //Others do things via the websocket\n    updateShip(data){\n        const player = this.players[data[0]];\n        const deltaTime = (data[3]-player.lastTimestamp)/1000;\n        if(deltaTime<=0) return;\n\n        let deltaTheta = data[1] - Number.parseInt(player.ship.angle);\n\n        if(deltaTheta < -10) deltaTheta += 360;\n        else if(deltaTheta < 0) deltaTheta = 0;\n        const angularVelocity = deltaTheta / deltaTime;\n        player.ship.setAngularVelocity(angularVelocity);\n\n        player.ship.setVelocity( ( data[2][0]-player.ship.x ) / deltaTime, ( data[2][1]-player.ship.y ) / deltaTime );\n\n        player.lastTimestamp = data[3];\n        player.ship.autonomyTime = deltaTime*1000;\n    }\n\n\n\n    //=============================================================================\n    //Current players does things\n    rotate(delta){\n        this.players[this.currentPlayer].ship.angle += delta * this.settings.angularVelocity * normalizers.angularVelocity;\n    }\n\n    moveLittle(delta){\n        if(this.players[this.currentPlayer].state === 1){\n            const ship = this.players[this.currentPlayer].ship;\n            const previousMag = ship.velocityMagnitude;\n            if(previousMag < this.settings.maxVelocityLittle * normalizers.velocity){\n                this.players[this.currentPlayer].ship.velocityMagnitude += delta*this.settings.accelerationLittle;\n            } else {\n                this.players[this.currentPlayer].ship.velocityMagnitude = this.settings.maxVelocityLittle * normalizers.velocity;\n            }\n        }\n    }\n\n    shoot(){\n        if(this.players[this.currentPlayer].availableBullets>0){\n            const ship = this.players[this.currentPlayer].ship;\n            const angle = ship.angle;\n            const data = {\n                position: {\n                    x: ship.x + ship.width*Math.cos(angle * Math.PI / 180),\n                    y: ship.y + ship.width*Math.sin(angle * Math.PI / 180)\n                },\n                angle: angle,\n                localId: this.currentPlayer,\n                timestamp: Date.now()\n            };\n            this.socket.emit(websocketEvents.SHOOT, data);\n            this.createBullet(data);\n        }\n    }\n\n\n    updateState(data){\n        this.players[data.localId].state = data.state;\n        const ship = this.players[data.localId].ship;\n        switch (data.state) {\n            case 0:\n                this.ships.killAndHide(ship);\n                this.ships.remove(ship);\n                clearInterval(this.reloadInterval);\n                clearInterval(this.updateShipInterval);\n                break;\n            case 1:\n                ship.setTexture(\"little\" + this.players[data.localId].color);\n                if(data.localId === this.currentPlayer) {\n                    setTimeout(() => {\n                        if (this.players[data.localId].state === 1) {\n                            const data = {\n                                localId: this.currentPlayer,\n                                state: 2\n                            };\n                            this.updateState(data);\n                            this.socket.emit(websocketEvents.CHANGE_STATE, data);\n                        }\n                    }, this.settings.respawnTime);\n                }\n                break;\n            case 2:\n                ship.velocityMagnitude = this.settings.velocity * normalizers.velocity;\n                ship.setTexture(\"ship\" + this.players[data.localId].color);\n                break;\n        }\n    }\n\n    onBulletCollision(ship, bullet){\n        bullet.destroy();\n        const state = this.players[ship.localId].state-1;\n        if(state === 0) this.killedBy = bullet.shotBy;\n        const data = {\n            localId: ship.localId,\n            state\n        };\n        this.socket.emit(websocketEvents.CHANGE_STATE, data);\n        this.updateState(data);\n    }\n\n\n    reload(data){\n        this.players[data.localId].availableBullets = data.availableBullets;\n    }\n}"]}]}
{"remainingRequest":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/thread-loader/dist/cjs.js!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/babel-loader/lib/index.js!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/eslint-loader/index.js??ref--13-0!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/GameScene.js","dependencies":[{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/GameScene.js","mtime":1617175916749},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/cache-loader/dist/cjs.js","mtime":1616495189815},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/thread-loader/dist/cjs.js","mtime":1616495190967},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/babel-loader/lib/index.js","mtime":1616495189787},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/eslint-loader/index.js","mtime":1616495190059}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvbWVkaWEvamFjb3BvL1ZvbHVtZURhdGkvRG9jdW1lbnRpL3BhcGVyby50ay9jb3Ntb3MucGFwZXJvLm1lL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL21lZGlhL2phY29wby9Wb2x1bWVEYXRpL0RvY3VtZW50aS9wYXBlcm8udGsvY29zbW9zLnBhcGVyby5tZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgX2luaGVyaXRzIGZyb20gIi9tZWRpYS9qYWNvcG8vVm9sdW1lRGF0aS9Eb2N1bWVudGkvcGFwZXJvLnRrL2Nvc21vcy5wYXBlcm8ubWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICIvbWVkaWEvamFjb3BvL1ZvbHVtZURhdGkvRG9jdW1lbnRpL3BhcGVyby50ay9jb3Ntb3MucGFwZXJvLm1lL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVTdXBlciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudmFsdWVzLmpzIjsKaW1wb3J0ICogYXMgUGhhc2VyIGZyb20gInBoYXNlciI7CmltcG9ydCB3ZWJzb2NrZXRFdmVudHMgZnJvbSAiLi4vY29uc3RhbnRzL3dlYnNvY2tldEV2ZW50cyI7CmltcG9ydCB7IGdhbWVEaW1lbnNpb25zLCBub3JtYWxpemVycywgc2NlbmVLZXlzIH0gZnJvbSAiLi4vY29uc3RhbnRzL2dhbWVTZXR0aW5ncyI7Cgp2YXIgR2FtZVNjZW5lID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfUGhhc2VyJFNjZW5lKSB7CiAgX2luaGVyaXRzKEdhbWVTY2VuZSwgX1BoYXNlciRTY2VuZSk7CgogIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoR2FtZVNjZW5lKTsKCiAgZnVuY3Rpb24gR2FtZVNjZW5lKHNvY2tldCwgZ2FtZSkgewogICAgdmFyIF90aGlzOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBHYW1lU2NlbmUpOwoKICAgIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgewogICAgICBrZXk6IHNjZW5lS2V5cy5nYW1lCiAgICB9KTsKICAgIF90aGlzLnNvY2tldCA9IHNvY2tldDsKICAgIF90aGlzLnNldHRpbmdzID0gZ2FtZS5zZXR0aW5nczsKICAgIF90aGlzLmN1cnJlbnRQbGF5ZXIgPSBnYW1lLmN1cnJlbnRQbGF5ZXI7CiAgICBfdGhpcy5zZXR0aW5ncy5tYXhWZWxvY2l0eUxpdHRsZSA9IGdhbWUuc2V0dGluZ3MudmVsb2NpdHkgKyAwLjU7CiAgICBfdGhpcy5zZXR0aW5ncy5hY2NlbGVyYXRpb25MaXR0bGUgPSAwLjU7CiAgICBfdGhpcy5zZXR0aW5ncy5yZXNwYXduVGltZSA9IDUwMDA7CiAgICBfdGhpcy5zZXR0aW5ncy5mcmljdGlvbkFpciA9IDAuMTsKICAgIF90aGlzLnBsYXllcnMgPSB7fTsKICAgIGdhbWUucGxheWVycy5mb3JFYWNoKGZ1bmN0aW9uIChwbGF5ZXIpIHsKICAgICAgX3RoaXMucGxheWVyc1twbGF5ZXIubG9jYWxJZF0gPSBwbGF5ZXI7CiAgICAgIF90aGlzLnBsYXllcnNbcGxheWVyLmxvY2FsSWRdLmF2YWlsYWJsZUJ1bGxldHMgPSAzOwogICAgICBfdGhpcy5wbGF5ZXJzW3BsYXllci5sb2NhbElkXS5zdGF0ZSA9IDI7CiAgICB9KTsKICAgIC8qICAgICAgICB0aGlzLnNldHRpbmdzID0gZGVmYXVsdFNldHRpbmdzOwogICAgICAgICAgICB0aGlzLnNldHRpbmdzLm1heFZlbG9jaXR5TGl0dGxlID0gMi41OwogICAgICAgICAgICB0aGlzLnNldHRpbmdzLmFjY2VsZXJhdGlvbkxpdHRsZSA9IDAuNTsKICAgICAgICAgICAgdGhpcy5zZXR0aW5ncy5mcmljdGlvbkFpciA9IDAuMTsKICAgICAgICAgICAgdGhpcy5jdXJyZW50UGxheWVyID0gMDsKICAgICAgICAgICAgdGhpcy5wbGF5ZXJzID0geyAvL1NUQVRFOiAwPWRlYWQgMT1saXR0bGUgMj1zaGlwIDM9c2hpZWxkKD8pCiAgICAgICAgICAgICAgICAnMCc6IHsKICAgICAgICAgICAgICAgICAgICBsb2NhbElkOiAwLAogICAgICAgICAgICAgICAgICAgIGNvbG9yOiAwLAogICAgICAgICAgICAgICAgICAgIGF2YWlsYWJsZUJ1bGxldHM6IDMsCiAgICAgICAgICAgICAgICAgICAgc3RhdGU6IDIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAnMSc6IHsKICAgICAgICAgICAgICAgICAgICBsb2NhbElkOiAxLAogICAgICAgICAgICAgICAgICAgIGNvbG9yOiAxLAogICAgICAgICAgICAgICAgICAgIGF2YWlsYWJsZUJ1bGxldHM6IDMsCiAgICAgICAgICAgICAgICAgICAgc3RhdGU6IDIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAnMic6IHsKICAgICAgICAgICAgICAgICAgICBsb2NhbElkOiAyLAogICAgICAgICAgICAgICAgICAgIGNvbG9yOiAyLAogICAgICAgICAgICAgICAgICAgIGF2YWlsYWJsZUJ1bGxldHM6IDMsCiAgICAgICAgICAgICAgICAgICAgc3RhdGU6IDIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfTsqLwoKICAgIHNldEludGVydmFsKGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIGF2YWlsYWJsZUJ1bGxldHMgPSBNYXRoLm1pbigzLCBfdGhpcy5wbGF5ZXJzW190aGlzLmN1cnJlbnRQbGF5ZXJdLmF2YWlsYWJsZUJ1bGxldHMgKyAxKTsKICAgICAgdmFyIGRhdGEgPSB7CiAgICAgICAgbG9jYWxJZDogX3RoaXMuY3VycmVudFBsYXllciwKICAgICAgICBhdmFpbGFibGVCdWxsZXRzOiBhdmFpbGFibGVCdWxsZXRzCiAgICAgIH07CgogICAgICBfdGhpcy5zb2NrZXQuZW1pdCh3ZWJzb2NrZXRFdmVudHMuUkVMT0FELCBkYXRhKTsKCiAgICAgIF90aGlzLnJlbG9hZChkYXRhKTsKICAgIH0sIDEgLyAoX3RoaXMuc2V0dGluZ3MucmVsb2FkaW5nVmVsb2NpdHkgKiBub3JtYWxpemVycy5yZWxvYWRpbmdWZWxvY2l0eSkpOwogICAgcmV0dXJuIF90aGlzOwogIH0KCiAgX2NyZWF0ZUNsYXNzKEdhbWVTY2VuZSwgW3sKICAgIGtleTogInByZWxvYWQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHByZWxvYWQoKSB7CiAgICAgIHRoaXMubG9hZC5pbWFnZSgic2hpcDAiLCAiLi9zaGlwcy9zaGlwMC5wbmciKTsKICAgICAgdGhpcy5sb2FkLmltYWdlKCJzaGlwMSIsICIuL3NoaXBzL3NoaXAxLnBuZyIpOwogICAgICB0aGlzLmxvYWQuaW1hZ2UoInNoaXAyIiwgIi4vc2hpcHMvc2hpcDIucG5nIik7CiAgICAgIHRoaXMubG9hZC5pbWFnZSgic2hpcDMiLCAiLi9zaGlwcy9zaGlwMy5wbmciKTsKICAgICAgdGhpcy5sb2FkLmltYWdlKCJsaXR0bGUwIiwgIi4vbGl0dGxlLnBuZyIpOwogICAgICB0aGlzLmxvYWQuaW1hZ2UoImxpdHRsZTEiLCAiLi9saXR0bGUucG5nIik7CiAgICAgIHRoaXMubG9hZC5pbWFnZSgibGl0dGxlMiIsICIuL2xpdHRsZS5wbmciKTsKICAgICAgdGhpcy5sb2FkLmltYWdlKCJsaXR0bGUzIiwgIi4vbGl0dGxlLnBuZyIpOwogICAgICB0aGlzLmxvYWQuaW1hZ2UoImJ1bGxldCIsICIuL2J1bGxldC5wbmciKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJjcmVhdGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNyZWF0ZSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0aGlzLmNyZWF0ZUdyb3VwcygpOwogICAgICB0aGlzLmNyZWF0ZVNoaXBzKCk7CiAgICAgIHRoaXMuc29ja2V0Lm9uKHdlYnNvY2tldEV2ZW50cy5ST1RBVEVfU0hJUCwgZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICByZXR1cm4gX3RoaXMyLm9uU2hpcFJvdGF0ZWQoZGF0YSk7CiAgICAgIH0pOyAvL3RoaXMuc29ja2V0Lm9uKHdlYnNvY2tldEV2ZW50cy5NT1ZFX0xJVFRMRSwgZGF0YSA9PiB0aGlzLm9uTGl0dGxlTW92ZWQoZGF0YSkpOwoKICAgICAgdGhpcy5zb2NrZXQub24od2Vic29ja2V0RXZlbnRzLlNIT09ULCBmdW5jdGlvbiAoZGF0YSkgewogICAgICAgIHJldHVybiBfdGhpczIuY3JlYXRlQnVsbGV0KGRhdGEpOwogICAgICB9KTsKICAgICAgdGhpcy5zb2NrZXQub24od2Vic29ja2V0RXZlbnRzLkNIQU5HRV9TVEFURSwgZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICByZXR1cm4gX3RoaXMyLnVwZGF0ZVN0YXRlKGRhdGEpOwogICAgICB9KTsKICAgICAgdGhpcy5zb2NrZXQub24od2Vic29ja2V0RXZlbnRzLlJFTE9BRCwgZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICByZXR1cm4gX3RoaXMyLnJlbG9hZChkYXRhKTsKICAgICAgfSk7CiAgICAgIHRoaXMucm90YXRpb25LZXkgPSB0aGlzLmlucHV0LmtleWJvYXJkLmFkZEtleShQaGFzZXIuSW5wdXQuS2V5Ym9hcmQuS2V5Q29kZXMuU1BBQ0UpOwogICAgICB0aGlzLmFjY2VsZXJhdGVMaXR0bGVLZXkgPSB0aGlzLmlucHV0LmtleWJvYXJkLmFkZEtleShQaGFzZXIuSW5wdXQuS2V5Ym9hcmQuS2V5Q29kZXMuRU5URVIpOwogICAgICB0aGlzLmlucHV0LmtleWJvYXJkLm9uKCJrZXl1cC1FTlRFUiIsIGZ1bmN0aW9uICgpIHsKICAgICAgICBpZiAoX3RoaXMyLnBsYXllcnNbX3RoaXMyLmN1cnJlbnRQbGF5ZXJdLnN0YXRlID49IDIpIF90aGlzMi5zaG9vdCgpOwogICAgICB9KTsKICAgICAgdGhpcy5waHlzaWNzLndvcmxkLm9uKCJ3b3JsZGJvdW5kcyIsIGZ1bmN0aW9uIChidWxsZXQpIHsKICAgICAgICBidWxsZXQuZ2FtZU9iamVjdC5kZXN0cm95KCk7CiAgICAgIH0pOwogICAgICBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMyLnNvY2tldC5lbWl0KHdlYnNvY2tldEV2ZW50cy5ST1RBVEVfU0hJUCwgewogICAgICAgICAgbG9jYWxJZDogX3RoaXMyLmN1cnJlbnRQbGF5ZXIsCiAgICAgICAgICByb3RhdGlvbjogX3RoaXMyLnBsYXllcnNbX3RoaXMyLmN1cnJlbnRQbGF5ZXJdLnNoaXAucm90YXRpb24sCiAgICAgICAgICBwb3NpdGlvbjogewogICAgICAgICAgICB4OiBfdGhpczIucGxheWVyc1tfdGhpczIuY3VycmVudFBsYXllcl0uc2hpcC54LAogICAgICAgICAgICB5OiBfdGhpczIucGxheWVyc1tfdGhpczIuY3VycmVudFBsYXllcl0uc2hpcC55CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0sIDEwMDAgLyAyMCk7CiAgICB9CiAgfSwgewogICAga2V5OiAidXBkYXRlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiB1cGRhdGUodGltZSwgZGVsdGEpIHsKICAgICAgaWYgKHRoaXMucm90YXRpb25LZXkuaXNEb3duKSB0aGlzLnJvdGF0ZShkZWx0YSk7CiAgICAgIGlmICh0aGlzLmFjY2VsZXJhdGVMaXR0bGVLZXkuaXNEb3duKSB0aGlzLm1vdmVMaXR0bGUoZGVsdGEpOwoKICAgICAgdmFyIF90aGlzJHBoeXNpY3MkdmVsb2NpdCA9IHRoaXMucGh5c2ljcy52ZWxvY2l0eUZyb21Sb3RhdGlvbih0aGlzLnBsYXllcnNbdGhpcy5jdXJyZW50UGxheWVyXS5zaGlwLnJvdGF0aW9uLCB0aGlzLnBsYXllcnNbdGhpcy5jdXJyZW50UGxheWVyXS5zaGlwLnZlbG9jaXR5TWFnbml0dWRlKSwKICAgICAgICAgIHggPSBfdGhpcyRwaHlzaWNzJHZlbG9jaXQueCwKICAgICAgICAgIHkgPSBfdGhpcyRwaHlzaWNzJHZlbG9jaXQueTsKCiAgICAgIHRoaXMucGxheWVyc1t0aGlzLmN1cnJlbnRQbGF5ZXJdLnNoaXAuc2V0VmVsb2NpdHkoeCwgeSk7CgogICAgICBpZiAodGhpcy5wbGF5ZXJzW3RoaXMuY3VycmVudFBsYXllcl0uc3RhdGUgPT09IDEpIHsKICAgICAgICB0aGlzLnBsYXllcnNbdGhpcy5jdXJyZW50UGxheWVyXS5zaGlwLnZlbG9jaXR5TWFnbml0dWRlID0gTWF0aC5tYXgoMCwgdGhpcy5wbGF5ZXJzW3RoaXMuY3VycmVudFBsYXllcl0uc2hpcC52ZWxvY2l0eU1hZ25pdHVkZSAtIHRoaXMuc2V0dGluZ3MuZnJpY3Rpb25BaXIgKiBkZWx0YSk7CiAgICAgIH0KICAgICAgLypPYmplY3QudmFsdWVzKHRoaXMucGxheWVycykuZm9yRWFjaChwbGF5ZXIgPT4gewogICAgICAgICAgY29uc3Qge3gsIHl9ID0gZ2V0VmVsb2NpdHkocGxheWVyLnNoaXAucm90YXRpb24sIHBsYXllci5zaGlwLnZlbG9jaXR5TWFnbml0dWRlKTsKICAgICAgICAgIHBsYXllci5zaGlwLnNldFZlbG9jaXR5KHgsIHkpOwogICAgICAgICAgaWYocGxheWVyLnN0YXRlID09PSAxKXsKICAgICAgICAgICAgICBwbGF5ZXIuc2hpcC52ZWxvY2l0eU1hZ25pdHVkZSA9IE1hdGgubWF4KAogICAgICAgICAgICAgICAgICAwLCBwbGF5ZXIuc2hpcC52ZWxvY2l0eU1hZ25pdHVkZS10aGlzLnNldHRpbmdzLmZyaWN0aW9uQWlyKmRlbHRhCiAgICAgICAgICAgICAgKTsKICAgICAgICAgIH0KICAgICAgfSk7Ki8KICAgICAgLy9pZih0aGlzLnNoaXBzLmNvdW50QWN0aXZlKCkgPD0gMSkgY29uc29sZS5sb2coImdhbWUgb3ZlciIpIC8vVE9ETzogU0VUVVAgRU5EIE9GIFRIRSBUVVJOCgogICAgfSAvLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiAgICAvL0NyZWF0aW5nIHRoaW5ncwoKICB9LCB7CiAgICBrZXk6ICJjcmVhdGVHcm91cHMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNyZWF0ZUdyb3VwcygpIHsKICAgICAgdGhpcy5zaGlwcyA9IHRoaXMucGh5c2ljcy5hZGQuZ3JvdXAoKTsKICAgICAgdGhpcy5idWxsZXRzID0gdGhpcy5waHlzaWNzLmFkZC5ncm91cCgpOwogICAgfQogIH0sIHsKICAgIGtleTogImNyZWF0ZVNoaXBzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjcmVhdGVTaGlwcygpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB2YXIgaW5kZXggPSAwOwogICAgICBPYmplY3QudmFsdWVzKHRoaXMucGxheWVycykuZm9yRWFjaChmdW5jdGlvbiAocGxheWVyKSB7CiAgICAgICAgcGxheWVyLnNoaXAgPSBfdGhpczMuc2hpcHMuY3JlYXRlKChpbmRleCA8IDIgPyAwLjA1IDogMC45NSkgKiBnYW1lRGltZW5zaW9ucy53aWR0aCwgKGluZGV4ICUgMiA9PT0gMCA/IDAuMDUgOiAwLjk1KSAqIGdhbWVEaW1lbnNpb25zLmhlaWdodCwgInNoaXAiICsgcGxheWVyLmNvbG9yKTsKICAgICAgICBwbGF5ZXIuc2hpcC5sb2NhbElkID0gcGxheWVyLmxvY2FsSWQ7CiAgICAgICAgcGxheWVyLnNoaXAuc2V0Um90YXRpb24oLU1hdGguUEkgLyA0ICogKGluZGV4IDwgMiA/IDEgOiAzKSAqIChpbmRleCAlIDIgKiAyIC0gMSkpOwogICAgICAgIHBsYXllci5zaGlwLnNldENvbGxpZGVXb3JsZEJvdW5kcyh0cnVlKTsKICAgICAgICBwbGF5ZXIuc2hpcC52ZWxvY2l0eU1hZ25pdHVkZSA9IF90aGlzMy5zZXR0aW5ncy52ZWxvY2l0eSAqIG5vcm1hbGl6ZXJzLnZlbG9jaXR5OwoKICAgICAgICBpZiAocGxheWVyLmxvY2FsSWQgPT09IF90aGlzMy5jdXJyZW50UGxheWVyKSB7CiAgICAgICAgICBfdGhpczMucGh5c2ljcy5hZGQub3ZlcmxhcChwbGF5ZXIuc2hpcCwgX3RoaXMzLmJ1bGxldHMsIGZ1bmN0aW9uIChzaGlwLCBidWxsZXQpIHsKICAgICAgICAgICAgX3RoaXMzLm9uQnVsbGV0Q29sbGlzaW9uKHNoaXAsIGJ1bGxldCk7CiAgICAgICAgICB9KTsKICAgICAgICB9CgogICAgICAgIGluZGV4Kys7CiAgICAgIH0pOwogICAgICB0aGlzLnBoeXNpY3MuYWRkLmNvbGxpZGVyKHRoaXMuc2hpcHMsIHRoaXMuc2hpcHMpOwogICAgfQogIH0sIHsKICAgIGtleTogImNyZWF0ZUJ1bGxldCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY3JlYXRlQnVsbGV0KGRhdGEpIHsKICAgICAgdmFyIF90aGlzJHBoeXNpY3MkdmVsb2NpdDIgPSB0aGlzLnBoeXNpY3MudmVsb2NpdHlGcm9tUm90YXRpb24oZGF0YS5yb3RhdGlvbiwgdGhpcy5zZXR0aW5ncy5idWxsZXRWZWxvY2l0eSAqIG5vcm1hbGl6ZXJzLmJ1bGxldFZlbG9jaXR5KSwKICAgICAgICAgIHggPSBfdGhpcyRwaHlzaWNzJHZlbG9jaXQyLngsCiAgICAgICAgICB5ID0gX3RoaXMkcGh5c2ljcyR2ZWxvY2l0Mi55OwoKICAgICAgdmFyIGRlbHRhVGltZSA9IERhdGUubm93KCkgLSBkYXRhLnRpbWVzdGFtcDsKICAgICAgY29uc29sZS5sb2coZGVsdGFUaW1lLCB7CiAgICAgICAgeDogeCwKICAgICAgICB5OiB5CiAgICAgIH0pOwogICAgICB2YXIgYnVsbGV0ID0gdGhpcy5idWxsZXRzLmNyZWF0ZShkYXRhLnBvc2l0aW9uLnggKyBkZWx0YVRpbWUgKiB4LCBkYXRhLnBvc2l0aW9uLnkgKyBkZWx0YVRpbWUgKiB5LCAiYnVsbGV0Iik7CiAgICAgIGJ1bGxldC5yb3RhdGlvbiA9IGRhdGEucm90YXRpb247CiAgICAgIGJ1bGxldC5zZXRWZWxvY2l0eSh4LCB5KTsKICAgICAgYnVsbGV0LnNob3RCeSA9IGRhdGEubG9jYWxJZDsKICAgICAgYnVsbGV0LnNldENvbGxpZGVXb3JsZEJvdW5kcyh0cnVlKTsKICAgICAgYnVsbGV0LmJvZHkub25Xb3JsZEJvdW5kcyA9IHRydWU7CiAgICAgIHRoaXMucGxheWVyc1tkYXRhLmxvY2FsSWRdLmF2YWlsYWJsZUJ1bGxldHMtLTsKICAgIH0gLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQogICAgLy9PdGhlcnMgZG8gdGhpbmdzIHZpYSB0aGUgd2Vic29ja2V0CgogIH0sIHsKICAgIGtleTogIm9uU2hpcFJvdGF0ZWQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIG9uU2hpcFJvdGF0ZWQoZGF0YSkgewogICAgICB0aGlzLnBsYXllcnNbZGF0YS5sb2NhbElkXS5zaGlwLnNldFBvc2l0aW9uKGRhdGEucG9zaXRpb24ueCwgZGF0YS5wb3NpdGlvbi55KTsKICAgICAgdGhpcy5wbGF5ZXJzW2RhdGEubG9jYWxJZF0uc2hpcC5zZXRSb3RhdGlvbihkYXRhLnJvdGF0aW9uKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJvbkxpdHRsZU1vdmVkIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBvbkxpdHRsZU1vdmVkKGRhdGEpIHsKICAgICAgdGhpcy5wbGF5ZXJzW2RhdGEubG9jYWxJZF0uc2hpcC5zZXRQb3NpdGlvbihkYXRhLnBvc2l0aW9uLngsIGRhdGEucG9zaXRpb24ueSk7CiAgICAgIHRoaXMucGxheWVyc1tkYXRhLmxvY2FsSWRdLnNoaXAudmVsb2NpdHlNYWduaXR1ZGUgPSBkYXRhLnZlbG9jaXR5TWFnbml0dWRlOwogICAgfSAvLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiAgICAvL0N1cnJlbnQgcGxheWVycyBkb2VzIHRoaW5ncwoKICB9LCB7CiAgICBrZXk6ICJyb3RhdGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHJvdGF0ZShkZWx0YSkgewogICAgICB0aGlzLnBsYXllcnNbdGhpcy5jdXJyZW50UGxheWVyXS5zaGlwLnJvdGF0aW9uICs9IGRlbHRhICogdGhpcy5zZXR0aW5ncy5hbmd1bGFyVmVsb2NpdHkgKiBub3JtYWxpemVycy5hbmd1bGFyVmVsb2NpdHk7CiAgICAgIC8qdGhpcy5zb2NrZXQuZW1pdCh3ZWJzb2NrZXRFdmVudHMuUk9UQVRFX1NISVAsIHsKICAgICAgICAgIGxvY2FsSWQ6IHRoaXMuY3VycmVudFBsYXllciwKICAgICAgICAgIHJvdGF0aW9uOiB0aGlzLnBsYXllcnNbdGhpcy5jdXJyZW50UGxheWVyXS5zaGlwLnJvdGF0aW9uLAogICAgICAgICAgcG9zaXRpb246IHsKICAgICAgICAgICAgICB4OiB0aGlzLnBsYXllcnNbdGhpcy5jdXJyZW50UGxheWVyXS5zaGlwLngsCiAgICAgICAgICAgICAgeTogdGhpcy5wbGF5ZXJzW3RoaXMuY3VycmVudFBsYXllcl0uc2hpcC55CiAgICAgICAgICB9CiAgICAgIH0pOyovCiAgICB9CiAgfSwgewogICAga2V5OiAibW92ZUxpdHRsZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gbW92ZUxpdHRsZShkZWx0YSkgewogICAgICBpZiAodGhpcy5wbGF5ZXJzW3RoaXMuY3VycmVudFBsYXllcl0uc3RhdGUgPT09IDEpIHsKICAgICAgICB2YXIgc2hpcCA9IHRoaXMucGxheWVyc1t0aGlzLmN1cnJlbnRQbGF5ZXJdLnNoaXA7CiAgICAgICAgdmFyIHByZXZpb3VzTWFnID0gc2hpcC52ZWxvY2l0eU1hZ25pdHVkZTsKCiAgICAgICAgaWYgKHByZXZpb3VzTWFnIDwgdGhpcy5zZXR0aW5ncy5tYXhWZWxvY2l0eUxpdHRsZSAqIG5vcm1hbGl6ZXJzLnZlbG9jaXR5KSB7CiAgICAgICAgICB0aGlzLnBsYXllcnNbdGhpcy5jdXJyZW50UGxheWVyXS5zaGlwLnZlbG9jaXR5TWFnbml0dWRlICs9IGRlbHRhICogdGhpcy5zZXR0aW5ncy5hY2NlbGVyYXRpb25MaXR0bGU7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMucGxheWVyc1t0aGlzLmN1cnJlbnRQbGF5ZXJdLnNoaXAudmVsb2NpdHlNYWduaXR1ZGUgPSB0aGlzLnNldHRpbmdzLm1heFZlbG9jaXR5TGl0dGxlICogbm9ybWFsaXplcnMudmVsb2NpdHk7CiAgICAgICAgfQoKICAgICAgICB0aGlzLnNvY2tldC5lbWl0KHdlYnNvY2tldEV2ZW50cy5NT1ZFX0xJVFRMRSwgewogICAgICAgICAgbG9jYWxJZDogdGhpcy5jdXJyZW50UGxheWVyLAogICAgICAgICAgcG9zaXRpb246IHsKICAgICAgICAgICAgeDogc2hpcC54LAogICAgICAgICAgICB5OiBzaGlwLnkKICAgICAgICAgIH0sCiAgICAgICAgICB2ZWxvY2l0eU1hZ25pdHVkZTogdGhpcy5wbGF5ZXJzW3RoaXMuY3VycmVudFBsYXllcl0uc2hpcC52ZWxvY2l0eU1hZ25pdHVkZQogICAgICAgIH0pOwogICAgICB9CiAgICB9CiAgfSwgewogICAga2V5OiAic2hvb3QiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHNob290KCkgewogICAgICBpZiAodGhpcy5wbGF5ZXJzW3RoaXMuY3VycmVudFBsYXllcl0uYXZhaWxhYmxlQnVsbGV0cyA+IDApIHsKICAgICAgICB2YXIgc2hpcCA9IHRoaXMucGxheWVyc1t0aGlzLmN1cnJlbnRQbGF5ZXJdLnNoaXA7CiAgICAgICAgdmFyIGFuZ2xlID0gc2hpcC5yb3RhdGlvbjsKICAgICAgICB2YXIgZGF0YSA9IHsKICAgICAgICAgIHBvc2l0aW9uOiB7CiAgICAgICAgICAgIHg6IHNoaXAueCArIHNoaXAud2lkdGggKiBNYXRoLmNvcyhhbmdsZSksCiAgICAgICAgICAgIHk6IHNoaXAueSArIHNoaXAud2lkdGggKiBNYXRoLnNpbihhbmdsZSkKICAgICAgICAgIH0sCiAgICAgICAgICByb3RhdGlvbjogYW5nbGUsCiAgICAgICAgICBsb2NhbElkOiB0aGlzLmN1cnJlbnRQbGF5ZXIsCiAgICAgICAgICB0aW1lc3RhbXA6IERhdGUubm93KCkKICAgICAgICB9OwogICAgICAgIHRoaXMuc29ja2V0LmVtaXQod2Vic29ja2V0RXZlbnRzLlNIT09ULCBkYXRhKTsKICAgICAgICB0aGlzLmNyZWF0ZUJ1bGxldChkYXRhKTsKICAgICAgfQogICAgfQogIH0sIHsKICAgIGtleTogInVwZGF0ZVN0YXRlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiB1cGRhdGVTdGF0ZShkYXRhKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgICAgdGhpcy5wbGF5ZXJzW2RhdGEubG9jYWxJZF0uc3RhdGUgPSBkYXRhLnN0YXRlOwogICAgICB2YXIgc2hpcCA9IHRoaXMucGxheWVyc1tkYXRhLmxvY2FsSWRdLnNoaXA7CgogICAgICBzd2l0Y2ggKGRhdGEuc3RhdGUpIHsKICAgICAgICBjYXNlIDA6CiAgICAgICAgICB0aGlzLnNoaXBzLmtpbGxBbmRIaWRlKHNoaXApOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgMToKICAgICAgICAgIHNoaXAuc2V0VGV4dHVyZSgibGl0dGxlIiArIHRoaXMucGxheWVyc1tkYXRhLmxvY2FsSWRdLmNvbG9yKTsKCiAgICAgICAgICBpZiAoZGF0YS5sb2NhbElkID09PSB0aGlzLmN1cnJlbnRQbGF5ZXIpIHsKICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgaWYgKF90aGlzNC5wbGF5ZXJzW2RhdGEubG9jYWxJZF0uc3RhdGUgPT09IDEpIHsKICAgICAgICAgICAgICAgIF90aGlzNC51cGRhdGVTdGF0ZSh7CiAgICAgICAgICAgICAgICAgIGxvY2FsSWQ6IF90aGlzNC5jdXJyZW50UGxheWVyLAogICAgICAgICAgICAgICAgICBzdGF0ZTogMgogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgX3RoaXM0LnNvY2tldC5lbWl0KHdlYnNvY2tldEV2ZW50cy5DSEFOR0VfU1RBVEUsIHsKICAgICAgICAgICAgICAgICAgbG9jYWxJZDogX3RoaXM0LmN1cnJlbnRQbGF5ZXIsCiAgICAgICAgICAgICAgICAgIHN0YXRlOiAyCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sIHRoaXMuc2V0dGluZ3MucmVzcGF3blRpbWUpOwogICAgICAgICAgfQoKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlIDI6CiAgICAgICAgICBzaGlwLnZlbG9jaXR5TWFnbml0dWRlID0gdGhpcy5zZXR0aW5ncy52ZWxvY2l0eSAqIG5vcm1hbGl6ZXJzLnZlbG9jaXR5OwogICAgICAgICAgc2hpcC5zZXRUZXh0dXJlKCJzaGlwIiArIHRoaXMucGxheWVyc1tkYXRhLmxvY2FsSWRdLmNvbG9yKTsKICAgICAgICAgIGJyZWFrOwogICAgICB9CiAgICB9CiAgfSwgewogICAga2V5OiAib25CdWxsZXRDb2xsaXNpb24iLAogICAgdmFsdWU6IGZ1bmN0aW9uIG9uQnVsbGV0Q29sbGlzaW9uKHNoaXAsIGJ1bGxldCkgewogICAgICBidWxsZXQuZGVzdHJveSgpOwogICAgICB2YXIgc3RhdGUgPSB0aGlzLnBsYXllcnNbc2hpcC5sb2NhbElkXS5zdGF0ZSAtIDE7CiAgICAgIGlmIChzdGF0ZSA9PT0gMCkgdGhpcy5raWxsZWRCeSA9IGJ1bGxldC5zaG90Qnk7CiAgICAgIHRoaXMuc29ja2V0LmVtaXQod2Vic29ja2V0RXZlbnRzLkNIQU5HRV9TVEFURSwgewogICAgICAgIGxvY2FsSWQ6IHNoaXAubG9jYWxJZCwKICAgICAgICBzdGF0ZTogc3RhdGUKICAgICAgfSk7CiAgICAgIHRoaXMudXBkYXRlU3RhdGUoewogICAgICAgIGxvY2FsSWQ6IHNoaXAubG9jYWxJZCwKICAgICAgICBzdGF0ZTogc3RhdGUKICAgICAgfSk7CiAgICB9CiAgfSwgewogICAga2V5OiAicmVsb2FkIiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZWxvYWQoZGF0YSkgewogICAgICB0aGlzLnBsYXllcnNbZGF0YS5sb2NhbElkXS5hdmFpbGFibGVCdWxsZXRzID0gZGF0YS5hdmFpbGFibGVCdWxsZXRzOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIEdhbWVTY2VuZTsKfShQaGFzZXIuU2NlbmUpOwoKZXhwb3J0IHsgR2FtZVNjZW5lIGFzIGRlZmF1bHQgfTs="},{"version":3,"sources":["/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/GameScene.js"],"names":["Phaser","websocketEvents","gameDimensions","normalizers","sceneKeys","GameScene","socket","game","key","settings","currentPlayer","maxVelocityLittle","velocity","accelerationLittle","respawnTime","frictionAir","players","forEach","player","localId","availableBullets","state","setInterval","Math","min","data","emit","RELOAD","reload","reloadingVelocity","load","image","createGroups","createShips","on","ROTATE_SHIP","onShipRotated","SHOOT","createBullet","CHANGE_STATE","updateState","rotationKey","input","keyboard","addKey","Input","Keyboard","KeyCodes","SPACE","accelerateLittleKey","ENTER","shoot","physics","world","bullet","gameObject","destroy","rotation","ship","position","x","y","time","delta","isDown","rotate","moveLittle","velocityFromRotation","velocityMagnitude","setVelocity","max","ships","add","group","bullets","index","Object","values","create","width","height","color","setRotation","PI","setCollideWorldBounds","overlap","onBulletCollision","collider","bulletVelocity","deltaTime","Date","now","timestamp","console","log","shotBy","body","onWorldBounds","setPosition","angularVelocity","previousMag","MOVE_LITTLE","angle","cos","sin","killAndHide","setTexture","setTimeout","killedBy","Scene"],"mappings":"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","sourcesContent":["import * as Phaser from \"phaser\";\nimport websocketEvents from \"../constants/websocketEvents\";\nimport {gameDimensions, normalizers, sceneKeys} from \"../constants/gameSettings\";\n\n\nexport default class GameScene extends Phaser.Scene {\n\n    constructor(socket, game) {\n        super({key: sceneKeys.game});\n\n        this.socket = socket;\n        this.settings = game.settings;\n        this.currentPlayer = game.currentPlayer;\n        this.settings.maxVelocityLittle = game.settings.velocity+0.5;\n        this.settings.accelerationLittle = 0.5;\n        this.settings.respawnTime = 5000;\n        this.settings.frictionAir = 0.1;\n        this.players = {};\n        game.players.forEach(player => {\n            this.players[player.localId] = player;\n            this.players[player.localId].availableBullets = 3;\n            this.players[player.localId].state = 2;\n        });\n\n/*        this.settings = defaultSettings;\n        this.settings.maxVelocityLittle = 2.5;\n        this.settings.accelerationLittle = 0.5;\n        this.settings.frictionAir = 0.1;\n        this.currentPlayer = 0;\n        this.players = { //STATE: 0=dead 1=little 2=ship 3=shield(?)\n            '0': {\n                localId: 0,\n                color: 0,\n                availableBullets: 3,\n                state: 2\n            },\n            '1': {\n                localId: 1,\n                color: 1,\n                availableBullets: 3,\n                state: 2\n            },\n            '2': {\n                localId: 2,\n                color: 2,\n                availableBullets: 3,\n                state: 2\n            }\n        };*/\n\n        setInterval(() => {\n            const availableBullets = Math.min(3, this.players[this.currentPlayer].availableBullets + 1);\n            const data = {\n                localId: this.currentPlayer,\n                availableBullets\n            };\n            this.socket.emit(websocketEvents.RELOAD, data);\n            this.reload(data);\n        }, 1/(this.settings.reloadingVelocity * normalizers.reloadingVelocity));\n    }\n\n    preload(){\n\n        this.load.image(\"ship0\", \"./ships/ship0.png\");\n        this.load.image(\"ship1\", \"./ships/ship1.png\");\n        this.load.image(\"ship2\", \"./ships/ship2.png\");\n        this.load.image(\"ship3\", \"./ships/ship3.png\");\n        this.load.image(\"little0\", \"./little.png\");\n        this.load.image(\"little1\", \"./little.png\");\n        this.load.image(\"little2\", \"./little.png\");\n        this.load.image(\"little3\", \"./little.png\");\n        this.load.image(\"bullet\", \"./bullet.png\");\n\n    }\n\n    create(){\n        this.createGroups();\n        this.createShips();\n\n        this.socket.on(websocketEvents.ROTATE_SHIP, data => this.onShipRotated(data));\n        //this.socket.on(websocketEvents.MOVE_LITTLE, data => this.onLittleMoved(data));\n        this.socket.on(websocketEvents.SHOOT, data => this.createBullet(data));\n        this.socket.on(websocketEvents.CHANGE_STATE, data => this.updateState(data));\n        this.socket.on(websocketEvents.RELOAD, data => this.reload(data));\n\n        this.rotationKey = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE);\n        this.accelerateLittleKey = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.ENTER);\n        this.input.keyboard.on(\"keyup-ENTER\", ()=>{\n            if(this.players[this.currentPlayer].state>=2) this.shoot();\n        });\n        this.physics.world.on(\"worldbounds\", (bullet)=>{bullet.gameObject.destroy()});\n\n\n        setInterval(()=>{\n            this.socket.emit(websocketEvents.ROTATE_SHIP, {\n                localId: this.currentPlayer,\n                rotation: this.players[this.currentPlayer].ship.rotation,\n                position: {\n                    x: this.players[this.currentPlayer].ship.x,\n                    y: this.players[this.currentPlayer].ship.y\n                }\n            });\n        }, 1000/20);\n    }\n\n    update(time, delta){\n        if(this.rotationKey.isDown) this.rotate(delta);\n        if(this.accelerateLittleKey.isDown) this.moveLittle(delta);\n        const {x, y} = this.physics.velocityFromRotation(\n            this.players[this.currentPlayer].ship.rotation,\n            this.players[this.currentPlayer].ship.velocityMagnitude\n        );\n        this.players[this.currentPlayer].ship.setVelocity(x, y);\n        if(this.players[this.currentPlayer].state === 1){\n            this.players[this.currentPlayer].ship.velocityMagnitude = Math.max(\n                0, this.players[this.currentPlayer].ship.velocityMagnitude-this.settings.frictionAir*delta\n            );\n        }\n        /*Object.values(this.players).forEach(player => {\n            const {x, y} = getVelocity(player.ship.rotation, player.ship.velocityMagnitude);\n            player.ship.setVelocity(x, y);\n            if(player.state === 1){\n                player.ship.velocityMagnitude = Math.max(\n                    0, player.ship.velocityMagnitude-this.settings.frictionAir*delta\n                );\n            }\n        });*/\n        //if(this.ships.countActive() <= 1) console.log(\"game over\") //TODO: SETUP END OF THE TURN\n    }\n\n\n\n\n    //=============================================================================\n    //Creating things\n    createGroups(){\n        this.ships = this.physics.add.group();\n        this.bullets = this.physics.add.group();\n    }\n\n    createShips(){\n        let index = 0;\n        Object.values(this.players).forEach(player => {\n            player.ship = this.ships.create(\n                (index<2 ? 0.05 : 0.95) * gameDimensions.width,\n                ( index%2 === 0 ? 0.05 : 0.95 ) * gameDimensions.height,\n                \"ship\"+player.color\n            )\n\n            player.ship.localId = player.localId;\n            player.ship.setRotation(-Math.PI / 4  * ( index < 2 ? 1 : 3) * ( ( index % 2 ) * 2 - 1 ));\n            player.ship.setCollideWorldBounds(true);\n            player.ship.velocityMagnitude = this.settings.velocity*normalizers.velocity;\n\n            if(player.localId===this.currentPlayer){\n                this.physics.add.overlap(player.ship, this.bullets, (ship, bullet) => {\n                    this.onBulletCollision(ship, bullet);\n                });\n            }\n\n            index++;\n        });\n\n        this.physics.add.collider(this.ships, this.ships);\n    }\n\n    createBullet(data){\n        const {x, y} = this.physics.velocityFromRotation(data.rotation, this.settings.bulletVelocity*normalizers.bulletVelocity);\n        const deltaTime = Date.now()-data.timestamp;\n        console.log(deltaTime, {x, y});\n        const bullet = this.bullets.create(data.position.x+deltaTime*x, data.position.y+deltaTime*y, \"bullet\");\n        bullet.rotation = data.rotation;\n        bullet.setVelocity(x, y);\n        bullet.shotBy = data.localId;\n        bullet.setCollideWorldBounds(true);\n        bullet.body.onWorldBounds = true;\n        this.players[data.localId].availableBullets--;\n    }\n\n\n\n\n\n\n    //=============================================================================\n    //Others do things via the websocket\n    onShipRotated(data){\n        this.players[data.localId].ship.setPosition(data.position.x, data.position.y);\n        this.players[data.localId].ship.setRotation(data.rotation);\n    }\n\n    onLittleMoved(data){\n        this.players[data.localId].ship.setPosition(data.position.x, data.position.y);\n        this.players[data.localId].ship.velocityMagnitude = data.velocityMagnitude;\n    }\n\n\n\n    //=============================================================================\n    //Current players does things\n    rotate(delta){\n        this.players[this.currentPlayer].ship.rotation += delta * this.settings.angularVelocity * normalizers.angularVelocity;\n        /*this.socket.emit(websocketEvents.ROTATE_SHIP, {\n            localId: this.currentPlayer,\n            rotation: this.players[this.currentPlayer].ship.rotation,\n            position: {\n                x: this.players[this.currentPlayer].ship.x,\n                y: this.players[this.currentPlayer].ship.y\n            }\n        });*/\n    }\n\n    moveLittle(delta){\n        if(this.players[this.currentPlayer].state === 1){\n            const ship = this.players[this.currentPlayer].ship;\n            const previousMag = ship.velocityMagnitude;\n            if(previousMag < this.settings.maxVelocityLittle * normalizers.velocity){\n                this.players[this.currentPlayer].ship.velocityMagnitude += delta*this.settings.accelerationLittle;\n            } else {\n                this.players[this.currentPlayer].ship.velocityMagnitude = this.settings.maxVelocityLittle * normalizers.velocity;\n            }\n\n            this.socket.emit(websocketEvents.MOVE_LITTLE, {\n                localId: this.currentPlayer,\n                position: {\n                    x: ship.x,\n                    y: ship.y\n                },\n                velocityMagnitude: this.players[this.currentPlayer].ship.velocityMagnitude\n            });\n        }\n    }\n\n    shoot(){\n        if(this.players[this.currentPlayer].availableBullets>0){\n            const ship = this.players[this.currentPlayer].ship;\n            const angle = ship.rotation;\n            const data = {\n                position: {\n                    x: ship.x + ship.width*Math.cos(angle),\n                    y: ship.y + ship.width*Math.sin(angle)\n                },\n                rotation: angle,\n                localId: this.currentPlayer,\n                timestamp: Date.now()\n            };\n            this.socket.emit(websocketEvents.SHOOT, data);\n            this.createBullet(data);\n        }\n    }\n\n\n    updateState(data){\n        this.players[data.localId].state = data.state;\n        const ship = this.players[data.localId].ship;\n        switch (data.state) {\n            case 0:\n                this.ships.killAndHide(ship);\n                break;\n            case 1:\n                ship.setTexture(\"little\" + this.players[data.localId].color);\n                if(data.localId === this.currentPlayer) {\n                    setTimeout(() => {\n                        if (this.players[data.localId].state === 1) {\n                            this.updateState({\n                                localId: this.currentPlayer,\n                                state: 2\n                            });\n                            this.socket.emit(websocketEvents.CHANGE_STATE, {\n                                localId: this.currentPlayer,\n                                state: 2\n                            });\n                        }\n                    }, this.settings.respawnTime);\n                }\n                break;\n            case 2:\n                ship.velocityMagnitude = this.settings.velocity * normalizers.velocity;\n                ship.setTexture(\"ship\" + this.players[data.localId].color);\n                break;\n        }\n    }\n\n    onBulletCollision(ship, bullet){\n        bullet.destroy();\n        const state = this.players[ship.localId].state-1;\n        if(state === 0) this.killedBy = bullet.shotBy;\n        this.socket.emit(websocketEvents.CHANGE_STATE, {\n            localId: ship.localId,\n            state\n        });\n        this.updateState({\n            localId: ship.localId,\n            state\n        });\n    }\n\n\n    reload(data){\n        this.players[data.localId].availableBullets = data.availableBullets;\n    }\n\n\n}"]}]}
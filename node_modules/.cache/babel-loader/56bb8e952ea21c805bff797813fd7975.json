{"remainingRequest":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/babel-loader/lib/index.js!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/eslint-loader/index.js??ref--13-0!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/LobbyScene.js","dependencies":[{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/LobbyScene.js","mtime":1617473303288},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/cache-loader/dist/cjs.js","mtime":1616495189815},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/babel-loader/lib/index.js","mtime":1616495189787},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/eslint-loader/index.js","mtime":1616495190059}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/LobbyScene.js"],"names":["Phaser","websocketEvents","defaultSettings","normalizers","sceneKeys","detectTouchScreen","LobbyScene","socket","key","lobby","players","currentPlayer","settings","touchScreen","ships","availableBullets","interval","handler","bulletsLoaded","getFirstDead","setActive","setVisible","e","console","error","clearInterval","setInterval","reloadingVelocity","width","sys","game","canvas","height","load","image","onresize","parent","document","getElementById","Math","min","offsetWidth","offsetHeight","window","innerWidth","scale","resize","physics","world","setBounds","addEventListener","events","on","removeEventListener","emit","LOBBY_MODIFIED","onLobbyModified","keySpace","input","keyboard","addKey","Input","Keyboard","KeyCodes","SPACE","createBullet","add","setOrigin","addPointer","pointer","x","rotating","time","delta","Array","isArray","length","forEach","player","ship","localId","body","velocity","y","angle","getAngle","children","iterate","bullet","index","topLeft","getTopLeft","bottomLeft","getBottomLeft","centerLeft","cos","rotation","sin","isDown","angularVelocity","velocityFromAngle","setVelocity","atan","PI","color","posX","Between","posY","sprite","setCollideWorldBounds","setBounce","group","collideWorldBounds","quantity","visible","active","id","i","currentlyPlayingIds","push","previousPlayingIds","newShips","oldShips","includes","setTexture","findPlayerById","createNewShip","idsToRemove","filter","destroy","bulletVelocity","getFirstAlive","Scene"],"mappings":"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","sourcesContent":["import Phaser from \"phaser\";\nimport websocketEvents from \"../constants/websocketEvents\";\nimport {defaultSettings, normalizers, sceneKeys} from \"../constants/gameSettings\";\nimport {detectTouchScreen} from \"../constants/constants\";\n\nexport default class LobbyScene extends Phaser.Scene {\n\n    constructor(socket) {\n        super({key: sceneKeys.lobby});\n        this.socket = socket;\n        this.lobby = {\n            players: [],\n            currentPlayer: null,\n            settings: defaultSettings\n        }\n\n        this.touchScreen = detectTouchScreen();\n\n        this.ships = {};\n        this.availableBullets = 3;\n        let interval;\n        const handler = () => {\n            this.availableBullets = this.availableBullets>=3 ? this.availableBullets : this.availableBullets+1;\n            try{\n                this.ships[this.lobby.currentPlayer].bulletsLoaded.getFirstDead().setActive(true).setVisible(true);\n            } catch (e) {\n                console.error(e);\n            }\n            clearInterval(interval)\n            interval = setInterval(handler, 1/(this.lobby.settings.reloadingVelocity*normalizers.reloadingVelocity));\n        }\n        interval = setInterval(handler, 1/(this.lobby.settings.reloadingVelocity*normalizers.reloadingVelocity));\n    }\n\n    preload(){\n\n        //load images\n        this.width = this.sys.game.canvas.width;\n        this.height = this.sys.game.canvas.height;\n\n        this.load.image(\"ship0\", \"./ships/ship0.png\");\n        this.load.image(\"ship1\", \"./ships/ship1.png\");\n        this.load.image(\"ship2\", \"./ships/ship2.png\");\n        this.load.image(\"ship3\", \"./ships/ship3.png\");\n        this.load.image(\"bullet\", \"./bullet.png\");\n        this.load.image(\"bullet-loaded\", \"./bullet-loaded.png\");\n\n        if(this.touchScreen) {\n            this.load.image(\"rotate-button\", \"./rotate-button.png\");\n            this.load.image(\"shoot-button\", \"./shoot-button.png\");\n        }\n\n        const onresize = () => {\n            const parent = document.getElementById(\"players-wrapper\");\n            const height = Math.min(parent.offsetWidth, parent.offsetHeight);\n            const width = window.innerWidth>750 ? height : window.innerWidth*0.8\n            this.game.scale.resize(width, height);\n            this.physics.world.setBounds(0, 0, width, height);\n        };\n        window.addEventListener(\"resize\", onresize);\n        this.events.on(\"destroy\", ()=>{\n            window.removeEventListener(\"resize\", onresize);\n        });\n\n    }\n\n    create(){\n        //Event lobby-modified\n        this.socket.emit(websocketEvents.LOBBY_MODIFIED);\n        this.socket.on(websocketEvents.LOBBY_MODIFIED, game => this.onLobbyModified(game));\n\n        //Setting up rotation and shooting\n        this.keySpace = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE);\n        this.input.keyboard.on(\"keyup-ENTER\", ()=>{\n            if(this.availableBullets>0) this.createBullet();\n        });\n\n        if(this.touchScreen) {\n            this.add.image(0, this.height/2, \"rotate-button\").setOrigin(0, 0.5);\n            this.add.image(this.width, this.height/2, \"shoot-button\").setOrigin(1, 0.5);\n\n            this.input.addPointer(1);\n            this.input.on(\"pointerup\", (pointer) => {\n                if(pointer.x<this.width/2){\n                    this.rotating = false;\n                }\n            });\n            this.input.on(\"pointerdown\", (pointer) => {\n                if(pointer.x<this.width/2){\n                    this.rotating = true;\n                } else {\n                    if(this.availableBullets>0) this.createBullet();\n                }\n            });\n        }\n\n        /*this.onLobbyModified({ //TODO: CHANGE HERE\n            settings: defaultSettings,\n            currentPlayer: 0,\n            players: [\n                {\n                    localId: 0,\n                    color: 0\n                },\n                {\n                    localId: 1,\n                    color: 1\n                }\n            ]\n        })*/\n    }\n\n    update(time, delta){\n        if(Array.isArray(this.lobby.players) && this.lobby.players.length>0) {\n            this.lobby.players.forEach(player => {\n                const ship = this.ships[player.localId];\n                const {x, y} = ship.body.velocity;\n                ship.angle = this.getAngle(x, y);\n\n                ship.bulletsLoaded.children.iterate((bullet, index) => {\n                    const topLeft = ship.getTopLeft();\n                    const bottomLeft = ship.getBottomLeft();\n                    const centerLeft = {\n                        x: (topLeft.x + bottomLeft.x) /2,\n                        y: (topLeft.y + bottomLeft.y) /2\n                    }\n                    switch (index){\n                        case 0:\n                            bullet.x = bottomLeft.x - (ship.width/4)*Math.cos(ship.rotation);\n                            bullet.y = bottomLeft.y - (ship.height/4)*Math.sin(ship.rotation);\n                            break;\n                        case 1:\n                            bullet.x = topLeft.x - (ship.width/4)*Math.cos(ship.rotation);\n                            bullet.y = topLeft.y - (ship.height/4)*Math.sin(ship.rotation);\n                            break;\n                        case 2:\n                            bullet.x = centerLeft.x - (ship.width/4)*Math.cos(ship.rotation);\n                            bullet.y = centerLeft.y - (ship.height/4)*Math.sin(ship.rotation);\n                            break;\n                    }\n                });\n            });\n        }\n        if(this.lobby.currentPlayer!==null && (this.keySpace.isDown || this.rotating)){\n            this.ships[this.lobby.currentPlayer].angle += this.lobby.settings.angularVelocity* normalizers.angularVelocity * delta;\n            const {x, y} = this.physics.velocityFromAngle(this.ships[this.lobby.currentPlayer].angle, this.lobby.settings.velocity* normalizers.velocity);\n            this.ships[this.lobby.currentPlayer].setVelocity(x, y);\n        }\n    }\n\n    getAngle(x, y){\n        let angle;\n        if(x!==0) {\n            angle = Math.atan(y / x) * 180 / Math.PI;\n            angle = x < 0 ? angle + 180 : angle;\n        } else if(y>=0) angle = 90;\n        else if(y<0) angle = -90;\n        return angle;\n    }\n\n    createNewShip(color){\n        const posX = Phaser.Math.Between(0, this.width);\n        const posY = Phaser.Math.Between(0, this.height);\n        const ship = this.physics.add.sprite(posX, posY, \"ship\"+color);\n        const angle = Phaser.Math.Between(45, 135);\n        const {x, y} = this.physics.velocityFromAngle(angle, this.lobby.settings.velocity*normalizers.velocity)\n        ship.setVelocity(x, y);\n        ship.angle = angle;\n        ship.setCollideWorldBounds(true);\n        ship.setBounce(1, 1);\n        ship.bulletsLoaded = this.physics.add.group({\n            collideWorldBounds: false,\n            key: \"bullet-loaded\",\n            quantity: 3,\n            visible: true,\n            active: true\n        });\n        return ship;\n    }\n\n    findPlayerById(id){\n        for(let i = 0; i < this.lobby.players.length; i++){\n            if(this.lobby.players[i].localId === id) return this.lobby.players[i];\n        }\n        return null;\n    }\n\n\n    onLobbyModified(game){\n        const currentlyPlayingIds = [];\n        game.players.forEach(player => {currentlyPlayingIds.push(player.localId)});\n\n        const previousPlayingIds = [];\n        this.lobby.players.forEach(player => {previousPlayingIds.push(player.localId)});\n\n        this.lobby = {...game};\n\n        const newShips = {};\n        const oldShips = {...this.ships};\n        currentlyPlayingIds.forEach(id => {\n            if(previousPlayingIds.includes(id)){\n                newShips[id] = this.ships[id];\n                const {x, y} = this.physics.velocityFromAngle(newShips[id].angle, this.lobby.settings.velocity * normalizers.velocity);\n                newShips[id].setVelocity(x, y);\n                newShips[id].setTexture(\"ship\"+this.findPlayerById(id).color);\n            } else {\n                newShips[id] = this.createNewShip(this.findPlayerById(id).color);\n            }\n        });\n        const idsToRemove = previousPlayingIds.filter(x => !currentlyPlayingIds.includes(x));\n        idsToRemove.forEach(id => {oldShips[id].destroy()});\n\n        this.ships = newShips;\n    }\n\n    createBullet(){\n        const bullet = this.physics.add.image(\n            this.ships[this.lobby.currentPlayer].x,\n            this.ships[this.lobby.currentPlayer].y,\n            \"bullet\"\n        );\n        bullet.angle = this.ships[this.lobby.currentPlayer].angle;\n        const {x, y} = this.physics.velocityFromAngle(bullet.angle, this.lobby.settings.bulletVelocity*normalizers.bulletVelocity);\n        bullet.setVelocity(x, y);\n        this.ships[this.lobby.currentPlayer].bulletsLoaded.getFirstAlive().setActive(false).setVisible(false);\n        this.availableBullets--;\n    }\n}"]}]}
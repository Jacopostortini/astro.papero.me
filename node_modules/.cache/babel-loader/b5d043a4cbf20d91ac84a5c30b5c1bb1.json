{"remainingRequest":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/thread-loader/dist/cjs.js!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/babel-loader/lib/index.js!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/eslint-loader/index.js??ref--13-0!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/RankingScene.js","dependencies":[{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/RankingScene.js","mtime":1618817912599},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/cache-loader/dist/cjs.js","mtime":1618298483685},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/thread-loader/dist/cjs.js","mtime":1618298485037},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/babel-loader/lib/index.js","mtime":1618298483657},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/eslint-loader/index.js","mtime":1618298483941}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvbWVkaWEvamFjb3BvL1ZvbHVtZURhdGkvRG9jdW1lbnRpL3BhcGVyby50ay9jb3Ntb3MucGFwZXJvLm1lL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL21lZGlhL2phY29wby9Wb2x1bWVEYXRpL0RvY3VtZW50aS9wYXBlcm8udGsvY29zbW9zLnBhcGVyby5tZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgX2luaGVyaXRzIGZyb20gIi9tZWRpYS9qYWNvcG8vVm9sdW1lRGF0aS9Eb2N1bWVudGkvcGFwZXJvLnRrL2Nvc21vcy5wYXBlcm8ubWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICIvbWVkaWEvamFjb3BvL1ZvbHVtZURhdGkvRG9jdW1lbnRpL3BhcGVyby50ay9jb3Ntb3MucGFwZXJvLm1lL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVTdXBlciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci50by1maXhlZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5tYXRoLnNpZ24uanMiOwppbXBvcnQgUGhhc2VyIGZyb20gInBoYXNlciI7CmltcG9ydCB7IGdhbWVEaW1lbnNpb25zLCBzY2VuZUtleXMgfSBmcm9tICIuLi9jb25zdGFudHMvZ2FtZVNldHRpbmdzIjsKaW1wb3J0IHdlYnNvY2tldEV2ZW50cyBmcm9tICIuLi9jb25zdGFudHMvd2Vic29ja2V0RXZlbnRzIjsKaW1wb3J0IF8gZnJvbSAibG9kYXNoIjsKaW1wb3J0IHsgbG9hZEltYWdlcyB9IGZyb20gIi4vc2NlbmUiOwoKdmFyIFJhbmtpbmdTY2VuZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1BoYXNlciRTY2VuZSkgewogIF9pbmhlcml0cyhSYW5raW5nU2NlbmUsIF9QaGFzZXIkU2NlbmUpOwoKICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKFJhbmtpbmdTY2VuZSk7CgogIGZ1bmN0aW9uIFJhbmtpbmdTY2VuZShzb2NrZXQsIHBvaW50c1RvV2luKSB7CiAgICB2YXIgX3RoaXM7CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFJhbmtpbmdTY2VuZSk7CgogICAgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCB7CiAgICAgIGtleTogc2NlbmVLZXlzLnJhbmtpbmcsCiAgICAgIHBoeXNpY3M6IHsKICAgICAgICBkZWZhdWx0OiAiYXJjYWRlIiwKICAgICAgICBhcmNhZGU6IHsKICAgICAgICAgIGRlYnVnOiBmYWxzZSwKICAgICAgICAgIGdyYXZpdHk6IHsKICAgICAgICAgICAgeDogMCwKICAgICAgICAgICAgeTogMAogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfSk7CiAgICBfdGhpcy5zb2NrZXQgPSBzb2NrZXQ7CiAgICBfdGhpcy5wb2ludHNUb1dpbiA9IHBvaW50c1RvV2luOwogICAgX3RoaXMuc3BlZWQgPSAzMDA7CiAgICBfdGhpcy5hbmd1bGFyU3BlZWQgPSAxMjAwOwoKICAgIF90aGlzLnNvY2tldC5vbih3ZWJzb2NrZXRFdmVudHMuU1RBUlRfVFVSTiwgZnVuY3Rpb24gKGdhbWUpIHsKICAgICAgY29uc29sZS5sb2coIlN0YXJ0aW5nIHR1cm4iKTsKCiAgICAgIF90aGlzLnNjZW5lLnN0YXJ0KHNjZW5lS2V5cy5nYW1lLCBfLmNsb25lRGVlcChnYW1lKSk7CiAgICB9KTsKCiAgICByZXR1cm4gX3RoaXM7CiAgfQoKICBfY3JlYXRlQ2xhc3MoUmFua2luZ1NjZW5lLCBbewogICAga2V5OiAiaW5pdCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gaW5pdChkYXRhKSB7CiAgICAgIGNvbnNvbGUubG9nKCJSYW5raW5nIHNjZW5lIGluaXQiLCBfLmNsb25lRGVlcChkYXRhKSk7CiAgICAgIHRoaXMucGxheWVycyA9IF8uY2xvbmVEZWVwKGRhdGEucGxheWVycyk7CiAgICAgIHRoaXMudGltZXIgPSBkYXRhLnRpbWVyID8gZGF0YS50aW1lciA6IEluZmluaXR5OwogICAgICB0aGlzLmJhbmRXaWR0aCA9IGdhbWVEaW1lbnNpb25zLndpZHRoIC8gKHRoaXMucG9pbnRzVG9XaW4gKyAxKTsKICAgICAgdGhpcy5saW5lSGVpZ2h0ID0gZ2FtZURpbWVuc2lvbnMuaGVpZ2h0IC8gdGhpcy5wbGF5ZXJzLmxlbmd0aDsKICAgICAgdGhpcy5wbGF5ZXJzU3RvcHBlZCA9IDA7CiAgICB9CiAgfSwgewogICAga2V5OiAicHJlbG9hZCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcHJlbG9hZCgpIHsKICAgICAgY29uc29sZS5sb2coIlJhbmtpbmcgc2NlbmUgcHJlbG9hZCIpOwogICAgICBsb2FkSW1hZ2VzKHRoaXMsIHNjZW5lS2V5cy5yYW5raW5nKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJjcmVhdGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNyZWF0ZSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICBjb25zb2xlLmxvZygiUmFua2luZyBzY2VuZSBjcmVhdGUiKTsKICAgICAgdGhpcy5kcmF3RmluaXNoTGluZSgpOwogICAgICB0aGlzLmNyZWF0ZVNoaXBzKCk7CiAgICAgIHRoaXMuc2V0U2hpcHNNb3ZlbWVudHMoKTsKICAgICAgdGhpcy50aW1lclRleHQgPSB0aGlzLmFkZC50ZXh0KGdhbWVEaW1lbnNpb25zLndpZHRoIC8gMiwgMjAsICgodGhpcy50aW1lciAtIERhdGUubm93KCkpIC8gMTAwMCkudG9GaXhlZCgwKSwgewogICAgICAgIGZvbnRTaXplOiAzMAogICAgICB9KTsKICAgICAgdGhpcy50aW1lclRleHQuc2V0T3JpZ2luKDAuNSk7CiAgICAgIHRoaXMuc2NlbmUucGF1c2UoKTsKICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMyLnNjZW5lLnJlc3VtZSgpOwogICAgICB9LCAxMDAwKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJ1cGRhdGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB2YXIgdGV4dCA9IHRoaXMudGltZXIgPT09IEluZmluaXR5ID8gIkdhbWUgb3ZlciAoRjUgdG8gcmVzdGFydCkiIDogKCh0aGlzLnRpbWVyIC0gRGF0ZS5ub3coKSkgLyAxMDAwKS50b0ZpeGVkKDApOwogICAgICB0aGlzLnRpbWVyVGV4dC5zZXRUZXh0KHRleHQpOwoKICAgICAgaWYgKHRoaXMudGltZXIgPCBEYXRlLm5vdygpKSB7CiAgICAgICAgY29uc29sZS5sb2coInRpbWVvdXQiKTsKICAgICAgICB0aGlzLnNvY2tldC5lbWl0KHdlYnNvY2tldEV2ZW50cy5TVEFSVF9UVVJOKTsKICAgICAgfQoKICAgICAgdGhpcy5wbGF5ZXJzLmZvckVhY2goZnVuY3Rpb24gKHBsYXllcikgewogICAgICAgIHZhciB0YXJnZXQgPSBfdGhpczMuYmFuZFdpZHRoICogKHBsYXllci50byArIDAuNSk7CgogICAgICAgIGlmIChwbGF5ZXIuc2hpcC54ID49IHRhcmdldCAmJiBwbGF5ZXIuc2hpcC5ib2R5LnZlbG9jaXR5LnggPiAwIHx8IHBsYXllci5zaGlwLnggPD0gdGFyZ2V0ICYmIHBsYXllci5zaGlwLmJvZHkudmVsb2NpdHkueCA8IDApIHsKICAgICAgICAgIHBsYXllci5zaGlwLnNldFZlbG9jaXR5WCgwKTsKICAgICAgICAgIHBsYXllci5zaGlwLnNldEFuZ3VsYXJWZWxvY2l0eSgwKTsKICAgICAgICAgIF90aGlzMy5wbGF5ZXJzU3RvcHBlZCsrOwogICAgICAgIH0KICAgICAgfSk7CgogICAgICBpZiAodGhpcy5wbGF5ZXJzU3RvcHBlZCA+PSB0aGlzLnBsYXllcnMubGVuZ3RoKSB7CiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICBfdGhpczMuc29ja2V0LmVtaXQod2Vic29ja2V0RXZlbnRzLlJFQURZX1RVUk4pOwogICAgICAgIH0sIDEwMDApOwogICAgICB9CiAgICB9CiAgfSwgewogICAga2V5OiAiZHJhd0ZpbmlzaExpbmUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGRyYXdGaW5pc2hMaW5lKCkgewogICAgICB2YXIgZ3JhcGhpY3MgPSB0aGlzLmFkZC5ncmFwaGljcygpOwogICAgICB2YXIgbnVtYmVyT2ZTcXVhcmVzID0gMzsKICAgICAgdmFyIHNxdWFyZURpbSA9IHRoaXMuYmFuZFdpZHRoIC8gbnVtYmVyT2ZTcXVhcmVzOwogICAgICB2YXIgeCA9IHRoaXMuYmFuZFdpZHRoICogdGhpcy5wb2ludHNUb1dpbjsKICAgICAgdmFyIHkgPSAwOwogICAgICB2YXIgY3VycmVudENvbG9yID0gMHgwOwoKICAgICAgd2hpbGUgKHkgPCBnYW1lRGltZW5zaW9ucy5oZWlnaHQpIHsKICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG51bWJlck9mU3F1YXJlczsgaSsrKSB7CiAgICAgICAgICBncmFwaGljcy5maWxsU3R5bGUoY3VycmVudENvbG9yLCAxLjApOwogICAgICAgICAgZ3JhcGhpY3MuZmlsbFJlY3QoeCArIHNxdWFyZURpbSAqIGksIHksIHNxdWFyZURpbSwgc3F1YXJlRGltKTsKICAgICAgICAgIGN1cnJlbnRDb2xvciA9IGN1cnJlbnRDb2xvciA9PT0gMHgwID8gMHhDQ0NDQ0MgOiAweDA7CiAgICAgICAgfQoKICAgICAgICB5ICs9IHNxdWFyZURpbTsKICAgICAgfQogICAgfQogIH0sIHsKICAgIGtleTogImNyZWF0ZVNoaXBzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjcmVhdGVTaGlwcygpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICB0aGlzLnBsYXllcnMuZm9yRWFjaChmdW5jdGlvbiAocGxheWVyLCBpbmRleCkgewogICAgICAgIHBsYXllci5zaGlwID0gX3RoaXM0LnBoeXNpY3MuYWRkLnNwcml0ZShfdGhpczQuYmFuZFdpZHRoICogKHBsYXllci5mcm9tICsgMC41KSwgX3RoaXM0LmxpbmVIZWlnaHQgKiAoaW5kZXggKyAwLjUpLCAic2hpcCIgKyBwbGF5ZXIuY29sb3IpOwogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJzZXRTaGlwc01vdmVtZW50cyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0U2hpcHNNb3ZlbWVudHMoKSB7CiAgICAgIHZhciBfdGhpczUgPSB0aGlzOwoKICAgICAgdGhpcy5wbGF5ZXJzLmZvckVhY2goZnVuY3Rpb24gKHBsYXllcikgewogICAgICAgIHBsYXllci5zaGlwLnNldFZlbG9jaXR5WChNYXRoLnNpZ24ocGxheWVyLnRvIC0gcGxheWVyLmZyb20pICogX3RoaXM1LnNwZWVkKTsKCiAgICAgICAgaWYgKHBsYXllci50byA8IHBsYXllci5mcm9tKSB7CiAgICAgICAgICBwbGF5ZXIuc2hpcC5zZXRBbmd1bGFyVmVsb2NpdHkoX3RoaXM1LmFuZ3VsYXJTcGVlZCk7CiAgICAgICAgfSBlbHNlIGlmIChwbGF5ZXIudG8gPT09IHBsYXllci5mcm9tKSBfdGhpczUucGxheWVyc1N0b3BwZWQrKzsKICAgICAgfSk7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gUmFua2luZ1NjZW5lOwp9KFBoYXNlci5TY2VuZSk7CgpleHBvcnQgeyBSYW5raW5nU2NlbmUgYXMgZGVmYXVsdCB9Ow=="},{"version":3,"sources":["/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/RankingScene.js"],"names":["Phaser","gameDimensions","sceneKeys","websocketEvents","_","loadImages","RankingScene","socket","pointsToWin","key","ranking","physics","default","arcade","debug","gravity","x","y","speed","angularSpeed","on","START_TURN","game","console","log","scene","start","cloneDeep","data","players","timer","Infinity","bandWidth","width","lineHeight","height","length","playersStopped","drawFinishLine","createShips","setShipsMovements","timerText","add","text","Date","now","toFixed","fontSize","setOrigin","pause","setTimeout","resume","setText","emit","forEach","player","target","to","ship","body","velocity","setVelocityX","setAngularVelocity","READY_TURN","graphics","numberOfSquares","squareDim","currentColor","i","fillStyle","fillRect","index","sprite","from","color","Math","sign","Scene"],"mappings":"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","sourcesContent":["import Phaser from \"phaser\";\nimport {gameDimensions, sceneKeys} from \"../constants/gameSettings\";\nimport websocketEvents from \"../constants/websocketEvents\";\nimport _ from \"lodash\";\nimport {loadImages} from \"./scene\";\n\nexport default class RankingScene extends Phaser.Scene {\n\n    constructor(socket, pointsToWin) {\n        super({\n            key: sceneKeys.ranking,\n            physics: {\n                default: \"arcade\",\n                arcade: {\n                    debug: false,\n                    gravity: {x: 0, y: 0}\n                }\n            }\n        });\n\n        this.socket = socket;\n        this.pointsToWin = pointsToWin;\n\n        this.speed = 300;\n        this.angularSpeed = 1200;\n        this.socket.on(websocketEvents.START_TURN, game => {\n            console.log(\"Starting turn\")\n            this.scene.start(sceneKeys.game, _.cloneDeep(game));\n        });\n    }\n\n    init(data){\n        console.log(\"Ranking scene init\", _.cloneDeep(data))\n        this.players = _.cloneDeep(data.players);\n        this.timer = data.timer ? data.timer : Infinity;\n        this.bandWidth = gameDimensions.width / (this.pointsToWin+1);\n        this.lineHeight = gameDimensions.height / this.players.length;\n        this.playersStopped = 0;\n    }\n\n    preload(){\n        console.log(\"Ranking scene preload\")\n        loadImages(this, sceneKeys.ranking);\n    }\n\n    create(){\n        console.log(\"Ranking scene create\")\n        this.drawFinishLine();\n\n        this.createShips();\n\n        this.setShipsMovements();\n\n        this.timerText = this.add.text(gameDimensions.width/2, 20, ((this.timer-Date.now())/1000).toFixed(0), {fontSize: 30});\n        this.timerText.setOrigin(0.5);\n        this.scene.pause();\n        setTimeout(()=>{\n            this.scene.resume();\n        }, 1000);\n\n    }\n\n    update(){\n        const text = this.timer===Infinity ? \"Game over (F5 to restart)\" : ((this.timer-Date.now())/1000).toFixed(0);\n        this.timerText.setText(text);\n        if(this.timer<Date.now()) {\n            console.log(\"timeout\");\n            this.socket.emit(websocketEvents.START_TURN);\n        }\n        this.players.forEach(player => {\n            const target = this.bandWidth * (player.to+0.5);\n            if(\n                (player.ship.x >= target && player.ship.body.velocity.x > 0) ||\n                (player.ship.x <= target && player.ship.body.velocity.x < 0)\n            ) {\n                player.ship.setVelocityX(0);\n                player.ship.setAngularVelocity(0);\n                this.playersStopped++;\n            }\n        });\n        if(this.playersStopped >= this.players.length) {\n            setTimeout(()=>{\n                this.socket.emit(websocketEvents.READY_TURN);\n            }, 1000);\n        }\n    }\n\n    drawFinishLine(){\n        const graphics = this.add.graphics();\n        const numberOfSquares = 3;\n        const squareDim = this.bandWidth / numberOfSquares;\n        let x = this.bandWidth * this.pointsToWin;\n        let y = 0;\n        let currentColor = 0x0\n        while( y < gameDimensions.height){\n            for(let i = 0; i < numberOfSquares; i++){\n                graphics.fillStyle(currentColor, 1.0);\n                graphics.fillRect(x+squareDim*i, y, squareDim, squareDim);\n                currentColor = currentColor === 0x0 ? 0xCCCCCC : 0x0;\n            }\n\n            y += squareDim;\n        }\n    }\n\n    createShips(){\n        this.players.forEach((player, index) => {\n            player.ship = this.physics.add.sprite(this.bandWidth * (player.from+0.5), this.lineHeight * (index+0.5), \"ship\"+player.color);\n        });\n    }\n\n    setShipsMovements(){\n        this.players.forEach(player => {\n            player.ship.setVelocityX(Math.sign(player.to-player.from) * this.speed);\n            if(player.to < player.from){\n                player.ship.setAngularVelocity(this.angularSpeed);\n            } else if(player.to === player.from) this.playersStopped++;\n        });\n    }\n}"]}]}
{"remainingRequest":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/thread-loader/dist/cjs.js!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/babel-loader/lib/index.js!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/eslint-loader/index.js??ref--13-0!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/RankingScene.js","dependencies":[{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/RankingScene.js","mtime":1618815376557},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/cache-loader/dist/cjs.js","mtime":1618298483685},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/thread-loader/dist/cjs.js","mtime":1618298485037},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/babel-loader/lib/index.js","mtime":1618298483657},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/eslint-loader/index.js","mtime":1618298483941}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvbWVkaWEvamFjb3BvL1ZvbHVtZURhdGkvRG9jdW1lbnRpL3BhcGVyby50ay9jb3Ntb3MucGFwZXJvLm1lL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL21lZGlhL2phY29wby9Wb2x1bWVEYXRpL0RvY3VtZW50aS9wYXBlcm8udGsvY29zbW9zLnBhcGVyby5tZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgX2luaGVyaXRzIGZyb20gIi9tZWRpYS9qYWNvcG8vVm9sdW1lRGF0aS9Eb2N1bWVudGkvcGFwZXJvLnRrL2Nvc21vcy5wYXBlcm8ubWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICIvbWVkaWEvamFjb3BvL1ZvbHVtZURhdGkvRG9jdW1lbnRpL3BhcGVyby50ay9jb3Ntb3MucGFwZXJvLm1lL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVTdXBlciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci50by1maXhlZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5tYXRoLnNpZ24uanMiOwppbXBvcnQgUGhhc2VyIGZyb20gInBoYXNlciI7CmltcG9ydCB7IGdhbWVEaW1lbnNpb25zLCBzY2VuZUtleXMgfSBmcm9tICIuLi9jb25zdGFudHMvZ2FtZVNldHRpbmdzIjsKaW1wb3J0IHdlYnNvY2tldEV2ZW50cyBmcm9tICIuLi9jb25zdGFudHMvd2Vic29ja2V0RXZlbnRzIjsKaW1wb3J0IF8gZnJvbSAibG9kYXNoIjsKaW1wb3J0IHsgbG9hZEltYWdlcyB9IGZyb20gIi4vc2NlbmUiOwoKdmFyIFJhbmtpbmdTY2VuZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1BoYXNlciRTY2VuZSkgewogIF9pbmhlcml0cyhSYW5raW5nU2NlbmUsIF9QaGFzZXIkU2NlbmUpOwoKICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKFJhbmtpbmdTY2VuZSk7CgogIGZ1bmN0aW9uIFJhbmtpbmdTY2VuZShzb2NrZXQsIHBvaW50c1RvV2luKSB7CiAgICB2YXIgX3RoaXM7CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFJhbmtpbmdTY2VuZSk7CgogICAgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCB7CiAgICAgIGtleTogc2NlbmVLZXlzLnJhbmtpbmcsCiAgICAgIHBoeXNpY3M6IHsKICAgICAgICBkZWZhdWx0OiAiYXJjYWRlIiwKICAgICAgICBhcmNhZGU6IHsKICAgICAgICAgIGRlYnVnOiBmYWxzZSwKICAgICAgICAgIGdyYXZpdHk6IHsKICAgICAgICAgICAgeDogMCwKICAgICAgICAgICAgeTogMAogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfSk7CiAgICBfdGhpcy5zb2NrZXQgPSBzb2NrZXQ7CiAgICBfdGhpcy5wb2ludHNUb1dpbiA9IHBvaW50c1RvV2luOwogICAgX3RoaXMuc3BlZWQgPSAzMDA7CiAgICBfdGhpcy5hbmd1bGFyU3BlZWQgPSAxMjAwOwoKICAgIF90aGlzLnNvY2tldC5vbih3ZWJzb2NrZXRFdmVudHMuU1RBUlRfVFVSTiwgZnVuY3Rpb24gKGdhbWUpIHsKICAgICAgX3RoaXMuc2NlbmUuc3RhcnQoc2NlbmVLZXlzLmdhbWUsIF8uY2xvbmVEZWVwKGdhbWUpKTsKICAgIH0pOwoKICAgIHJldHVybiBfdGhpczsKICB9CgogIF9jcmVhdGVDbGFzcyhSYW5raW5nU2NlbmUsIFt7CiAgICBrZXk6ICJpbml0IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBpbml0KGRhdGEpIHsKICAgICAgY29uc29sZS5sb2coIlJhbmtpbmcgc2NlbmUgaW5pdCIsIF8uY2xvbmVEZWVwKGRhdGEpKTsKICAgICAgdGhpcy5wbGF5ZXJzID0gXy5jbG9uZURlZXAoZGF0YS5wbGF5ZXJzKTsKICAgICAgdGhpcy50aW1lciA9IGRhdGEudGltZXIgPyBkYXRhLnRpbWVyIDogSW5maW5pdHk7CiAgICAgIHRoaXMuYmFuZFdpZHRoID0gZ2FtZURpbWVuc2lvbnMud2lkdGggLyAodGhpcy5wb2ludHNUb1dpbiArIDEpOwogICAgICB0aGlzLmxpbmVIZWlnaHQgPSBnYW1lRGltZW5zaW9ucy5oZWlnaHQgLyB0aGlzLnBsYXllcnMubGVuZ3RoOwogICAgICB0aGlzLnBsYXllcnNTdG9wcGVkID0gMDsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJwcmVsb2FkIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBwcmVsb2FkKCkgewogICAgICBjb25zb2xlLmxvZygiUmFua2luZyBzY2VuZSBwcmVsb2FkIik7CiAgICAgIGxvYWRJbWFnZXModGhpcywgc2NlbmVLZXlzLnJhbmtpbmcpOwogICAgfQogIH0sIHsKICAgIGtleTogImNyZWF0ZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY3JlYXRlKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIGNvbnNvbGUubG9nKCJSYW5raW5nIHNjZW5lIGNyZWF0ZSIpOwogICAgICB0aGlzLmRyYXdGaW5pc2hMaW5lKCk7CiAgICAgIHRoaXMuY3JlYXRlU2hpcHMoKTsKICAgICAgdGhpcy5zZXRTaGlwc01vdmVtZW50cygpOwogICAgICB0aGlzLnRpbWVyVGV4dCA9IHRoaXMuYWRkLnRleHQoZ2FtZURpbWVuc2lvbnMud2lkdGggLyAyLCAyMCwgKCh0aGlzLnRpbWVyIC0gRGF0ZS5ub3coKSkgLyAxMDAwKS50b0ZpeGVkKDApLCB7CiAgICAgICAgZm9udFNpemU6IDMwCiAgICAgIH0pOwogICAgICB0aGlzLnRpbWVyVGV4dC5zZXRPcmlnaW4oMC41KTsKICAgICAgdGhpcy5zY2VuZS5wYXVzZSgpOwogICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpczIuc2NlbmUucmVzdW1lKCk7CiAgICAgIH0sIDEwMDApOwogICAgfQogIH0sIHsKICAgIGtleTogInVwZGF0ZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHZhciB0ZXh0ID0gdGhpcy50aW1lciA9PT0gSW5maW5pdHkgPyAiR2FtZSBvdmVyIChGNSB0byByZXN0YXJ0KSIgOiAoKHRoaXMudGltZXIgLSBEYXRlLm5vdygpKSAvIDEwMDApLnRvRml4ZWQoMCk7CiAgICAgIHRoaXMudGltZXJUZXh0LnNldFRleHQodGV4dCk7CgogICAgICBpZiAodGhpcy50aW1lciA8IERhdGUubm93KCkpIHsKICAgICAgICBjb25zb2xlLmxvZygidGltZW91dCIpOwogICAgICAgIHRoaXMuc29ja2V0LmVtaXQod2Vic29ja2V0RXZlbnRzLlNUQVJUX1RVUk4pOwogICAgICB9CgogICAgICB0aGlzLnBsYXllcnMuZm9yRWFjaChmdW5jdGlvbiAocGxheWVyKSB7CiAgICAgICAgdmFyIHRhcmdldCA9IF90aGlzMy5iYW5kV2lkdGggKiAocGxheWVyLnRvICsgMC41KTsKCiAgICAgICAgaWYgKHBsYXllci5zaGlwLnggPj0gdGFyZ2V0ICYmIHBsYXllci5zaGlwLmJvZHkudmVsb2NpdHkueCA+IDAgfHwgcGxheWVyLnNoaXAueCA8PSB0YXJnZXQgJiYgcGxheWVyLnNoaXAuYm9keS52ZWxvY2l0eS54IDwgMCkgewogICAgICAgICAgcGxheWVyLnNoaXAuc2V0VmVsb2NpdHlYKDApOwogICAgICAgICAgcGxheWVyLnNoaXAuc2V0QW5ndWxhclZlbG9jaXR5KDApOwogICAgICAgICAgX3RoaXMzLnBsYXllcnNTdG9wcGVkKys7CiAgICAgICAgfQogICAgICB9KTsKCiAgICAgIGlmICh0aGlzLnBsYXllcnNTdG9wcGVkID49IHRoaXMucGxheWVycy5sZW5ndGgpIHsKICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgIF90aGlzMy5zb2NrZXQuZW1pdCh3ZWJzb2NrZXRFdmVudHMuUkVBRFlfVFVSTik7CiAgICAgICAgfSwgMTAwMCk7CiAgICAgIH0KICAgIH0KICB9LCB7CiAgICBrZXk6ICJkcmF3RmluaXNoTGluZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZHJhd0ZpbmlzaExpbmUoKSB7CiAgICAgIHZhciBncmFwaGljcyA9IHRoaXMuYWRkLmdyYXBoaWNzKCk7CiAgICAgIHZhciBudW1iZXJPZlNxdWFyZXMgPSAzOwogICAgICB2YXIgc3F1YXJlRGltID0gdGhpcy5iYW5kV2lkdGggLyBudW1iZXJPZlNxdWFyZXM7CiAgICAgIHZhciB4ID0gdGhpcy5iYW5kV2lkdGggKiB0aGlzLnBvaW50c1RvV2luOwogICAgICB2YXIgeSA9IDA7CiAgICAgIHZhciBjdXJyZW50Q29sb3IgPSAweDA7CgogICAgICB3aGlsZSAoeSA8IGdhbWVEaW1lbnNpb25zLmhlaWdodCkgewogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbnVtYmVyT2ZTcXVhcmVzOyBpKyspIHsKICAgICAgICAgIGdyYXBoaWNzLmZpbGxTdHlsZShjdXJyZW50Q29sb3IsIDEuMCk7CiAgICAgICAgICBncmFwaGljcy5maWxsUmVjdCh4ICsgc3F1YXJlRGltICogaSwgeSwgc3F1YXJlRGltLCBzcXVhcmVEaW0pOwogICAgICAgICAgY3VycmVudENvbG9yID0gY3VycmVudENvbG9yID09PSAweDAgPyAweENDQ0NDQyA6IDB4MDsKICAgICAgICB9CgogICAgICAgIHkgKz0gc3F1YXJlRGltOwogICAgICB9CiAgICB9CiAgfSwgewogICAga2V5OiAiY3JlYXRlU2hpcHMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNyZWF0ZVNoaXBzKCkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIHRoaXMucGxheWVycy5mb3JFYWNoKGZ1bmN0aW9uIChwbGF5ZXIsIGluZGV4KSB7CiAgICAgICAgcGxheWVyLnNoaXAgPSBfdGhpczQucGh5c2ljcy5hZGQuc3ByaXRlKF90aGlzNC5iYW5kV2lkdGggKiAocGxheWVyLmZyb20gKyAwLjUpLCBfdGhpczQubGluZUhlaWdodCAqIChpbmRleCArIDAuNSksICJzaGlwIiArIHBsYXllci5jb2xvcik7CiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogInNldFNoaXBzTW92ZW1lbnRzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRTaGlwc01vdmVtZW50cygpIHsKICAgICAgdmFyIF90aGlzNSA9IHRoaXM7CgogICAgICB0aGlzLnBsYXllcnMuZm9yRWFjaChmdW5jdGlvbiAocGxheWVyKSB7CiAgICAgICAgcGxheWVyLnNoaXAuc2V0VmVsb2NpdHlYKE1hdGguc2lnbihwbGF5ZXIudG8gLSBwbGF5ZXIuZnJvbSkgKiBfdGhpczUuc3BlZWQpOwoKICAgICAgICBpZiAocGxheWVyLnRvIDwgcGxheWVyLmZyb20pIHsKICAgICAgICAgIHBsYXllci5zaGlwLnNldEFuZ3VsYXJWZWxvY2l0eShfdGhpczUuYW5ndWxhclNwZWVkKTsKICAgICAgICB9IGVsc2UgaWYgKHBsYXllci50byA9PT0gcGxheWVyLmZyb20pIF90aGlzNS5wbGF5ZXJzU3RvcHBlZCsrOwogICAgICB9KTsKICAgIH0KICB9XSk7CgogIHJldHVybiBSYW5raW5nU2NlbmU7Cn0oUGhhc2VyLlNjZW5lKTsKCmV4cG9ydCB7IFJhbmtpbmdTY2VuZSBhcyBkZWZhdWx0IH07"},{"version":3,"sources":["/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/RankingScene.js"],"names":["Phaser","gameDimensions","sceneKeys","websocketEvents","_","loadImages","RankingScene","socket","pointsToWin","key","ranking","physics","default","arcade","debug","gravity","x","y","speed","angularSpeed","on","START_TURN","game","scene","start","cloneDeep","data","console","log","players","timer","Infinity","bandWidth","width","lineHeight","height","length","playersStopped","drawFinishLine","createShips","setShipsMovements","timerText","add","text","Date","now","toFixed","fontSize","setOrigin","pause","setTimeout","resume","setText","emit","forEach","player","target","to","ship","body","velocity","setVelocityX","setAngularVelocity","READY_TURN","graphics","numberOfSquares","squareDim","currentColor","i","fillStyle","fillRect","index","sprite","from","color","Math","sign","Scene"],"mappings":"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","sourcesContent":["import Phaser from \"phaser\";\nimport {gameDimensions, sceneKeys} from \"../constants/gameSettings\";\nimport websocketEvents from \"../constants/websocketEvents\";\nimport _ from \"lodash\";\nimport {loadImages} from \"./scene\";\n\nexport default class RankingScene extends Phaser.Scene {\n\n    constructor(socket, pointsToWin) {\n        super({\n            key: sceneKeys.ranking,\n            physics: {\n                default: \"arcade\",\n                arcade: {\n                    debug: false,\n                    gravity: {x: 0, y: 0}\n                }\n            }\n        });\n\n        this.socket = socket;\n        this.pointsToWin = pointsToWin;\n\n        this.speed = 300;\n        this.angularSpeed = 1200;\n        this.socket.on(websocketEvents.START_TURN, game => {\n            this.scene.start(sceneKeys.game, _.cloneDeep(game));\n        });\n    }\n\n    init(data){\n        console.log(\"Ranking scene init\", _.cloneDeep(data))\n        this.players = _.cloneDeep(data.players);\n        this.timer = data.timer ? data.timer : Infinity;\n        this.bandWidth = gameDimensions.width / (this.pointsToWin+1);\n        this.lineHeight = gameDimensions.height / this.players.length;\n        this.playersStopped = 0;\n    }\n\n    preload(){\n        console.log(\"Ranking scene preload\")\n        loadImages(this, sceneKeys.ranking);\n    }\n\n    create(){\n        console.log(\"Ranking scene create\")\n        this.drawFinishLine();\n\n        this.createShips();\n\n        this.setShipsMovements();\n\n        this.timerText = this.add.text(gameDimensions.width/2, 20, ((this.timer-Date.now())/1000).toFixed(0), {fontSize: 30});\n        this.timerText.setOrigin(0.5);\n        this.scene.pause();\n        setTimeout(()=>{\n            this.scene.resume();\n        }, 1000);\n\n    }\n\n    update(){\n        const text = this.timer===Infinity ? \"Game over (F5 to restart)\" : ((this.timer-Date.now())/1000).toFixed(0);\n        this.timerText.setText(text);\n        if(this.timer<Date.now()) {\n            console.log(\"timeout\");\n            this.socket.emit(websocketEvents.START_TURN);\n        }\n        this.players.forEach(player => {\n            const target = this.bandWidth * (player.to+0.5);\n            if(\n                (player.ship.x >= target && player.ship.body.velocity.x > 0) ||\n                (player.ship.x <= target && player.ship.body.velocity.x < 0)\n            ) {\n                player.ship.setVelocityX(0);\n                player.ship.setAngularVelocity(0);\n                this.playersStopped++;\n            }\n        });\n        if(this.playersStopped >= this.players.length) {\n            setTimeout(()=>{\n                this.socket.emit(websocketEvents.READY_TURN);\n            }, 1000);\n        }\n    }\n\n    drawFinishLine(){\n        const graphics = this.add.graphics();\n        const numberOfSquares = 3;\n        const squareDim = this.bandWidth / numberOfSquares;\n        let x = this.bandWidth * this.pointsToWin;\n        let y = 0;\n        let currentColor = 0x0\n        while( y < gameDimensions.height){\n            for(let i = 0; i < numberOfSquares; i++){\n                graphics.fillStyle(currentColor, 1.0);\n                graphics.fillRect(x+squareDim*i, y, squareDim, squareDim);\n                currentColor = currentColor === 0x0 ? 0xCCCCCC : 0x0;\n            }\n\n            y += squareDim;\n        }\n    }\n\n    createShips(){\n        this.players.forEach((player, index) => {\n            player.ship = this.physics.add.sprite(this.bandWidth * (player.from+0.5), this.lineHeight * (index+0.5), \"ship\"+player.color);\n        });\n    }\n\n    setShipsMovements(){\n        this.players.forEach(player => {\n            player.ship.setVelocityX(Math.sign(player.to-player.from) * this.speed);\n            if(player.to < player.from){\n                player.ship.setAngularVelocity(this.angularSpeed);\n            } else if(player.to === player.from) this.playersStopped++;\n        });\n    }\n}"]}]}
{"remainingRequest":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/babel-loader/lib/index.js!/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/eslint-loader/index.js??ref--13-0!/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/src/scenes/LobbyScene.js","dependencies":[{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/src/scenes/LobbyScene.js","mtime":1616402886749},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/cache-loader/dist/cjs.js","mtime":1610909371557},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/babel-loader/lib/index.js","mtime":1610909371562},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/eslint-loader/index.js","mtime":1610909415268}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/src/scenes/LobbyScene.js"],"names":["Phaser","colors","sceneKeys","mitt","websocketEvents","window","LobbyScene","key","lobby","players","localId","color","admin","currentPlayer","settings","totalTurns","velocity","angularVelocity","reloadingVelocity","normalizers","Math","PI","bulletVelocity","ships","availableBullets","interval","handler","clearInterval","setInterval","x","y","angle","atan","bounce","Between","width","height","ship","physics","add","image","setVelocity","cos","sin","rotation","setCollideWorldBounds","setBounce","id","i","length","sys","game","canvas","forEach","value","index","load","require","createNewShip","on","LOBBY_MODIFIED","currentlyPlayingIds","player","push","previousPlayingIds","newShips","includes","findPlayerById","keySpace","input","keyboard","addKey","Input","Keyboard","KeyCodes","SPACE","bullet","time","delta","Array","isArray","body","getAngle","isDown","Scene"],"mappings":"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","sourcesContent":["import * as Phaser from \"phaser\";\nimport {colors, sceneKeys} from \"../constants/constants\";\nimport mitt from \"mitt\";\nimport websocketEvents from \"../constants/websocketEvents\";\n\nwindow.mitt = window.mitt || mitt();\nexport default class LobbyScene extends Phaser.Scene {\n\n    constructor() {\n        super({key: sceneKeys.lobby});\n        /*this.lobby = {\n            players: [],\n            currentPlayer: null,\n            settings: {\n                totalTurns: 5,\n                velocity: 2,\n                angularVelocity: 2,\n                reloadingVelocity: 2\n            }\n        }*/\n        this.lobby = {\n            players: [\n                {\n                    localId: 0,\n                    color: 0\n                },\n                {\n                    localId: 1,\n                    color: 1\n                }\n            ],\n            admin: 0,\n            currentPlayer: 1,\n            settings: {\n                totalTurns: 5,\n                velocity: 2,\n                angularVelocity: 2,\n                reloadingVelocity: 2\n            }\n        }\n        this.normalizers = {\n            velocity: 100,\n            angularVelocity: Math.PI/1200,\n            reloadingVelocity: 1/2000,\n            bulletVelocity: 200\n        }\n        this.ships = {};\n        this.availableBullets = 3;\n        let interval;\n        let handler = () => {\n            this.availableBullets = this.availableBullets>=3 ? this.availableBullets : this.availableBullets+1;\n            clearInterval(interval)\n            interval = setInterval(handler, 2000/this.lobby.settings.reloadingVelocity);\n        }\n        interval = setInterval(handler, 2000/this.lobby.settings.reloadingVelocity);\n    }\n\n    getAngle(x, y){\n        let angle;\n        if(x!==0) {\n            angle = Math.atan(y / x);\n            angle = x < 0 ? angle + Math.PI : angle;\n        } else if(y>=0) angle = Math.PI / 2;\n        else if(y<0) angle = -Math.PI / 2;\n        return angle;\n    }\n\n    createNewShip(color, bounce){\n        let x = Phaser.Math.Between(0, this.width);\n        let y = Phaser.Math.Between(0, this.height);\n        let ship = this.physics.add.image(x, y, \"ship\"+color);\n        let angle = Phaser.Math.Between(Math.PI/4, Math.PI*3/4);\n        ship.setVelocity(\n            this.lobby.settings.velocity*this.normalizers.velocity*Math.cos(angle),\n            this.lobby.settings.velocity*this.normalizers.velocity*Math.sin(angle)\n        );\n        ship.rotation = angle;\n        ship.setCollideWorldBounds(true);\n        if(bounce) ship.setBounce(1, 1);\n        return ship;\n    }\n\n    findPlayerById(id){\n        for(let i = 0; i < this.lobby.players.length; i++){\n            if(this.lobby.players[i].localId === id) return this.lobby.players[i];\n        }\n        return null;\n    }\n\n    preload(){\n\n        //load images\n        this.width = this.sys.game.canvas.width;\n        this.height = this.sys.game.canvas.height;\n        colors.forEach((value, index) => {\n            this.load.image(\"ship\"+index, require(\"@/assets/ship\"+index+\".png\"))\n        });\n        this.load.image(\"bullet\", \"@/assets/bullet.png\");\n\n    }\n\n    create(){\n        this.ships[\"0\"] = this.createNewShip(0, true)\n        this.ships[\"1\"] = this.createNewShip(1, false)\n\n        //Event lobby-modified\n        window.mitt.on(websocketEvents.LOBBY_MODIFIED, game => {\n            let currentlyPlayingIds = [];\n            game.players.forEach(player => {currentlyPlayingIds.push(player.localId)});\n\n            let previousPlayingIds = [];\n            this.lobby.players.forEach(player => {previousPlayingIds.push(player.localId)});\n\n            this.lobby = {...game};\n\n            let newShips = {};\n            currentlyPlayingIds.forEach(id => {\n                if(previousPlayingIds.includes(id)){\n                    newShips[id] = this.ships[id];\n                    newShips[id].setVelocity(\n                        this.lobby.settings.velocity* this.normalizers.velocity * Math.cos(newShips[id].rotation),\n                        this.lobby.settings.velocity* this.normalizers.velocity * Math.sin(newShips[id].rotation)\n                    );\n                } else {\n                    newShips[id] = this.createNewShip(this.findPlayerById(id).color, id!==game.currentPlayer);\n                }\n            });\n\n            this.ships = newShips;\n        });\n\n        //Setting up rotation and shooting\n        this.keySpace = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE);\n        this.input.keyboard.on(\"keyup-ENTER\", ()=>{\n            if(this.availableBullets>0){\n                let bullet = this.physics.add.image(\n                    this.ships[this.lobby.currentPlayer].x,\n                    this.ships[this.lobby.currentPlayer].y,\n                    \"bullet\"\n                );\n                bullet.rotation = this.ships[this.lobby.currentPlayer].rotation;\n                bullet.setVelocity(\n                    this.lobby.settings.velocity*this.normalizers.bulletVelocity*Math.cos(bullet.rotation),\n                    this.lobby.settings.velocity*this.normalizers.bulletVelocity*Math.sin(bullet.rotation)\n                );\n                this.availableBullets--;\n            }\n        });\n    }\n\n    update(time, delta){\n        if(Array.isArray(this.lobby.players) && this.lobby.players.length>0) {\n            this.lobby.players.forEach(player => {\n                if(player.localId !== this.lobby.currentPlayer) {\n                    let {x, y} = this.ships[player.localId].body.velocity;\n                    this.ships[player.localId].rotation = this.getAngle(x, y);\n                }\n            });\n        }\n        if(this.lobby.currentPlayer && this.keySpace.isDown){\n            this.ships[this.lobby.currentPlayer].rotation += this.lobby.settings.angularVelocity* this.normalizers.angularVelocity *delta;\n            this.ships[this.lobby.currentPlayer].setVelocity(\n                this.lobby.settings.velocity* this.normalizers.velocity * Math.cos(this.ships[this.lobby.currentPlayer].rotation),\n                this.lobby.settings.velocity* this.normalizers.velocity * Math.sin(this.ships[this.lobby.currentPlayer].rotation)\n            );\n        }\n    }\n}"]}]}
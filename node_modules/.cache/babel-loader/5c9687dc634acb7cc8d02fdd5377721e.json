{"remainingRequest":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/babel-loader/lib/index.js!/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/eslint-loader/index.js??ref--13-0!/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/src/scenes/LobbyScene.js","dependencies":[{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/src/scenes/LobbyScene.js","mtime":1616336782829},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/cache-loader/dist/cjs.js","mtime":1610909371557},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/babel-loader/lib/index.js","mtime":1610909371562},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/node_modules/eslint-loader/index.js","mtime":1610909415268}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvbWVkaWEvamFjb3BvL1ZvbHVtZURhdGkvRG9jdW1lbnRpL3BhcGVyby50ay9hc3Ryby5wYXBlcm8ubWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvbWVkaWEvamFjb3BvL1ZvbHVtZURhdGkvRG9jdW1lbnRpL3BhcGVyby50ay9hc3Ryby5wYXBlcm8ubWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICIvbWVkaWEvamFjb3BvL1ZvbHVtZURhdGkvRG9jdW1lbnRpL3BhcGVyby50ay9hc3Ryby5wYXBlcm8ubWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICIvbWVkaWEvamFjb3BvL1ZvbHVtZURhdGkvRG9jdW1lbnRpL3BhcGVyby50ay9hc3Ryby5wYXBlcm8ubWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZVN1cGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAqIGFzIFBoYXNlciBmcm9tICJwaGFzZXIiOwppbXBvcnQgeyBjb2xvcnMsIHNjZW5lS2V5cyB9IGZyb20gIi4uL2NvbnN0YW50cy9jb25zdGFudHMiOwppbXBvcnQgbWl0dCBmcm9tICJtaXR0IjsKaW1wb3J0IHdlYnNvY2tldEV2ZW50cyBmcm9tICIuLi9jb25zdGFudHMvd2Vic29ja2V0RXZlbnRzIjsKCnZhciBMb2JieVNjZW5lID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfUGhhc2VyJFNjZW5lKSB7CiAgX2luaGVyaXRzKExvYmJ5U2NlbmUsIF9QaGFzZXIkU2NlbmUpOwoKICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKExvYmJ5U2NlbmUpOwoKICBmdW5jdGlvbiBMb2JieVNjZW5lKHBsYXllcnMsIGN1cnJlbnRQbGF5ZXIpIHsKICAgIHZhciBfdGhpczsKCiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTG9iYnlTY2VuZSk7CgogICAgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCB7CiAgICAgIGtleTogc2NlbmVLZXlzLmxvYmJ5CiAgICB9KTsKICAgIF90aGlzLnNoaXBWZWxvY2l0eSA9IDIwMDsKICAgIF90aGlzLnBsYXllcnMgPSB7fTsKICAgIHBsYXllcnMuZm9yRWFjaChmdW5jdGlvbiAocGxheWVyKSB7CiAgICAgIF90aGlzLnBsYXllcnNbcGxheWVyLmxvY2FsSWQgKyAiIl0gPSBwbGF5ZXI7CiAgICB9KTsKICAgIF90aGlzLmN1cnJlbnRQbGF5ZXIgPSBjdXJyZW50UGxheWVyOwogICAgX3RoaXMuZW1pdHRlciA9IG1pdHQoKTsKICAgIHJldHVybiBfdGhpczsKICB9CgogIF9jcmVhdGVDbGFzcyhMb2JieVNjZW5lLCBbewogICAga2V5OiAiZ2V0QW5nbGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldEFuZ2xlKHgsIHkpIHsKICAgICAgdmFyIGFuZ2xlOwoKICAgICAgaWYgKHggIT09IDApIHsKICAgICAgICBhbmdsZSA9IE1hdGguYXRhbih5IC8geCk7CiAgICAgICAgYW5nbGUgPSB4IDwgMCA/IGFuZ2xlICsgTWF0aC5QSSA6IGFuZ2xlOwogICAgICB9IGVsc2UgaWYgKHkgPj0gMCkgYW5nbGUgPSBNYXRoLlBJIC8gMjtlbHNlIGlmICh5IDwgMCkgYW5nbGUgPSAtTWF0aC5QSSAvIDI7CgogICAgICByZXR1cm4gYW5nbGU7CiAgICB9CiAgfSwgewogICAga2V5OiAiY3JlYXRlTmV3U2hpcCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY3JlYXRlTmV3U2hpcChjb2xvcikgewogICAgICB2YXIgeCA9IFBoYXNlci5NYXRoLkJldHdlZW4oMCwgdGhpcy53aWR0aCk7CiAgICAgIHZhciB5ID0gUGhhc2VyLk1hdGguQmV0d2VlbigwLCB0aGlzLmhlaWdodCk7CiAgICAgIHZhciBzaGlwID0gdGhpcy5waHlzaWNzLmFkZC5pbWFnZSh4LCB5LCAic2hpcCIgKyBjb2xvcik7CiAgICAgIHZhciBhbmdsZSA9IFBoYXNlci5NYXRoLkJldHdlZW4oTWF0aC5QSSAvIDQsIE1hdGguUEkgKiAzIC8gNCk7CiAgICAgIHNoaXAuc2V0VmVsb2NpdHkodGhpcy5zaGlwVmVsb2NpdHkgKiBNYXRoLmNvcyhhbmdsZSksIHRoaXMuc2hpcFZlbG9jaXR5ICogTWF0aC5zaW4oYW5nbGUpKTsKICAgICAgc2hpcC5yb3RhdGlvbiA9IGFuZ2xlOwogICAgICBzaGlwLnNldENvbGxpZGVXb3JsZEJvdW5kcyh0cnVlKTsKICAgICAgc2hpcC5zZXRCb3VuY2UoMSwgMSk7CiAgICB9CiAgfSwgewogICAga2V5OiAicHJlbG9hZCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcHJlbG9hZCgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0aGlzLndpZHRoID0gdGhpcy5zeXMuZ2FtZS5jYW52YXMud2lkdGg7CiAgICAgIHRoaXMuaGVpZ2h0ID0gdGhpcy5zeXMuZ2FtZS5jYW52YXMuaGVpZ2h0OwogICAgICBjb2xvcnMuZm9yRWFjaChmdW5jdGlvbiAodmFsdWUsIGluZGV4KSB7CiAgICAgICAgX3RoaXMyLmxvYWQuaW1hZ2UoInNoaXAiICsgaW5kZXgsIHJlcXVpcmUoIkAvYXNzZXRzL3NoaXAiICsgaW5kZXggKyAiLnBuZyIpKTsKICAgICAgfSk7CiAgICAgIHRoaXMubG9hZC5pbWFnZSgncGFydGljbGUnLCAnaHR0cHM6Ly9sYWJzLnBoYXNlci5pby9hc3NldHMvcGFydGljbGVzL3JlZC5wbmcnKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJjcmVhdGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNyZWF0ZSgpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB0aGlzLnBsYXllcnMuZm9yRWFjaChmdW5jdGlvbiAocGxheWVyKSB7CiAgICAgICAgcGxheWVyLnNoaXAgPSBfdGhpczMuY3JlYXRlTmV3U2hpcChwbGF5ZXIuY29sb3IpOwogICAgICAgIC8qaWYocGxheWVyLmxvY2FsSWQ9PT10aGlzLmN1cnJlbnRQbGF5ZXIpIHsKICAgICAgICAgICAgbGV0IHBhcnRpY2xlID0gdGhpcy5hZGQucGFydGljbGVzKCJwYXJ0aWNsZSIpOwogICAgICAgICAgICBsZXQgZW1pdHRlciA9IHBhcnRpY2xlLmNyZWF0ZUVtaXR0ZXIoewogICAgICAgICAgICAgICAgc3BlZWQ6IDEwMCwKICAgICAgICAgICAgICAgIHNjYWxlOiB7c3RhcnQ6IDAuMywgZW5kOiAwfSwKICAgICAgICAgICAgICAgIGJsZW5kTW9kZTogIkFERCIKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGVtaXR0ZXIuc3RhcnRGb2xsb3codGhpcy5zaGlwc1twbGF5ZXIubG9jYWxJZCsiIl0pOwogICAgICAgIH0qLwogICAgICB9KTsKICAgICAgdGhpcy5lbWl0dGVyLm9uKHdlYnNvY2tldEV2ZW50cy5MT0JCWV9NT0RJRklFRCwgZnVuY3Rpb24gKGdhbWUpIHsKICAgICAgICBfdGhpczMuY3VycmVudFBsYXllciA9IGdhbWUuY3VycmVudFBsYXllcjsKICAgICAgICBfdGhpczMuc2hpcFZlbG9jaXR5ID0gZ2FtZS5zZXR0aW5ncy52ZWxvY2l0eTsKICAgICAgICBnYW1lLnBsYXllcnMuZm9yRWFjaChmdW5jdGlvbiAobmV3UGxheWVyKSB7CiAgICAgICAgICBpZiAoX3RoaXMzLnBsYXllcnNbbmV3UGxheWVyLmxvY2FsSWQgKyAiIl0uY29sb3IgIT09IG51bGwgJiYgX3RoaXMzLnBsYXllcnNbbmV3UGxheWVyLmxvY2FsSWQgKyAiIl0uY29sb3IgIT09IG5ld1BsYXllci5jb2xvcikgewogICAgICAgICAgICBfdGhpczMucGxheWVyc1tuZXdQbGF5ZXIubG9jYWxJZCArICIiXS5jb2xvciA9IG5ld1BsYXllci5jb2xvcjsKCiAgICAgICAgICAgIF90aGlzMy5wbGF5ZXJzW25ld1BsYXllci5sb2NhbElkICsgIiJdLnNoaXAuc2V0VGV4dHVyZSgic2hpcCIgKyBuZXdQbGF5ZXIuY29sb3IpOwogICAgICAgICAgfSBlbHNlIGlmIChfdGhpczMucGxheWVyc1tuZXdQbGF5ZXIubG9jYWxJZCArICIiXS5jb2xvciA9PT0gbnVsbCkgewogICAgICAgICAgICBfdGhpczMucGxheWVyc1tuZXdQbGF5ZXIubG9jYWxJZCArICIiXSA9IG5ld1BsYXllcjsKICAgICAgICAgICAgX3RoaXMzLnBsYXllcnNbbmV3UGxheWVyLmxvY2FsSWQgKyAiIl0uc2hpcCA9IF90aGlzMy5jcmVhdGVOZXdTaGlwKG5ld1BsYXllci5jb2xvcik7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogInVwZGF0ZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlKCkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIHRoaXMucGxheWVycy5mb3JFYWNoKGZ1bmN0aW9uIChwbGF5ZXIpIHsKICAgICAgICB2YXIgX3BsYXllciRzaGlwJGJvZHkkdmVsID0gcGxheWVyLnNoaXAuYm9keS52ZWxvY2l0eSwKICAgICAgICAgICAgeCA9IF9wbGF5ZXIkc2hpcCRib2R5JHZlbC54LAogICAgICAgICAgICB5ID0gX3BsYXllciRzaGlwJGJvZHkkdmVsLnk7CiAgICAgICAgcGxheWVyLnNoaXAucm90YXRpb24gPSBfdGhpczQuZ2V0QW5nbGUoeCwgeSk7CiAgICAgICAgcGxheWVyLnNoaXAuc2V0VmVsb2NpdHkoX3RoaXM0LnNoaXBWZWxvY2l0eSAqIE1hdGguY29zKHBsYXllci5zaGlwLnJvdGF0aW9uKSwgX3RoaXM0LnNoaXBWZWxvY2l0eSAqIE1hdGguc2luKHBsYXllci5zaGlwLnJvdGF0aW9uKSk7CiAgICAgIH0pOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIExvYmJ5U2NlbmU7Cn0oUGhhc2VyLlNjZW5lKTsKCmV4cG9ydCB7IExvYmJ5U2NlbmUgYXMgZGVmYXVsdCB9Ow=="},{"version":3,"sources":["/media/jacopo/VolumeDati/Documenti/papero.tk/astro.papero.me/src/scenes/LobbyScene.js"],"names":["Phaser","colors","sceneKeys","mitt","websocketEvents","LobbyScene","players","currentPlayer","key","lobby","shipVelocity","forEach","player","localId","emitter","x","y","angle","Math","atan","PI","color","Between","width","height","ship","physics","add","image","setVelocity","cos","sin","rotation","setCollideWorldBounds","setBounce","sys","game","canvas","value","index","load","require","createNewShip","on","LOBBY_MODIFIED","settings","velocity","newPlayer","setTexture","body","getAngle","Scene"],"mappings":"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","sourcesContent":["import * as Phaser from \"phaser\";\nimport {colors, sceneKeys} from \"../constants/constants\";\nimport mitt from \"mitt\";\nimport websocketEvents from \"../constants/websocketEvents\";\n\nexport default class LobbyScene extends Phaser.Scene {\n\n    constructor(players, currentPlayer) {\n        super({key: sceneKeys.lobby});\n        this.shipVelocity = 200;\n        this.players = {};\n        players.forEach(player => {\n            this.players[player.localId+\"\"] = player;\n        })\n        this.currentPlayer = currentPlayer;\n        this.emitter = mitt();\n    }\n\n    getAngle(x, y){\n        let angle;\n        if(x!==0) {\n            angle = Math.atan(y / x);\n            angle = x < 0 ? angle + Math.PI : angle;\n        } else if(y>=0) angle = Math.PI / 2;\n        else if(y<0) angle = -Math.PI / 2;\n        return angle;\n    }\n\n    createNewShip(color){\n        let x = Phaser.Math.Between(0, this.width);\n        let y = Phaser.Math.Between(0, this.height);\n        let ship = this.physics.add.image(x, y, \"ship\"+color);\n        let angle = Phaser.Math.Between(Math.PI/4, Math.PI*3/4);\n        ship.setVelocity(this.shipVelocity*Math.cos(angle), this.shipVelocity*Math.sin(angle));\n        ship.rotation = angle;\n        ship.setCollideWorldBounds(true);\n        ship.setBounce(1, 1);\n    }\n\n    preload(){\n        this.width = this.sys.game.canvas.width;\n        this.height = this.sys.game.canvas.height;\n\n        colors.forEach((value, index) => {\n            this.load.image(\"ship\"+index, require(\"@/assets/ship\"+index+\".png\"))\n        });\n        this.load.image('particle', 'https://labs.phaser.io/assets/particles/red.png');\n    }\n\n    create(){\n        this.players.forEach(player => {\n            player.ship = this.createNewShip(player.color);\n            /*if(player.localId===this.currentPlayer) {\n                let particle = this.add.particles(\"particle\");\n                let emitter = particle.createEmitter({\n                    speed: 100,\n                    scale: {start: 0.3, end: 0},\n                    blendMode: \"ADD\"\n                });\n                emitter.startFollow(this.ships[player.localId+\"\"]);\n            }*/\n        });\n\n        this.emitter.on(websocketEvents.LOBBY_MODIFIED, game => {\n            this.currentPlayer = game.currentPlayer;\n            this.shipVelocity = game.settings.velocity;\n            game.players.forEach(newPlayer => {\n                if(this.players[newPlayer.localId+\"\"].color!==null &&\n                    this.players[newPlayer.localId+\"\"].color !== newPlayer.color){\n\n                    this.players[newPlayer.localId+\"\"].color = newPlayer.color;\n                    this.players[newPlayer.localId+\"\"].ship.setTexture(\"ship\"+newPlayer.color);\n\n                } else if(this.players[newPlayer.localId+\"\"].color===null){\n                    this.players[newPlayer.localId+\"\"] = newPlayer;\n                    this.players[newPlayer.localId+\"\"].ship = this.createNewShip(newPlayer.color);\n                }\n            });\n        });\n    }\n\n    update(){\n        this.players.forEach(player =>{\n            let {x, y} = player.ship.body.velocity;\n            player.ship.rotation = this.getAngle(x, y);\n            player.ship.setVelocity(\n                this.shipVelocity*Math.cos(player.ship.rotation),\n                this.shipVelocity*Math.sin(player.ship.rotation));\n        })\n    }\n}"]}]}
{"remainingRequest":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/babel-loader/lib/index.js!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/eslint-loader/index.js??ref--13-0!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/GameScene.js","dependencies":[{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/GameScene.js","mtime":1617614971722},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/cache-loader/dist/cjs.js","mtime":1616495189815},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/babel-loader/lib/index.js","mtime":1616495189787},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/eslint-loader/index.js","mtime":1616495190059}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/GameScene.js"],"names":["Phaser","websocketEvents","gameDimensions","normalizers","sceneKeys","detectTouchScreen","GameScene","socket","game","key","settings","currentPlayer","maxVelocityLittle","velocity","accelerationLittle","respawnTime","frictionAir","players","forEach","player","localId","availableBullets","lastTimestamp","updateFps","touchScreen","reloadInterval","setInterval","Math","min","data","emit","RELOAD","reload","reloadingVelocity","load","image","createGroups","createShips","on","UPDATE_SHIP","updateShip","SHOOT","createBullet","CHANGE_STATE","updateState","rotationKey","input","keyboard","addKey","Input","Keyboard","KeyCodes","SPACE","accelerateLittleKey","ENTER","state","shoot","physics","world","bullet","gameObject","destroy","addPointer","pointer","x","width","rotating","accelerating","updateShipInterval","Number","parseInt","ship","angle","parseFloat","toFixed","y","time","now","delta","isDown","rotate","moveLittle","velocityFromAngle","velocityMagnitude","setVelocity","max","Object","values","bulletsLoaded","children","iterate","index","topLeft","getTopLeft","bottomLeft","getBottomLeft","centerLeft","cos","rotation","height","sin","autonomyTime","setAngularVelocity","ships","add","group","bullets","create","color","collideWorldBounds","quantity","visible","active","setAngle","setCollideWorldBounds","overlap","onBulletCollision","collider","currentShip","killedBy","bulletVelocity","deltaTime","Date","timestamp","position","shotBy","body","onWorldBounds","getFirstAlive","setActive","setVisible","deltaTheta","angularVelocity","previousMag","PI","killAndHide","remove","setTexture","setTimeout","countActive","getFirstDead","clearInterval","e","console","error","Scene"],"mappings":"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","sourcesContent":["import * as Phaser from \"phaser\";\nimport websocketEvents from \"../constants/websocketEvents\";\nimport {gameDimensions, normalizers, sceneKeys} from \"../constants/gameSettings\";\nimport {detectTouchScreen} from \"../constants/constants\";\n\n\nexport default class GameScene extends Phaser.Scene {\n\n    constructor(socket, game) {\n        super({key: sceneKeys.game});\n\n        this.socket = socket;\n        this.settings = game.settings;\n        this.currentPlayer = game.currentPlayer;\n        this.settings.maxVelocityLittle = game.settings.velocity+0.5;\n        this.settings.accelerationLittle = 0.5;\n        this.settings.respawnTime = 5000;\n        this.settings.frictionAir = 0.1;\n        this.players = {};\n        game.players.forEach(player => {\n            this.players[player.localId] = player;\n            this.players[player.localId].availableBullets = 3;\n            this.players[player.localId].lastTimestamp = 0;\n        });\n\n        this.updateFps = 15;\n        this.touchScreen = detectTouchScreen();\n\n        this.reloadInterval = setInterval(() => {\n            const availableBullets = Math.min(3, this.players[this.currentPlayer].availableBullets + 1);\n            const data = {\n                localId: this.currentPlayer,\n                availableBullets\n            };\n            this.socket.emit(websocketEvents.RELOAD, data);\n            this.reload(data);\n        }, 1/(this.settings.reloadingVelocity * normalizers.reloadingVelocity));\n    }\n\n    preload(){\n\n        this.load.image(\"ship0\", \"./ships/ship0.png\");\n        this.load.image(\"ship1\", \"./ships/ship1.png\");\n        this.load.image(\"ship2\", \"./ships/ship2.png\");\n        this.load.image(\"ship3\", \"./ships/ship3.png\");\n        this.load.image(\"little0\", \"./little.png\");\n        this.load.image(\"little1\", \"./little.png\");\n        this.load.image(\"little2\", \"./little.png\");\n        this.load.image(\"little3\", \"./little.png\");\n        this.load.image(\"bullet\", \"./bullet.png\");\n        this.load.image(\"bullet-loaded\", \"./bullet-loaded.png\");\n\n    }\n\n    create(){\n        this.createGroups();\n        this.createShips();\n\n        this.socket.on(websocketEvents.UPDATE_SHIP, data => this.updateShip(data));\n        this.socket.on(websocketEvents.SHOOT, data => this.createBullet(data));\n        this.socket.on(websocketEvents.CHANGE_STATE, data => this.updateState(data));\n        this.socket.on(websocketEvents.RELOAD, data => this.reload(data));\n\n        this.rotationKey = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE);\n        this.accelerateLittleKey = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.ENTER);\n        this.input.keyboard.on(\"keydown-ENTER\", ()=>{\n            if(this.players[this.currentPlayer].state>=2) this.shoot();\n        });\n        this.physics.world.on(\"worldbounds\", (bullet)=>{bullet.gameObject.destroy()});\n\n        if(this.touchScreen){\n            this.input.addPointer(1);\n            this.input.on(\"pointerup\", (pointer) => {\n                if(pointer.x<gameDimensions.width/2){\n                    this.rotating = false;\n                } else {\n                    this.accelerating = false;\n                }\n            });\n            this.input.on(\"pointerdown\", (pointer) => {\n                if(pointer.x<gameDimensions.width/2){\n                    this.rotating = true;\n                } else {\n                    if(this.players[this.currentPlayer].state>=2) this.shoot();\n                    else {\n                        this.accelerating = true;\n                    }\n                }\n            });\n        }\n\n\n        this.updateShipInterval = setInterval(()=>{\n            this.socket.emit(websocketEvents.UPDATE_SHIP, [\n                this.currentPlayer,\n                Number.parseInt(this.players[this.currentPlayer].ship.angle),\n                [\n                    Number.parseFloat(this.players[this.currentPlayer].ship.x.toFixed(2)),\n                    Number.parseFloat(this.players[this.currentPlayer].ship.y.toFixed(2))\n                ],\n                this.time.now\n            ]);\n        }, 1000/this.updateFps);\n    }\n\n    update(time, delta){\n        if(this.rotationKey.isDown || this.rotating) this.rotate(delta);\n        if(this.accelerateLittleKey.isDown || this.accelerating) this.moveLittle(delta);\n        const {x, y} = this.physics.velocityFromAngle(\n            this.players[this.currentPlayer].ship.angle,\n            this.players[this.currentPlayer].ship.velocityMagnitude\n        );\n        this.players[this.currentPlayer].ship.setVelocity(x, y);\n        if (this.players[this.currentPlayer].state === 1) {\n            this.players[this.currentPlayer].ship.velocityMagnitude = Math.max(\n                0, this.players[this.currentPlayer].ship.velocityMagnitude - this.settings.frictionAir * delta\n            );\n        }\n        Object.values(this.players).forEach(player => {\n            player.bulletsLoaded.children.iterate((bullet, index)=>{\n                const topLeft = player.ship.getTopLeft();\n                const bottomLeft = player.ship.getBottomLeft();\n                const centerLeft = {\n                    x: (topLeft.x + bottomLeft.x) /2,\n                    y: (topLeft.y + bottomLeft.y) /2\n                }\n                switch (index){\n                    case 0:\n                        bullet.x = bottomLeft.x - (player.ship.width/4)*Math.cos(player.ship.rotation);\n                        bullet.y = bottomLeft.y - (player.ship.height/4)*Math.sin(player.ship.rotation);\n                        break;\n                    case 1:\n                        bullet.x = topLeft.x - (player.ship.width/4)*Math.cos(player.ship.rotation);\n                        bullet.y = topLeft.y - (player.ship.height/4)*Math.sin(player.ship.rotation);\n                        break;\n                    case 2:\n                        bullet.x = centerLeft.x - (player.ship.width/4)*Math.cos(player.ship.rotation);\n                        bullet.y = centerLeft.y - (player.ship.height/4)*Math.sin(player.ship.rotation);\n                        break;\n                }\n            });\n           if(player.localId!==this.currentPlayer){\n               player.ship.autonomyTime -= delta;\n               if(player.ship.autonomyTime<0) {\n                   player.ship.setVelocity(0);\n                   player.ship.setAngularVelocity(0);\n               }\n           }\n        });\n        //if(this.ships.countActive() <= 1) console.log(\"game over\") //TODO: SETUP END OF THE TURN\n    }\n\n\n\n\n    //=============================================================================\n    //Creating things\n    createGroups(){\n        this.ships = this.physics.add.group();\n        this.bullets = this.physics.add.group();\n    }\n\n    createShips(){\n        let index = 0;\n        Object.values(this.players).forEach(player => {\n            player.ship = this.ships.create(\n                (index<2 ? 0.05 : 0.95) * gameDimensions.width,\n                ( index%2 === 0 ? 0.05 : 0.95 ) * gameDimensions.height,\n                \"ship\"+player.color\n            );\n\n            player.bulletsLoaded = this.physics.add.group({\n                collideWorldBounds: false,\n                key: \"bullet-loaded\",\n                quantity: 3,\n                visible: true,\n                active: true\n            });\n\n            player.ship.localId = player.localId;\n            player.ship.setAngle(-45  * ( index < 2 ? 1 : 3) * ( ( index % 2 ) * 2 - 1 ));\n            player.ship.velocityMagnitude = this.settings.velocity*normalizers.velocity;\n            player.ship.autonomyTime = 0;\n\n            if(player.localId===this.currentPlayer){\n                player.ship.setCollideWorldBounds(true);\n                this.physics.add.overlap(player.ship, this.bullets, (ship, bullet) => {\n                    this.onBulletCollision(ship, bullet);\n                });\n                this.physics.add.collider(player.ship, this.ships, (currentShip, ship)=>{\n                    if(this.players[this.currentPlayer].state === 1 && this.players[ship.localId].state >= 2){\n                        this.killedBy = ship.localId;\n                        const data = {\n                            localId: this.currentPlayer,\n                            state: 0\n                        };\n                        this.socket.emit(websocketEvents.CHANGE_STATE, data);\n                        this.updateState(data);\n                    }\n                });\n            }\n\n            index++;\n        });\n\n        this.physics.add.collider(this.ships, this.ships);\n    }\n\n    createBullet(data){\n        const {x, y} = this.physics.velocityFromAngle(data.angle, this.settings.bulletVelocity*normalizers.bulletVelocity);\n        const deltaTime = Date.now()-data.timestamp;\n        const bullet = this.bullets.create(data.position.x+deltaTime*x/1000, data.position.y+deltaTime*y/1000, \"bullet\");\n        bullet.angle = data.angle;\n        bullet.setVelocity(x, y);\n        bullet.shotBy = data.localId;\n        bullet.setCollideWorldBounds(true);\n        bullet.body.onWorldBounds = true;\n        this.players[data.localId].availableBullets--;\n        this.players[data.localId].bulletsLoaded.getFirstAlive().setActive(false).setVisible(false);\n    }\n\n\n\n\n\n\n    //=============================================================================\n    //Others do things via the websocket\n    updateShip(data){\n        const player = this.players[data[0]];\n        const deltaTime = (data[3]-player.lastTimestamp)/1000;\n        if(deltaTime<=0) return;\n\n        let deltaTheta = data[1] - Number.parseInt(player.ship.angle);\n\n        if(deltaTheta < -10) deltaTheta += 360;\n        else if(deltaTheta < 0) deltaTheta = 0;\n        const angularVelocity = deltaTheta / deltaTime;\n        player.ship.setAngularVelocity(angularVelocity);\n\n        player.ship.setVelocity( ( data[2][0]-player.ship.x ) / deltaTime, ( data[2][1]-player.ship.y ) / deltaTime );\n\n        player.lastTimestamp = data[3];\n        player.ship.autonomyTime = deltaTime*1000;\n    }\n\n\n\n    //=============================================================================\n    //Current players does things\n    rotate(delta){\n        this.players[this.currentPlayer].ship.angle += delta * this.settings.angularVelocity * normalizers.angularVelocity;\n    }\n\n    moveLittle(delta){\n        if(this.players[this.currentPlayer].state === 1){\n            const ship = this.players[this.currentPlayer].ship;\n            const previousMag = ship.velocityMagnitude;\n            if(previousMag < this.settings.maxVelocityLittle * normalizers.velocity){\n                this.players[this.currentPlayer].ship.velocityMagnitude += delta*this.settings.accelerationLittle;\n            } else {\n                this.players[this.currentPlayer].ship.velocityMagnitude = this.settings.maxVelocityLittle * normalizers.velocity;\n            }\n        }\n    }\n\n    shoot(){\n        if(this.players[this.currentPlayer].availableBullets>0){\n            const ship = this.players[this.currentPlayer].ship;\n            const angle = ship.angle;\n            const data = {\n                position: {\n                    x: ship.x + ship.width*Math.cos(angle * Math.PI / 180),\n                    y: ship.y + ship.width*Math.sin(angle * Math.PI / 180)\n                },\n                angle: angle,\n                localId: this.currentPlayer,\n                timestamp: Date.now()\n            };\n            this.socket.emit(websocketEvents.SHOOT, data);\n            this.createBullet(data);\n        }\n    }\n\n\n    updateState(data){\n        this.players[data.localId].state = data.state;\n        const ship = this.players[data.localId].ship;\n        switch (data.state) {\n            case 0:\n                this.ships.killAndHide(ship);\n                this.ships.remove(ship);\n                break;\n            case 1:\n                ship.setTexture(\"little\" + this.players[data.localId].color);\n                if(data.localId === this.currentPlayer) {\n                    setTimeout(() => {\n                        if (this.players[data.localId].state === 1) {\n                            const data = {\n                                localId: this.currentPlayer,\n                                state: 2\n                            };\n                            this.updateState(data);\n                            this.socket.emit(websocketEvents.CHANGE_STATE, data);\n                        }\n                    }, this.settings.respawnTime);\n                }\n                while(this.players[data.localId].bulletsLoaded.countActive()>0) {\n                    this.players[data.localId].bulletsLoaded.getFirstAlive().setActive(false).setVisible(false);\n                }\n                break;\n            case 2:\n                ship.velocityMagnitude = this.settings.velocity * normalizers.velocity;\n                ship.setTexture(\"ship\" + this.players[data.localId].color);\n                while(this.players[data.localId].bulletsLoaded.countActive()<3) {\n                    this.players[data.localId].bulletsLoaded.getFirstDead().setActive(true).setVisible(true);\n                }\n                break;\n        }\n    }\n\n    onBulletCollision(ship, bullet){\n        bullet.destroy();\n        const state = this.players[ship.localId].state-1;\n        const data = {\n            localId: ship.localId,\n            state\n        };\n        if(state === 0) {\n            data.killedBy = bullet.shotBy;\n            clearInterval(this.reloadInterval);\n            clearInterval(this.updateShipInterval);\n        }\n        this.socket.emit(websocketEvents.CHANGE_STATE, data);\n        this.updateState(data);\n    }\n\n\n    reload(data){\n        this.players[data.localId].availableBullets = data.availableBullets;\n        try{\n            while(this.players[data.localId].bulletsLoaded.countActive() < data.availableBullets){\n                this.players[data.localId].bulletsLoaded.getFirstDead().setActive(true).setVisible(true);\n            }\n        } catch (e) {\n            console.error(e);\n        }\n    }\n}"]}]}
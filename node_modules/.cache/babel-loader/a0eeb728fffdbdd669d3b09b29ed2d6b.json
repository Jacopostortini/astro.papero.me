{"remainingRequest":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/thread-loader/dist/cjs.js!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/babel-loader/lib/index.js!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/eslint-loader/index.js??ref--13-0!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/LobbyScene.js","dependencies":[{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/LobbyScene.js","mtime":1617101277379},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/cache-loader/dist/cjs.js","mtime":1616495189815},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/thread-loader/dist/cjs.js","mtime":1616495190967},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/babel-loader/lib/index.js","mtime":1616495189787},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/eslint-loader/index.js","mtime":1616495190059}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/LobbyScene.js"],"names":["Phaser","websocketEvents","defaultSettings","normalizers","sceneKeys","LobbyScene","socket","key","lobby","players","currentPlayer","settings","ships","availableBullets","interval","handler","clearInterval","setInterval","reloadingVelocity","x","y","angle","Math","atan","PI","color","Between","width","height","ship","physics","add","image","setVelocity","velocity","cos","sin","rotation","setCollideWorldBounds","setBounce","id","i","length","localId","sys","game","canvas","load","onresize","parent","document","getElementById","dim","min","offsetWidth","offsetHeight","scale","resize","world","setBounds","window","addEventListener","events","on","removeEventListener","LOBBY_MODIFIED","currentlyPlayingIds","forEach","player","push","previousPlayingIds","newShips","includes","setTexture","findPlayerById","createNewShip","keySpace","input","keyboard","addKey","Input","Keyboard","KeyCodes","SPACE","bullet","bulletVelocity","time","delta","Array","isArray","body","getAngle","isDown","angularVelocity","Scene"],"mappings":"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","sourcesContent":["import Phaser from \"phaser\";\nimport websocketEvents from \"../constants/websocketEvents\";\nimport {defaultSettings, normalizers, sceneKeys} from \"../constants/gameSettings\";\n\nexport default class LobbyScene extends Phaser.Scene {\n\n    constructor(socket) {\n        super({key: sceneKeys.lobby});\n        this.socket = socket;\n        this.lobby = {\n            players: [],\n            currentPlayer: null,\n            settings: defaultSettings\n        }\n\n        this.ships = {};\n        this.availableBullets = 3;\n        let interval;\n        const handler = () => {\n            this.availableBullets = this.availableBullets>=3 ? this.availableBullets : this.availableBullets+1;\n            clearInterval(interval)\n            interval = setInterval(handler, 2000/this.lobby.settings.reloadingVelocity);\n        }\n        interval = setInterval(handler, 2000/this.lobby.settings.reloadingVelocity);\n    }\n\n    getAngle(x, y){\n        let angle;\n        if(x!==0) {\n            angle = Math.atan(y / x);\n            angle = x < 0 ? angle + Math.PI : angle;\n        } else if(y>=0) angle = Math.PI / 2;\n        else if(y<0) angle = -Math.PI / 2;\n        return angle;\n    }\n\n    createNewShip(color){\n        let x = Phaser.Math.Between(0, this.width);\n        let y = Phaser.Math.Between(0, this.height);\n        let ship = this.physics.add.image(x, y, \"ship\"+color);\n        let angle = Phaser.Math.Between(Math.PI/4, Math.PI*3/4);\n        ship.setVelocity(\n            this.lobby.settings.velocity*normalizers.velocity*Math.cos(angle),\n            this.lobby.settings.velocity*normalizers.velocity*Math.sin(angle)\n        );\n        ship.rotation = angle;\n        ship.setCollideWorldBounds(true);\n        ship.setBounce(1, 1);\n        return ship;\n    }\n\n    findPlayerById(id){\n        for(let i = 0; i < this.lobby.players.length; i++){\n            if(this.lobby.players[i].localId === id) return this.lobby.players[i];\n        }\n        return null;\n    }\n\n    preload(){\n\n        //load images\n        this.width = this.sys.game.canvas.width;\n        this.height = this.sys.game.canvas.height;\n\n        this.load.image(\"ship0\", \"./ships/ship0.png\");\n        this.load.image(\"ship1\", \"./ships/ship1.png\");\n        this.load.image(\"ship2\", \"./ships/ship2.png\");\n        this.load.image(\"ship3\", \"./ships/ship3.png\");\n        this.load.image(\"bullet\", \"./bullet.png\");\n\n        let onresize = () => {\n            let parent = document.getElementById(\"players-wrapper\");\n            let dim = Math.min(parent.offsetWidth, parent.offsetHeight);\n            this.game.scale.resize(dim, dim);\n            this.physics.world.setBounds(0, 0, dim, dim);\n        };\n        window.addEventListener(\"resize\", onresize);\n        this.events.on(\"destroy\", ()=>{\n            window.removeEventListener(\"resize\", onresize);\n        });\n\n    }\n\n    create(){\n        //Event lobby-modified\n        this.socket.on(websocketEvents.LOBBY_MODIFIED, game => {\n            let currentlyPlayingIds = [];\n            game.players.forEach(player => {currentlyPlayingIds.push(player.localId)});\n\n            let previousPlayingIds = [];\n            this.lobby.players.forEach(player => {previousPlayingIds.push(player.localId)});\n\n            this.lobby = {...game};\n\n            let newShips = {};\n            currentlyPlayingIds.forEach(id => {\n                if(previousPlayingIds.includes(id)){\n                    newShips[id] = this.ships[id];\n                    newShips[id].setVelocity(\n                        this.lobby.settings.velocity* normalizers.velocity * Math.cos(newShips[id].rotation),\n                        this.lobby.settings.velocity* normalizers.velocity * Math.sin(newShips[id].rotation)\n                    );\n                    newShips[id].setTexture(\"ship\"+this.findPlayerById(id).color);\n                } else {\n                    newShips[id] = this.createNewShip(this.findPlayerById(id).color);\n                }\n            });\n\n            this.ships = newShips;\n        });\n\n        //Setting up rotation and shooting\n        this.keySpace = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE);\n        this.input.keyboard.on(\"keyup-ENTER\", ()=>{\n            if(this.availableBullets>0){\n                let bullet = this.physics.add.image(\n                    this.ships[this.lobby.currentPlayer].x,\n                    this.ships[this.lobby.currentPlayer].y,\n                    \"bullet\"\n                );\n                bullet.rotation = this.ships[this.lobby.currentPlayer].rotation;\n                bullet.setVelocity(\n                    this.lobby.settings.bulletVelocity*normalizers.bulletVelocity*Math.cos(bullet.rotation),\n                    this.lobby.settings.bulletVelocity*normalizers.bulletVelocity*Math.sin(bullet.rotation)\n                );\n                this.availableBullets--;\n            }\n        });\n    }\n\n    update(time, delta){\n        if(Array.isArray(this.lobby.players) && this.lobby.players.length>0) {\n            this.lobby.players.forEach(player => {\n                if(player.localId !== this.lobby.currentPlayer) {\n                    let {x, y} = this.ships[player.localId].body.velocity;\n                    this.ships[player.localId].rotation = this.getAngle(x, y);\n                }\n            });\n        }\n        if(this.lobby.currentPlayer!==null && this.keySpace.isDown){\n            this.ships[this.lobby.currentPlayer].rotation += this.lobby.settings.angularVelocity* normalizers.angularVelocity *delta;\n            this.ships[this.lobby.currentPlayer].setVelocity(\n                this.lobby.settings.velocity* normalizers.velocity * Math.cos(this.ships[this.lobby.currentPlayer].rotation),\n                this.lobby.settings.velocity* normalizers.velocity * Math.sin(this.ships[this.lobby.currentPlayer].rotation)\n            );\n        }\n    }\n}"]}]}
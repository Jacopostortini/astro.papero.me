{"remainingRequest":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/thread-loader/dist/cjs.js!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/babel-loader/lib/index.js!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/eslint-loader/index.js??ref--13-0!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/scenes/LobbyScene.js","dependencies":[{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/scenes/LobbyScene.js","mtime":1616495191075},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/cache-loader/dist/cjs.js","mtime":1616495189815},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/thread-loader/dist/cjs.js","mtime":1616495190967},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/babel-loader/lib/index.js","mtime":1616495189787},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/eslint-loader/index.js","mtime":1616495190059}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/scenes/LobbyScene.js"],"names":["Phaser","colors","sceneKeys","websocketEvents","LobbyScene","socket","key","lobby","players","currentPlayer","settings","totalTurns","velocity","angularVelocity","reloadingVelocity","bulletVelocity","normalizers","Math","PI","ships","availableBullets","interval","handler","clearInterval","setInterval","x","y","angle","atan","color","bounce","Between","width","height","ship","physics","add","image","setVelocity","cos","sin","rotation","setCollideWorldBounds","setBounce","id","i","length","localId","sys","game","canvas","forEach","value","index","load","require","textures","addBase64","window","addEventListener","parent","document","getElementById","dim","min","offsetWidth","offsetHeight","scale","resize","world","setBounds","on","LOBBY_MODIFIED","currentlyPlayingIds","player","push","previousPlayingIds","newShips","includes","setTexture","findPlayerById","createNewShip","keySpace","input","keyboard","addKey","Input","Keyboard","KeyCodes","SPACE","bullet","time","delta","Array","isArray","body","getAngle","isDown","Scene"],"mappings":"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","sourcesContent":["import * as Phaser from \"phaser\";\nimport {colors, sceneKeys} from \"../constants/constants\";\nimport websocketEvents from \"../constants/websocketEvents\";\n\nexport default class LobbyScene extends Phaser.Scene {\n\n    constructor(socket) {\n        super({key: sceneKeys.lobby});\n        this.socket = socket;\n        this.lobby = {\n            players: [],\n            currentPlayer: null,\n            settings: {\n                totalTurns: 5,\n                velocity: 2,\n                angularVelocity: 2,\n                reloadingVelocity: 2,\n                bulletVelocity: 2\n            }\n        }\n/*        this.lobby = {\n            players: [\n                {\n                    localId: 0,\n                    color: 0\n                },\n                {\n                    localId: 1,\n                    color: 1\n                }\n            ],\n            admin: 0,\n            currentPlayer: 1,\n            settings: {\n                totalTurns: 5,\n                velocity: 2,\n                angularVelocity: 2,\n                reloadingVelocity: 2,\n                bulletVelocity: 2\n            }\n        }*/\n        this.normalizers = {\n            velocity: 100,\n            angularVelocity: Math.PI/1200,\n            reloadingVelocity: 1/2000,\n            bulletVelocity: 200\n        }\n        this.ships = {};\n        this.availableBullets = 3;\n        let interval;\n        let handler = () => {\n            this.availableBullets = this.availableBullets>=3 ? this.availableBullets : this.availableBullets+1;\n            clearInterval(interval)\n            interval = setInterval(handler, 2000/this.lobby.settings.reloadingVelocity);\n        }\n        interval = setInterval(handler, 2000/this.lobby.settings.reloadingVelocity);\n    }\n\n    getAngle(x, y){\n        let angle;\n        if(x!==0) {\n            angle = Math.atan(y / x);\n            angle = x < 0 ? angle + Math.PI : angle;\n        } else if(y>=0) angle = Math.PI / 2;\n        else if(y<0) angle = -Math.PI / 2;\n        return angle;\n    }\n\n    createNewShip(color, bounce){\n        let x = Phaser.Math.Between(0, this.width);\n        let y = Phaser.Math.Between(0, this.height);\n        let ship = this.physics.add.image(x, y, \"ship\"+color);\n        let angle = Phaser.Math.Between(Math.PI/4, Math.PI*3/4);\n        ship.setVelocity(\n            this.lobby.settings.velocity*this.normalizers.velocity*Math.cos(angle),\n            this.lobby.settings.velocity*this.normalizers.velocity*Math.sin(angle)\n        );\n        ship.rotation = angle;\n        ship.setCollideWorldBounds(true);\n        if(bounce) ship.setBounce(1, 1);\n        return ship;\n    }\n\n    findPlayerById(id){\n        for(let i = 0; i < this.lobby.players.length; i++){\n            if(this.lobby.players[i].localId === id) return this.lobby.players[i];\n        }\n        return null;\n    }\n\n    preload(){\n\n        //load images\n        this.width = this.sys.game.canvas.width;\n        this.height = this.sys.game.canvas.height;\n        colors.forEach((value, index) => {\n            this.load.image(\"ship\"+index, require(\"@/assets/ships/ship\"+index+\".png\"));\n        });\n        this.textures.addBase64(\"bullet\", require(\"@/assets/bullet.png\"));\n\n        window.addEventListener('resize', () => {\n            let parent = document.getElementById(\"players-wrapper\");\n            let dim = Math.min(parent.offsetWidth, parent.offsetHeight);\n            this.game.scale.resize(dim, dim);\n            this.physics.world.setBounds(0, 0, dim, dim);\n        });\n\n    }\n\n    create(){\n        //this.ships[\"0\"] = this.createNewShip(0, true)\n        //this.ships[\"1\"] = this.createNewShip(1, false)\n\n        //Event lobby-modified\n        this.socket.on(websocketEvents.LOBBY_MODIFIED, game => {\n            let currentlyPlayingIds = [];\n            game.players.forEach(player => {currentlyPlayingIds.push(player.localId)});\n\n            let previousPlayingIds = [];\n            this.lobby.players.forEach(player => {previousPlayingIds.push(player.localId)});\n\n            this.lobby = {...game};\n\n            let newShips = {};\n            currentlyPlayingIds.forEach(id => {\n                if(previousPlayingIds.includes(id)){\n                    newShips[id] = this.ships[id];\n                    newShips[id].setVelocity(\n                        this.lobby.settings.velocity* this.normalizers.velocity * Math.cos(newShips[id].rotation),\n                        this.lobby.settings.velocity* this.normalizers.velocity * Math.sin(newShips[id].rotation)\n                    );\n                    newShips[id].setTexture(\"ship\"+this.findPlayerById(id).color);\n                } else {\n                    newShips[id] = this.createNewShip(this.findPlayerById(id).color, id!==game.currentPlayer);\n                }\n            });\n\n            this.ships = newShips;\n        });\n\n        //Setting up rotation and shooting\n        this.keySpace = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE);\n        this.input.keyboard.on(\"keyup-ENTER\", ()=>{\n            if(this.availableBullets>0){\n                let bullet = this.physics.add.image(\n                    this.ships[this.lobby.currentPlayer].x,\n                    this.ships[this.lobby.currentPlayer].y,\n                    \"bullet\"\n                );\n                bullet.rotation = this.ships[this.lobby.currentPlayer].rotation;\n                bullet.setVelocity(\n                    this.lobby.settings.bulletVelocity*this.normalizers.bulletVelocity*Math.cos(bullet.rotation),\n                    this.lobby.settings.bulletVelocity*this.normalizers.bulletVelocity*Math.sin(bullet.rotation)\n                );\n                this.availableBullets--;\n            }\n        });\n    }\n\n    update(time, delta){\n        if(Array.isArray(this.lobby.players) && this.lobby.players.length>0) {\n            this.lobby.players.forEach(player => {\n                if(player.localId !== this.lobby.currentPlayer) {\n                    let {x, y} = this.ships[player.localId].body.velocity;\n                    this.ships[player.localId].rotation = this.getAngle(x, y);\n                }\n            });\n        }\n        if(this.lobby.currentPlayer!==null && this.keySpace.isDown){\n            this.ships[this.lobby.currentPlayer].rotation += this.lobby.settings.angularVelocity* this.normalizers.angularVelocity *delta;\n            this.ships[this.lobby.currentPlayer].setVelocity(\n                this.lobby.settings.velocity* this.normalizers.velocity * Math.cos(this.ships[this.lobby.currentPlayer].rotation),\n                this.lobby.settings.velocity* this.normalizers.velocity * Math.sin(this.ships[this.lobby.currentPlayer].rotation)\n            );\n        }\n    }\n}"]}]}
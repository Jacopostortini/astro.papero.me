{"remainingRequest":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/thread-loader/dist/cjs.js!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/babel-loader/lib/index.js!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/eslint-loader/index.js??ref--13-0!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/RankingScene.js","dependencies":[{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/RankingScene.js","mtime":1617825687952},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/cache-loader/dist/cjs.js","mtime":1616495189815},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/thread-loader/dist/cjs.js","mtime":1616495190967},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/babel-loader/lib/index.js","mtime":1616495189787},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/eslint-loader/index.js","mtime":1616495190059}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvbWVkaWEvamFjb3BvL1ZvbHVtZURhdGkvRG9jdW1lbnRpL3BhcGVyby50ay9jb3Ntb3MucGFwZXJvLm1lL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL21lZGlhL2phY29wby9Wb2x1bWVEYXRpL0RvY3VtZW50aS9wYXBlcm8udGsvY29zbW9zLnBhcGVyby5tZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgX2Fzc2VydFRoaXNJbml0aWFsaXplZCBmcm9tICIvbWVkaWEvamFjb3BvL1ZvbHVtZURhdGkvRG9jdW1lbnRpL3BhcGVyby50ay9jb3Ntb3MucGFwZXJvLm1lL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQiOwppbXBvcnQgX2luaGVyaXRzIGZyb20gIi9tZWRpYS9qYWNvcG8vVm9sdW1lRGF0aS9Eb2N1bWVudGkvcGFwZXJvLnRrL2Nvc21vcy5wYXBlcm8ubWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICIvbWVkaWEvamFjb3BvL1ZvbHVtZURhdGkvRG9jdW1lbnRpL3BhcGVyby50ay9jb3Ntb3MucGFwZXJvLm1lL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVTdXBlciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5tYXRoLnNpZ24uanMiOwppbXBvcnQgUGhhc2VyIGZyb20gInBoYXNlciI7CmltcG9ydCB7IGdhbWVEaW1lbnNpb25zLCBzY2VuZUtleXMgfSBmcm9tICIuLi9jb25zdGFudHMvZ2FtZVNldHRpbmdzIjsKaW1wb3J0IHdlYnNvY2tldEV2ZW50cyBmcm9tICIuLi9jb25zdGFudHMvd2Vic29ja2V0RXZlbnRzIjsKaW1wb3J0IF8gZnJvbSAibG9kYXNoIjsKCnZhciBSYW5raW5nU2NlbmUgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9QaGFzZXIkU2NlbmUpIHsKICBfaW5oZXJpdHMoUmFua2luZ1NjZW5lLCBfUGhhc2VyJFNjZW5lKTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihSYW5raW5nU2NlbmUpOwoKICBmdW5jdGlvbiBSYW5raW5nU2NlbmUoc29ja2V0LCBwb2ludHNUb1dpbikgewogICAgdmFyIF90aGlzOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBSYW5raW5nU2NlbmUpOwoKICAgIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgewogICAgICBrZXk6IHNjZW5lS2V5cy5yYW5raW5nCiAgICB9KTsKICAgIF90aGlzLnNvY2tldCA9IHNvY2tldDsKICAgIF90aGlzLnBvaW50c1RvV2luID0gcG9pbnRzVG9XaW47CiAgICBfdGhpcy5zcGVlZCA9IDMwMDsKICAgIF90aGlzLmFuZ3VsYXJTcGVlZCA9IDEyMDA7CiAgICBjb25zb2xlLmxvZygicmFua2luZyBzY2VuZSBjb25zdHJ1Y3RlZDogIiwgXy5jbG9uZURlZXAoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpKTsKICAgIHJldHVybiBfdGhpczsKICB9CgogIF9jcmVhdGVDbGFzcyhSYW5raW5nU2NlbmUsIFt7CiAgICBrZXk6ICJpbml0IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBpbml0KGRhdGEpIHsKICAgICAgdGhpcy5wbGF5ZXJzID0gXy5jbG9uZURlZXAoZGF0YS5wbGF5ZXJzKTsKICAgICAgdGhpcy50aW1lciA9IGRhdGEudGltZXI7CiAgICAgIHRoaXMuYmFuZFdpZHRoID0gZ2FtZURpbWVuc2lvbnMud2lkdGggLyAodGhpcy5wb2ludHNUb1dpbiArIDEpOwogICAgICB0aGlzLmxpbmVIZWlnaHQgPSBnYW1lRGltZW5zaW9ucy5oZWlnaHQgLyB0aGlzLnBsYXllcnMubGVuZ3RoOwogICAgICB0aGlzLnBsYXllcnNTdG9wcGVkID0gMDsKICAgICAgY29uc29sZS5sb2coInJhbmtpbmcgc2NlbmUgaW5pdCwgc2NlbmU6IiwgXy5jbG9uZURlZXAodGhpcykpOwogICAgfQogIH0sIHsKICAgIGtleTogInByZWxvYWQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHByZWxvYWQoKSB7CiAgICAgIHRoaXMubG9hZC5pbWFnZSgic2hpcDAiLCAiLi9zaGlwcy9zaGlwMC5wbmciKTsKICAgICAgdGhpcy5sb2FkLmltYWdlKCJzaGlwMSIsICIuL3NoaXBzL3NoaXAxLnBuZyIpOwogICAgICB0aGlzLmxvYWQuaW1hZ2UoInNoaXAyIiwgIi4vc2hpcHMvc2hpcDIucG5nIik7CiAgICAgIHRoaXMubG9hZC5pbWFnZSgic2hpcDMiLCAiLi9zaGlwcy9zaGlwMy5wbmciKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJjcmVhdGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNyZWF0ZSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICAvKnRoaXMuc29ja2V0Lm9uKHdlYnNvY2tldEV2ZW50cy5TVEFSVF9UVVJOLCBnYW1lID0+IHsKICAgICAgICAgIGNvbnNvbGUubG9nKCJzdGFydCB0dXJuIGV2ZW50Iiwgey4uLmdhbWV9KTsKICAgICAgICAgIHRoaXMuc2NlbmUuc3RhcnQoc2NlbmVLZXlzLmdhbWUsIHsuLi5nYW1lfSk7CiAgICAgIH0pOyovCiAgICAgIHRoaXMuZHJhd0ZpbmlzaExpbmUoKTsKICAgICAgdGhpcy5jcmVhdGVTaGlwcygpOwogICAgICB0aGlzLnNldFNoaXBzTW92ZW1lbnRzKCk7CiAgICAgIHRoaXMuc2NlbmUucGF1c2UoKTsKICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMyLnNjZW5lLnJlc3VtZSgpOwogICAgICB9LCAxMDAwKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJ1cGRhdGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICAvKmlmKHRoaXMudGltZXI+RGF0ZS5ub3coKSkgewogICAgICAgICAgdGhpcy5zb2NrZXQuZW1pdCh3ZWJzb2NrZXRFdmVudHMuU1RBUlRfVFVSTik7CiAgICAgICAgICB0aGlzLnNjZW5lLnBhdXNlKCk7CiAgICAgIH0qLwogICAgICB0aGlzLnBsYXllcnMuZm9yRWFjaChmdW5jdGlvbiAocGxheWVyKSB7CiAgICAgICAgdmFyIHRhcmdldCA9IF90aGlzMy5iYW5kV2lkdGggKiAocGxheWVyLnRvICsgMC41KTsKCiAgICAgICAgaWYgKHBsYXllci5zaGlwLnggPj0gdGFyZ2V0ICYmIHBsYXllci5zaGlwLmJvZHkudmVsb2NpdHkueCA+IDAgfHwgcGxheWVyLnNoaXAueCA8PSB0YXJnZXQgJiYgcGxheWVyLnNoaXAuYm9keS52ZWxvY2l0eS54IDwgMCkgewogICAgICAgICAgcGxheWVyLnNoaXAuc2V0VmVsb2NpdHlYKDApOwogICAgICAgICAgcGxheWVyLnNoaXAuc2V0QW5ndWxhclZlbG9jaXR5KDApOwogICAgICAgICAgX3RoaXMzLnBsYXllcnNTdG9wcGVkKys7CiAgICAgICAgfQogICAgICB9KTsKCiAgICAgIGlmICh0aGlzLnBsYXllcnNTdG9wcGVkID49IHRoaXMucGxheWVycy5sZW5ndGgpIHsKICAgICAgICB0aGlzLnNjZW5lLnBhdXNlKCk7CiAgICAgICAgY29uc29sZS5sb2coInJlYWR5IGVtaXR0ZWQiKTsKICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgIF90aGlzMy5zb2NrZXQuZW1pdCh3ZWJzb2NrZXRFdmVudHMuUkVBRFlfVFVSTik7CiAgICAgICAgfSwgMTAwMCk7CiAgICAgIH0KICAgIH0KICB9LCB7CiAgICBrZXk6ICJkcmF3RmluaXNoTGluZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZHJhd0ZpbmlzaExpbmUoKSB7CiAgICAgIHZhciBncmFwaGljcyA9IHRoaXMuYWRkLmdyYXBoaWNzKCk7CiAgICAgIHZhciBudW1iZXJPZlNxdWFyZXMgPSAzOwogICAgICB2YXIgc3F1YXJlRGltID0gdGhpcy5iYW5kV2lkdGggLyBudW1iZXJPZlNxdWFyZXM7CiAgICAgIHZhciB4ID0gdGhpcy5iYW5kV2lkdGggKiB0aGlzLnBvaW50c1RvV2luOwogICAgICB2YXIgeSA9IDA7CiAgICAgIHZhciBjdXJyZW50Q29sb3IgPSAweDA7CgogICAgICB3aGlsZSAoeSA8IGdhbWVEaW1lbnNpb25zLmhlaWdodCkgewogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbnVtYmVyT2ZTcXVhcmVzOyBpKyspIHsKICAgICAgICAgIGdyYXBoaWNzLmZpbGxTdHlsZShjdXJyZW50Q29sb3IsIDEuMCk7CiAgICAgICAgICBncmFwaGljcy5maWxsUmVjdCh4ICsgc3F1YXJlRGltICogaSwgeSwgc3F1YXJlRGltLCBzcXVhcmVEaW0pOwogICAgICAgICAgY3VycmVudENvbG9yID0gY3VycmVudENvbG9yID09PSAweDAgPyAweENDQ0NDQyA6IDB4MDsKICAgICAgICB9CgogICAgICAgIHkgKz0gc3F1YXJlRGltOwogICAgICB9CiAgICB9CiAgfSwgewogICAga2V5OiAiY3JlYXRlU2hpcHMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNyZWF0ZVNoaXBzKCkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIHRoaXMucGxheWVycy5mb3JFYWNoKGZ1bmN0aW9uIChwbGF5ZXIsIGluZGV4KSB7CiAgICAgICAgcGxheWVyLnNoaXAgPSBfdGhpczQucGh5c2ljcy5hZGQuc3ByaXRlKF90aGlzNC5iYW5kV2lkdGggKiAocGxheWVyLmZyb20gKyAwLjUpLCBfdGhpczQubGluZUhlaWdodCAqIChpbmRleCArIDAuNSksICJzaGlwIiArIHBsYXllci5jb2xvcik7CiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogInNldFNoaXBzTW92ZW1lbnRzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRTaGlwc01vdmVtZW50cygpIHsKICAgICAgdmFyIF90aGlzNSA9IHRoaXM7CgogICAgICB0aGlzLnBsYXllcnMuZm9yRWFjaChmdW5jdGlvbiAocGxheWVyKSB7CiAgICAgICAgcGxheWVyLnNoaXAuc2V0VmVsb2NpdHlYKE1hdGguc2lnbihwbGF5ZXIudG8gLSBwbGF5ZXIuZnJvbSkgKiBfdGhpczUuc3BlZWQpOwoKICAgICAgICBpZiAocGxheWVyLnRvIDwgcGxheWVyLmZyb20pIHsKICAgICAgICAgIHBsYXllci5zaGlwLnNldEFuZ3VsYXJWZWxvY2l0eShfdGhpczUuYW5ndWxhclNwZWVkKTsKICAgICAgICB9IGVsc2UgaWYgKHBsYXllci50byA9PT0gcGxheWVyLmZyb20pIF90aGlzNS5wbGF5ZXJzU3RvcHBlZCsrOwogICAgICB9KTsKICAgIH0KICB9XSk7CgogIHJldHVybiBSYW5raW5nU2NlbmU7Cn0oUGhhc2VyLlNjZW5lKTsKCmV4cG9ydCB7IFJhbmtpbmdTY2VuZSBhcyBkZWZhdWx0IH07"},{"version":3,"sources":["/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/RankingScene.js"],"names":["Phaser","gameDimensions","sceneKeys","websocketEvents","_","RankingScene","socket","pointsToWin","key","ranking","speed","angularSpeed","console","log","cloneDeep","data","players","timer","bandWidth","width","lineHeight","height","length","playersStopped","load","image","drawFinishLine","createShips","setShipsMovements","scene","pause","setTimeout","resume","forEach","player","target","to","ship","x","body","velocity","setVelocityX","setAngularVelocity","emit","READY_TURN","graphics","add","numberOfSquares","squareDim","y","currentColor","i","fillStyle","fillRect","index","physics","sprite","from","color","Math","sign","Scene"],"mappings":"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","sourcesContent":["import Phaser from \"phaser\";\nimport {gameDimensions, sceneKeys} from \"../constants/gameSettings\";\nimport websocketEvents from \"../constants/websocketEvents\";\nimport _ from \"lodash\";\n\nexport default class RankingScene extends Phaser.Scene {\n\n    constructor(socket, pointsToWin) {\n        super({key: sceneKeys.ranking});\n\n        this.socket = socket;\n        this.pointsToWin = pointsToWin;\n\n        this.speed = 300;\n        this.angularSpeed = 1200;\n        console.log(\"ranking scene constructed: \", _.cloneDeep(this));\n    }\n\n    init(data){\n        this.players = _.cloneDeep(data.players);\n        this.timer = data.timer;\n        this.bandWidth = gameDimensions.width / (this.pointsToWin+1);\n        this.lineHeight = gameDimensions.height / this.players.length;\n        this.playersStopped = 0;\n\n        console.log(\"ranking scene init, scene:\", _.cloneDeep(this));\n    }\n\n    preload(){\n        this.load.image(\"ship0\", \"./ships/ship0.png\");\n        this.load.image(\"ship1\", \"./ships/ship1.png\");\n        this.load.image(\"ship2\", \"./ships/ship2.png\");\n        this.load.image(\"ship3\", \"./ships/ship3.png\");\n    }\n\n    create(){\n        /*this.socket.on(websocketEvents.START_TURN, game => {\n            console.log(\"start turn event\", {...game});\n            this.scene.start(sceneKeys.game, {...game});\n        });*/\n\n        this.drawFinishLine();\n\n        this.createShips();\n\n        this.setShipsMovements();\n        this.scene.pause();\n        setTimeout(()=>{\n            this.scene.resume();\n        }, 1000);\n\n    }\n\n    update(){\n        /*if(this.timer>Date.now()) {\n            this.socket.emit(websocketEvents.START_TURN);\n            this.scene.pause();\n        }*/\n        this.players.forEach(player => {\n            const target = this.bandWidth * (player.to+0.5);\n            if(\n                (player.ship.x >= target && player.ship.body.velocity.x > 0) ||\n                (player.ship.x <= target && player.ship.body.velocity.x < 0)\n            ) {\n                player.ship.setVelocityX(0);\n                player.ship.setAngularVelocity(0);\n                this.playersStopped++;\n            }\n        });\n        if(this.playersStopped >= this.players.length) {\n            this.scene.pause();\n            console.log(\"ready emitted\");\n            setTimeout(()=>{\n                this.socket.emit(websocketEvents.READY_TURN);\n            }, 1000);\n        }\n    }\n\n    drawFinishLine(){\n        const graphics = this.add.graphics();\n        const numberOfSquares = 3;\n        const squareDim = this.bandWidth / numberOfSquares;\n        let x = this.bandWidth * this.pointsToWin;\n        let y = 0;\n        let currentColor = 0x0\n        while( y < gameDimensions.height){\n            for(let i = 0; i < numberOfSquares; i++){\n                graphics.fillStyle(currentColor, 1.0);\n                graphics.fillRect(x+squareDim*i, y, squareDim, squareDim);\n                currentColor = currentColor === 0x0 ? 0xCCCCCC : 0x0;\n            }\n\n            y += squareDim;\n        }\n    }\n\n    createShips(){\n        this.players.forEach((player, index) => {\n            player.ship = this.physics.add.sprite(this.bandWidth * (player.from+0.5), this.lineHeight * (index+0.5), \"ship\"+player.color);\n        });\n    }\n\n    setShipsMovements(){\n        this.players.forEach(player => {\n            player.ship.setVelocityX(Math.sign(player.to-player.from) * this.speed);\n            if(player.to < player.from){\n                player.ship.setAngularVelocity(this.angularSpeed);\n            } else if(player.to === player.from) this.playersStopped++;\n        });\n    }\n}"]}]}
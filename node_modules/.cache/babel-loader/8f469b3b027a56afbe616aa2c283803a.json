{"remainingRequest":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/thread-loader/dist/cjs.js!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/babel-loader/lib/index.js!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/eslint-loader/index.js??ref--13-0!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/RankingScene.js","dependencies":[{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/RankingScene.js","mtime":1617875660258},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/cache-loader/dist/cjs.js","mtime":1616495189815},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/thread-loader/dist/cjs.js","mtime":1616495190967},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/babel-loader/lib/index.js","mtime":1616495189787},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/eslint-loader/index.js","mtime":1616495190059}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvbWVkaWEvamFjb3BvL1ZvbHVtZURhdGkvRG9jdW1lbnRpL3BhcGVyby50ay9jb3Ntb3MucGFwZXJvLm1lL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL21lZGlhL2phY29wby9Wb2x1bWVEYXRpL0RvY3VtZW50aS9wYXBlcm8udGsvY29zbW9zLnBhcGVyby5tZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgX2luaGVyaXRzIGZyb20gIi9tZWRpYS9qYWNvcG8vVm9sdW1lRGF0aS9Eb2N1bWVudGkvcGFwZXJvLnRrL2Nvc21vcy5wYXBlcm8ubWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICIvbWVkaWEvamFjb3BvL1ZvbHVtZURhdGkvRG9jdW1lbnRpL3BhcGVyby50ay9jb3Ntb3MucGFwZXJvLm1lL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVTdXBlciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5tYXRoLnNpZ24uanMiOwppbXBvcnQgUGhhc2VyIGZyb20gInBoYXNlciI7CmltcG9ydCB7IGdhbWVEaW1lbnNpb25zLCBzY2VuZUtleXMgfSBmcm9tICIuLi9jb25zdGFudHMvZ2FtZVNldHRpbmdzIjsKaW1wb3J0IHdlYnNvY2tldEV2ZW50cyBmcm9tICIuLi9jb25zdGFudHMvd2Vic29ja2V0RXZlbnRzIjsKaW1wb3J0IF8gZnJvbSAibG9kYXNoIjsKCnZhciBSYW5raW5nU2NlbmUgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9QaGFzZXIkU2NlbmUpIHsKICBfaW5oZXJpdHMoUmFua2luZ1NjZW5lLCBfUGhhc2VyJFNjZW5lKTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihSYW5raW5nU2NlbmUpOwoKICBmdW5jdGlvbiBSYW5raW5nU2NlbmUoc29ja2V0LCBwb2ludHNUb1dpbikgewogICAgdmFyIF90aGlzOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBSYW5raW5nU2NlbmUpOwoKICAgIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgewogICAgICBrZXk6IHNjZW5lS2V5cy5yYW5raW5nCiAgICB9KTsKICAgIF90aGlzLnNvY2tldCA9IHNvY2tldDsKICAgIF90aGlzLnBvaW50c1RvV2luID0gcG9pbnRzVG9XaW47CiAgICBfdGhpcy5zcGVlZCA9IDMwMDsKICAgIF90aGlzLmFuZ3VsYXJTcGVlZCA9IDEyMDA7CgogICAgX3RoaXMuc29ja2V0Lm9uKHdlYnNvY2tldEV2ZW50cy5TVEFSVF9UVVJOLCBmdW5jdGlvbiAoZ2FtZSkgewogICAgICBfdGhpcy5zY2VuZS5zdG9wKHNjZW5lS2V5cy5nYW1lKTsKCiAgICAgIF90aGlzLnNjZW5lLnN0YXJ0KHNjZW5lS2V5cy5nYW1lLCBfLmNsb25lRGVlcChnYW1lKSk7CiAgICB9KTsKCiAgICByZXR1cm4gX3RoaXM7CiAgfQoKICBfY3JlYXRlQ2xhc3MoUmFua2luZ1NjZW5lLCBbewogICAga2V5OiAiaW5pdCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gaW5pdChkYXRhKSB7CiAgICAgIHRoaXMucGxheWVycyA9IF8uY2xvbmVEZWVwKGRhdGEucGxheWVycyk7CiAgICAgIHRoaXMudGltZXIgPSBkYXRhLnRpbWVyOwogICAgICB0aGlzLmJhbmRXaWR0aCA9IGdhbWVEaW1lbnNpb25zLndpZHRoIC8gKHRoaXMucG9pbnRzVG9XaW4gKyAxKTsKICAgICAgdGhpcy5saW5lSGVpZ2h0ID0gZ2FtZURpbWVuc2lvbnMuaGVpZ2h0IC8gdGhpcy5wbGF5ZXJzLmxlbmd0aDsKICAgICAgdGhpcy5wbGF5ZXJzU3RvcHBlZCA9IDA7CiAgICAgIGNvbnNvbGUubG9nKCJ0aW1lcjogIiArIHRoaXMudGltZXIsICJub3c6ICIgKyBEYXRlLm5vdygpKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJwcmVsb2FkIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBwcmVsb2FkKCkgewogICAgICB0aGlzLmxvYWQuaW1hZ2UoInNoaXAwIiwgIi4vc2hpcHMvc2hpcDAucG5nIik7CiAgICAgIHRoaXMubG9hZC5pbWFnZSgic2hpcDEiLCAiLi9zaGlwcy9zaGlwMS5wbmciKTsKICAgICAgdGhpcy5sb2FkLmltYWdlKCJzaGlwMiIsICIuL3NoaXBzL3NoaXAyLnBuZyIpOwogICAgICB0aGlzLmxvYWQuaW1hZ2UoInNoaXAzIiwgIi4vc2hpcHMvc2hpcDMucG5nIik7CiAgICB9CiAgfSwgewogICAga2V5OiAiY3JlYXRlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdGhpcy5kcmF3RmluaXNoTGluZSgpOwogICAgICB0aGlzLmNyZWF0ZVNoaXBzKCk7CiAgICAgIHRoaXMuc2V0U2hpcHNNb3ZlbWVudHMoKTsKICAgICAgdGhpcy5zY2VuZS5wYXVzZSgpOwogICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpczIuc2NlbmUucmVzdW1lKCk7CiAgICAgIH0sIDEwMDApOwogICAgfQogIH0sIHsKICAgIGtleTogInVwZGF0ZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIGlmICh0aGlzLnRpbWVyIDwgRGF0ZS5ub3coKSkgewogICAgICAgIGNvbnNvbGUubG9nKCJ0aW1lb3V0Iik7CiAgICAgICAgdGhpcy5zY2VuZS5wYXVzZSgpOwogICAgICAgIHRoaXMuc29ja2V0LmVtaXQod2Vic29ja2V0RXZlbnRzLlNUQVJUX1RVUk4pOwogICAgICB9CgogICAgICB0aGlzLnBsYXllcnMuZm9yRWFjaChmdW5jdGlvbiAocGxheWVyKSB7CiAgICAgICAgdmFyIHRhcmdldCA9IF90aGlzMy5iYW5kV2lkdGggKiAocGxheWVyLnRvICsgMC41KTsKCiAgICAgICAgaWYgKHBsYXllci5zaGlwLnggPj0gdGFyZ2V0ICYmIHBsYXllci5zaGlwLmJvZHkudmVsb2NpdHkueCA+IDAgfHwgcGxheWVyLnNoaXAueCA8PSB0YXJnZXQgJiYgcGxheWVyLnNoaXAuYm9keS52ZWxvY2l0eS54IDwgMCkgewogICAgICAgICAgcGxheWVyLnNoaXAuc2V0VmVsb2NpdHlYKDApOwogICAgICAgICAgcGxheWVyLnNoaXAuc2V0QW5ndWxhclZlbG9jaXR5KDApOwogICAgICAgICAgX3RoaXMzLnBsYXllcnNTdG9wcGVkKys7CiAgICAgICAgfQogICAgICB9KTsKCiAgICAgIGlmICh0aGlzLnBsYXllcnNTdG9wcGVkID49IHRoaXMucGxheWVycy5sZW5ndGgpIHsKICAgICAgICB0aGlzLnNjZW5lLnBhdXNlKCk7CiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICBfdGhpczMuc29ja2V0LmVtaXQod2Vic29ja2V0RXZlbnRzLlJFQURZX1RVUk4pOwogICAgICAgIH0sIDEwMDApOwogICAgICB9CiAgICB9CiAgfSwgewogICAga2V5OiAiZHJhd0ZpbmlzaExpbmUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGRyYXdGaW5pc2hMaW5lKCkgewogICAgICB2YXIgZ3JhcGhpY3MgPSB0aGlzLmFkZC5ncmFwaGljcygpOwogICAgICB2YXIgbnVtYmVyT2ZTcXVhcmVzID0gMzsKICAgICAgdmFyIHNxdWFyZURpbSA9IHRoaXMuYmFuZFdpZHRoIC8gbnVtYmVyT2ZTcXVhcmVzOwogICAgICB2YXIgeCA9IHRoaXMuYmFuZFdpZHRoICogdGhpcy5wb2ludHNUb1dpbjsKICAgICAgdmFyIHkgPSAwOwogICAgICB2YXIgY3VycmVudENvbG9yID0gMHgwOwoKICAgICAgd2hpbGUgKHkgPCBnYW1lRGltZW5zaW9ucy5oZWlnaHQpIHsKICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG51bWJlck9mU3F1YXJlczsgaSsrKSB7CiAgICAgICAgICBncmFwaGljcy5maWxsU3R5bGUoY3VycmVudENvbG9yLCAxLjApOwogICAgICAgICAgZ3JhcGhpY3MuZmlsbFJlY3QoeCArIHNxdWFyZURpbSAqIGksIHksIHNxdWFyZURpbSwgc3F1YXJlRGltKTsKICAgICAgICAgIGN1cnJlbnRDb2xvciA9IGN1cnJlbnRDb2xvciA9PT0gMHgwID8gMHhDQ0NDQ0MgOiAweDA7CiAgICAgICAgfQoKICAgICAgICB5ICs9IHNxdWFyZURpbTsKICAgICAgfQogICAgfQogIH0sIHsKICAgIGtleTogImNyZWF0ZVNoaXBzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjcmVhdGVTaGlwcygpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICB0aGlzLnBsYXllcnMuZm9yRWFjaChmdW5jdGlvbiAocGxheWVyLCBpbmRleCkgewogICAgICAgIHBsYXllci5zaGlwID0gX3RoaXM0LnBoeXNpY3MuYWRkLnNwcml0ZShfdGhpczQuYmFuZFdpZHRoICogKHBsYXllci5mcm9tICsgMC41KSwgX3RoaXM0LmxpbmVIZWlnaHQgKiAoaW5kZXggKyAwLjUpLCAic2hpcCIgKyBwbGF5ZXIuY29sb3IpOwogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJzZXRTaGlwc01vdmVtZW50cyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0U2hpcHNNb3ZlbWVudHMoKSB7CiAgICAgIHZhciBfdGhpczUgPSB0aGlzOwoKICAgICAgdGhpcy5wbGF5ZXJzLmZvckVhY2goZnVuY3Rpb24gKHBsYXllcikgewogICAgICAgIHBsYXllci5zaGlwLnNldFZlbG9jaXR5WChNYXRoLnNpZ24ocGxheWVyLnRvIC0gcGxheWVyLmZyb20pICogX3RoaXM1LnNwZWVkKTsKCiAgICAgICAgaWYgKHBsYXllci50byA8IHBsYXllci5mcm9tKSB7CiAgICAgICAgICBwbGF5ZXIuc2hpcC5zZXRBbmd1bGFyVmVsb2NpdHkoX3RoaXM1LmFuZ3VsYXJTcGVlZCk7CiAgICAgICAgfSBlbHNlIGlmIChwbGF5ZXIudG8gPT09IHBsYXllci5mcm9tKSBfdGhpczUucGxheWVyc1N0b3BwZWQrKzsKICAgICAgfSk7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gUmFua2luZ1NjZW5lOwp9KFBoYXNlci5TY2VuZSk7CgpleHBvcnQgeyBSYW5raW5nU2NlbmUgYXMgZGVmYXVsdCB9Ow=="},{"version":3,"sources":["/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/phaser/RankingScene.js"],"names":["Phaser","gameDimensions","sceneKeys","websocketEvents","_","RankingScene","socket","pointsToWin","key","ranking","speed","angularSpeed","on","START_TURN","game","scene","stop","start","cloneDeep","data","players","timer","bandWidth","width","lineHeight","height","length","playersStopped","console","log","Date","now","load","image","drawFinishLine","createShips","setShipsMovements","pause","setTimeout","resume","emit","forEach","player","target","to","ship","x","body","velocity","setVelocityX","setAngularVelocity","READY_TURN","graphics","add","numberOfSquares","squareDim","y","currentColor","i","fillStyle","fillRect","index","physics","sprite","from","color","Math","sign","Scene"],"mappings":"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","sourcesContent":["import Phaser from \"phaser\";\nimport {gameDimensions, sceneKeys} from \"../constants/gameSettings\";\nimport websocketEvents from \"../constants/websocketEvents\";\nimport _ from \"lodash\";\n\nexport default class RankingScene extends Phaser.Scene {\n\n    constructor(socket, pointsToWin) {\n        super({key: sceneKeys.ranking});\n\n        this.socket = socket;\n        this.pointsToWin = pointsToWin;\n\n        this.speed = 300;\n        this.angularSpeed = 1200;\n        this.socket.on(websocketEvents.START_TURN, game => {\n            this.scene.stop(sceneKeys.game);\n            this.scene.start(sceneKeys.game, _.cloneDeep(game));\n        });\n    }\n\n    init(data){\n        this.players = _.cloneDeep(data.players);\n        this.timer = data.timer;\n        this.bandWidth = gameDimensions.width / (this.pointsToWin+1);\n        this.lineHeight = gameDimensions.height / this.players.length;\n        this.playersStopped = 0;\n        console.log(\"timer: \"+this.timer, \"now: \"+Date.now())\n    }\n\n    preload(){\n        this.load.image(\"ship0\", \"./ships/ship0.png\");\n        this.load.image(\"ship1\", \"./ships/ship1.png\");\n        this.load.image(\"ship2\", \"./ships/ship2.png\");\n        this.load.image(\"ship3\", \"./ships/ship3.png\");\n    }\n\n    create(){\n\n        this.drawFinishLine();\n\n        this.createShips();\n\n        this.setShipsMovements();\n        this.scene.pause();\n        setTimeout(()=>{\n            this.scene.resume();\n        }, 1000);\n\n    }\n\n    update(){\n        if(this.timer<Date.now()) {\n            console.log(\"timeout\");\n            this.scene.pause();\n            this.socket.emit(websocketEvents.START_TURN);\n        }\n        this.players.forEach(player => {\n            const target = this.bandWidth * (player.to+0.5);\n            if(\n                (player.ship.x >= target && player.ship.body.velocity.x > 0) ||\n                (player.ship.x <= target && player.ship.body.velocity.x < 0)\n            ) {\n                player.ship.setVelocityX(0);\n                player.ship.setAngularVelocity(0);\n                this.playersStopped++;\n            }\n        });\n        if(this.playersStopped >= this.players.length) {\n            this.scene.pause();\n            setTimeout(()=>{\n                this.socket.emit(websocketEvents.READY_TURN);\n            }, 1000);\n        }\n    }\n\n    drawFinishLine(){\n        const graphics = this.add.graphics();\n        const numberOfSquares = 3;\n        const squareDim = this.bandWidth / numberOfSquares;\n        let x = this.bandWidth * this.pointsToWin;\n        let y = 0;\n        let currentColor = 0x0\n        while( y < gameDimensions.height){\n            for(let i = 0; i < numberOfSquares; i++){\n                graphics.fillStyle(currentColor, 1.0);\n                graphics.fillRect(x+squareDim*i, y, squareDim, squareDim);\n                currentColor = currentColor === 0x0 ? 0xCCCCCC : 0x0;\n            }\n\n            y += squareDim;\n        }\n    }\n\n    createShips(){\n        this.players.forEach((player, index) => {\n            player.ship = this.physics.add.sprite(this.bandWidth * (player.from+0.5), this.lineHeight * (index+0.5), \"ship\"+player.color);\n        });\n    }\n\n    setShipsMovements(){\n        this.players.forEach(player => {\n            player.ship.setVelocityX(Math.sign(player.to-player.from) * this.speed);\n            if(player.to < player.from){\n                player.ship.setAngularVelocity(this.angularSpeed);\n            } else if(player.to === player.from) this.playersStopped++;\n        });\n    }\n}"]}]}
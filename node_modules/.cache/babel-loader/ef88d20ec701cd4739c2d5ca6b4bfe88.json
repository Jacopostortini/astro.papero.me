{"remainingRequest":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/thread-loader/dist/cjs.js!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/babel-loader/lib/index.js!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/eslint-loader/index.js??ref--13-0!/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/constants/mapConstants.js","dependencies":[{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/constants/mapConstants.js","mtime":1617960422747},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/cache-loader/dist/cjs.js","mtime":1616495189815},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/thread-loader/dist/cjs.js","mtime":1616495190967},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/babel-loader/lib/index.js","mtime":1616495189787},{"path":"/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/node_modules/eslint-loader/index.js","mtime":1616495190059}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgZ2FtZURpbWVuc2lvbnMgfSBmcm9tICIuL2dhbWVTZXR0aW5ncyI7IC8vbGV0IGdhbWVEaW1lbnNpb25zID0ge3dpZHRoOiAxMjAwLCBoZWlnaHQ6IDYwMH07Cgp2YXIgZ2V0U3RhcnRpbmdQcmlzb25zID0gZnVuY3Rpb24gZ2V0U3RhcnRpbmdQcmlzb25zKCkgewogIHZhciBvYmpzID0gW107CgogIGZvciAodmFyIGkgPSAwOyBpIDwgNDsgaSsrKSB7CiAgICBmb3IgKHZhciBqID0gMDsgaiA8IDU7IGorKykgewogICAgICBvYmpzLnB1c2goewogICAgICAgIHRleHR1cmU6ICJibG9jazEiLAogICAgICAgIGtpbGxhYmxlOiB0cnVlLAogICAgICAgIHBvc2l0aW9uOiB7CiAgICAgICAgICB4OiAoMTYwIC0gKGogPiAyID8gNjQgKiAoaiAtIDIpIDogMCkpICogKDEgLSBpICUgMikgKyAoZ2FtZURpbWVuc2lvbnMud2lkdGggLSAxNjAgKyAoaiA+IDIgPyA2NCAqIChqIC0gMikgOiAwKSkgKiAoaSAlIDIpLAogICAgICAgICAgeTogaSA8IDIgPyAzMiArIE1hdGgubWluKGogKiA2NCwgMTI4KSA6IGdhbWVEaW1lbnNpb25zLmhlaWdodCAtIDMyIC0gTWF0aC5taW4oaiAqIDY0LCAxMjgpCiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9CgogIHJldHVybiBvYmpzOwp9OwoKdmFyIGdldENlbnRlcmVkU3F1YXJlID0gZnVuY3Rpb24gZ2V0Q2VudGVyZWRTcXVhcmUoc2lkZSkgewogIHZhciBvYmpzID0gW107CiAgdmFyIHN0YXJ0WCA9IDMyICsgKGdhbWVEaW1lbnNpb25zLndpZHRoIC8gMiAtIHNpZGUgLyAyICogNjQpOwogIHZhciBzdGFydFkgPSAzMiArIChnYW1lRGltZW5zaW9ucy5oZWlnaHQgLyAyIC0gc2lkZSAvIDIgKiA2NCk7CgogIGZvciAodmFyIGxpbmUgPSAwOyBsaW5lIDwgc2lkZTsgbGluZSsrKSB7CiAgICBmb3IgKHZhciBjb2wgPSAwOyBjb2wgPCBzaWRlOyBjb2wrKykgewogICAgICBpZiAobGluZSA9PT0gMCB8fCBsaW5lID09PSBzaWRlIC0gMSkgewogICAgICAgIG9ianMucHVzaCh7CiAgICAgICAgICB0ZXh0dXJlOiAiYmxvY2sxIiwKICAgICAgICAgIGtpbGxhYmxlOiB0cnVlLAogICAgICAgICAgcG9zaXRpb246IHsKICAgICAgICAgICAgeDogc3RhcnRYICsgNjQgKiBjb2wsCiAgICAgICAgICAgIHk6IHN0YXJ0WSArIDY0ICogbGluZQogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIGlmIChjb2wgPT09IDAgfHwgY29sID09PSBzaWRlIC0gMSkgewogICAgICAgICAgb2Jqcy5wdXNoKHsKICAgICAgICAgICAgdGV4dHVyZTogImJsb2NrMSIsCiAgICAgICAgICAgIGtpbGxhYmxlOiB0cnVlLAogICAgICAgICAgICBwb3NpdGlvbjogewogICAgICAgICAgICAgIHg6IHN0YXJ0WCArIDY0ICogY29sLAogICAgICAgICAgICAgIHk6IHN0YXJ0WSArIDY0ICogbGluZQogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9CgogIHJldHVybiBvYmpzOwp9OwoKdmFyIGdldE5vdEtpbGxhYmxlU2xhbG9tID0gZnVuY3Rpb24gZ2V0Tm90S2lsbGFibGVTbGFsb20obnVtYmVyLCBjb3ZlclJhdGlvKSB7CiAgdmFyIG9ianMgPSBbXTsKICB2YXIgZ2FwID0gKGdhbWVEaW1lbnNpb25zLndpZHRoIC0gNjQgKiBudW1iZXIpIC8gKG51bWJlciArIDEpOwogIHZhciBoZWlnaHQgPSBnYW1lRGltZW5zaW9ucy5oZWlnaHQgKiBjb3ZlclJhdGlvOwogIHZhciBzY2FsZVkgPSBoZWlnaHQgLyA2NDsKCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBudW1iZXI7IGkrKykgewogICAgb2Jqcy5wdXNoKHsKICAgICAgdGV4dHVyZTogImJsb2NrMiIsCiAgICAgIGtpbGxhYmxlOiBmYWxzZSwKICAgICAgcG9zaXRpb246IHsKICAgICAgICB4OiBnYXAgKiBpICsgMzIsCiAgICAgICAgeTogaSAlIDIgKiAoaGVpZ2h0IC8gMikgKyAoMSAtIGkgJSAyKSAqIChnYW1lRGltZW5zaW9ucyAtIGhlaWdodCAvIDIpCiAgICAgIH0sCiAgICAgIHNjYWxlOiB7CiAgICAgICAgeDogMSwKICAgICAgICB5OiBzY2FsZVkKICAgICAgfQogICAgfSk7CiAgfQoKICByZXR1cm4gb2JqczsKfTsKCmV4cG9ydCB7IGdldFN0YXJ0aW5nUHJpc29ucywgZ2V0Q2VudGVyZWRTcXVhcmUsIGdldE5vdEtpbGxhYmxlU2xhbG9tIH07"},{"version":3,"sources":["/media/jacopo/VolumeDati/Documenti/papero.tk/cosmos.papero.me/src/constants/mapConstants.js"],"names":["gameDimensions","getStartingPrisons","objs","i","j","push","texture","killable","position","x","width","y","Math","min","height","getCenteredSquare","side","startX","startY","line","col","getNotKillableSlalom","number","coverRatio","gap","scaleY","scale"],"mappings":"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","sourcesContent":["import {gameDimensions} from \"./gameSettings\";\n//let gameDimensions = {width: 1200, height: 600};\n\nconst getStartingPrisons = () => {\n    let objs = [];\n    for(let i = 0; i < 4; i++){\n        for(let j = 0; j < 5; j++) {\n            objs.push({\n                texture: \"block1\",\n                killable: true,\n                position: {\n                    x: ( 160 - (j>2 ? 64*(j-2) : 0) ) * (1-i%2)   +   (gameDimensions.width-160 + (j>2 ? 64*(j-2) : 0) ) * (i%2),\n                    y: i<2 ? ( 32 + Math.min(j*64, 128) ) :  (gameDimensions.height-32 - Math.min(j*64, 128))\n                }\n            });\n        }\n    }\n    return objs;\n}\n\nconst getCenteredSquare = (side) => {\n    let objs = [];\n    const startX = 32+(gameDimensions.width/2-side/2*64);\n    const startY = 32+(gameDimensions.height/2-side/2*64);\n    for(let line = 0; line < side; line++){\n        for(let col = 0; col < side; col++){\n            if(line===0 || line === side-1){\n                objs.push({\n                   texture: \"block1\",\n                   killable: true,\n                   position: {\n                       x: startX+64*col,\n                       y: startY+64*line\n                   }\n                });\n            } else {\n                if(col===0 || col===side-1){\n                    objs.push({\n                        texture: \"block1\",\n                        killable: true,\n                        position: {\n                            x: startX+64*col,\n                            y: startY+64*line\n                        }\n                    });\n                }\n            }\n        }\n    }\n    return objs;\n}\n\nconst getNotKillableSlalom = (number, coverRatio) => {\n    let objs = [];\n    const gap = (gameDimensions.width-64*number) / (number+1);\n    const height = gameDimensions.height*coverRatio;\n    const scaleY = height/64;\n    for(let i = 0; i < number; i++){\n        objs.push({\n            texture: \"block2\",\n            killable: false,\n            position: {\n                x: gap*i+32,\n                y: i%2 * (height/2) + (1-i%2) * (gameDimensions-height/2)\n            },\n            scale: {\n                x: 1,\n                y: scaleY\n            }\n        });\n    }\n    return objs;\n}\n\nexport { getStartingPrisons, getCenteredSquare, getNotKillableSlalom };"]}]}